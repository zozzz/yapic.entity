/* Generated by Cython 0.29.21 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [],
        "include_dirs": [
            "./libs/yapic.core/src/yapic/core/include"
        ],
        "language": "c++",
        "name": "yapic.entity._entity",
        "sources": [
            "src/yapic/entity\\_entity.pyx"
        ],
        "undef_macros": [
            "_DEBUG"
        ]
    },
    "module_name": "yapic.entity._entity"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_21"
#define CYTHON_HEX_VERSION 0x001D15F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__yapic__entity___entity
#define __PYX_HAVE_API__yapic__entity___entity
/* Early includes */
#include <string.h>
#include <stdio.h>
#include "yapic/typing.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "src\\yapic\\entity\\_entity.pyx",
  "src\\yapic\\entity\\_entity.pxd",
  "type.pxd",
  "src\\yapic\\entity\\_expression.pxd",
  "src\\yapic\\entity\\_registry.pxd",
  "src\\yapic\\entity\\_field.pxd",
  "src\\yapic\\entity\\_field_impl.pxd",
  "src\\yapic\\entity\\_factory.pxd",
  "src\\yapic\\entity\\_relation.pxd",
  "src\\yapic\\entity\\_virtual_attr.pxd",
  "src\\yapic\\entity\\_trigger.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_5yapic_6entity_11_expression_Visitor;
struct __pyx_obj_5yapic_6entity_11_expression_Expression;
struct __pyx_obj_5yapic_6entity_11_expression_BinaryExpression;
struct __pyx_obj_5yapic_6entity_11_expression_UnaryExpression;
struct __pyx_obj_5yapic_6entity_11_expression_CastExpression;
struct __pyx_obj_5yapic_6entity_11_expression_ConstExpression;
struct __pyx_obj_5yapic_6entity_11_expression_AliasExpression;
struct __pyx_obj_5yapic_6entity_11_expression_DirectionExpression;
struct __pyx_obj_5yapic_6entity_11_expression_CallExpression;
struct __pyx_obj_5yapic_6entity_11_expression_RawExpression;
struct __pyx_obj_5yapic_6entity_11_expression_PathExpression;
struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionVal;
struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionBinary;
struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionDir;
struct __pyx_obj_5yapic_6entity_9_registry_Registry;
struct __pyx_obj_5yapic_6entity_9_registry_RegistryDiff;
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute;
struct __pyx_obj_5yapic_6entity_6_field_Field;
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt;
struct __pyx_obj_5yapic_6entity_6_field_FieldExtension;
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl;
struct __pyx_obj_5yapic_6entity_6_field_FieldImpl;
struct __pyx_obj_5yapic_6entity_6_field_StorageType;
struct __pyx_obj_5yapic_6entity_6_field_StorageTypeFactory;
struct __pyx_obj_5yapic_6entity_6_field_PrimaryKey;
struct __pyx_obj_5yapic_6entity_6_field_AutoIncrement;
struct __pyx_obj_5yapic_6entity_6_field_Index;
struct __pyx_obj_5yapic_6entity_6_field_Unique;
struct __pyx_obj_5yapic_6entity_6_field_ForeignKey;
struct __pyx_obj_5yapic_6entity_11_field_impl_StringImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_BytesImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_IntImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_BoolImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_DateImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_DateTimeImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_DateTimeTzImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_TimeImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_TimeTzImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_NumericImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_FloatImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_UUIDImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_ChoiceImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_EntityTypeImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_JsonImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_JsonArrayImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_CompositeImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_NamedTupleImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_AutoImpl;
struct __pyx_obj_5yapic_6entity_11_field_impl_ArrayImpl;
struct __pyx_obj_5yapic_6entity_8_factory_Factory;
struct __pyx_obj_5yapic_6entity_9_relation_Relation;
struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttribute;
struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttributeImpl;
struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl;
struct __pyx_obj_5yapic_6entity_9_relation_ManyToOne;
struct __pyx_obj_5yapic_6entity_9_relation_OneToMany;
struct __pyx_obj_5yapic_6entity_9_relation_ManyToMany;
struct __pyx_obj_5yapic_6entity_9_relation_ValueStore;
struct __pyx_obj_5yapic_6entity_9_relation_RelatedItem;
struct __pyx_obj_5yapic_6entity_9_relation_RelatedList;
struct __pyx_obj_5yapic_6entity_9_relation_RelatedDict;
struct __pyx_obj_5yapic_6entity_9_relation_Loading;
struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute;
struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl;
struct __pyx_obj_5yapic_6entity_8_trigger_Trigger;
struct __pyx_obj_5yapic_6entity_8_trigger_OnUpdateTrigger;
struct __pyx_obj_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger;
struct __pyx_obj_5yapic_6entity_7_entity_NOTSET;
struct __pyx_obj_5yapic_6entity_7_entity_EntityType;
struct __pyx_obj_5yapic_6entity_7_entity_EntityBase;
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup;
struct __pyx_obj_5yapic_6entity_7_entity_EntityState;
struct __pyx_obj_5yapic_6entity_7_entity_DependencyList;
struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta;
struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions;

/* "_factory.pxd":39
 * 
 * 
 * ctypedef bint (*set_attribute_fn) (object instance, dict attributes)             # <<<<<<<<<<<<<<
 * 
 * @cython.final
 */
typedef int (*__pyx_t_5yapic_6entity_8_factory_set_attribute_fn)(PyObject *, PyObject *);
struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update;

/* "yapic/entity/_entity.pxd":109
 * 
 *     cdef object init(self)
 *     cpdef object update(self, dict data, bint is_initial=*)             # <<<<<<<<<<<<<<
 * 
 *     cdef object set_value(self, EntityAttribute attr, object value)
 */
struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update {
  int __pyx_n;
  int is_initial;
};

/* "_expression.pxd":4
 * 
 * 
 * cdef class Visitor:             # <<<<<<<<<<<<<<
 *     cpdef visit(self, Expression expr)
 * 
 */
struct __pyx_obj_5yapic_6entity_11_expression_Visitor {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Visitor *__pyx_vtab;
};


/* "_expression.pxd":8
 * 
 * 
 * cdef class Expression:             # <<<<<<<<<<<<<<
 *     cpdef visit(self, Visitor visitor)
 *     cpdef asc(self)
 */
struct __pyx_obj_5yapic_6entity_11_expression_Expression {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression *__pyx_vtab;
};


/* "_expression.pxd":18
 * 
 * 
 * cdef class BinaryExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression left
 *     cpdef readonly Expression right
 */
struct __pyx_obj_5yapic_6entity_11_expression_BinaryExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *left;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *right;
  PyObject *op;
  int negated;
};


/* "_expression.pxd":25
 * 
 * 
 * cdef class UnaryExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly object op
 */
struct __pyx_obj_5yapic_6entity_11_expression_UnaryExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *expr;
  PyObject *op;
};


/* "_expression.pxd":30
 * 
 * 
 * cdef class CastExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly object to
 */
struct __pyx_obj_5yapic_6entity_11_expression_CastExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *expr;
  PyObject *to;
};


/* "_expression.pxd":35
 * 
 * 
 * cdef class ConstExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly object value
 *     cpdef readonly type type
 */
struct __pyx_obj_5yapic_6entity_11_expression_ConstExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  PyObject *value;
  PyTypeObject *type;
};


/* "_expression.pxd":40
 * 
 * 
 * cdef class AliasExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly str value
 */
struct __pyx_obj_5yapic_6entity_11_expression_AliasExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *expr;
  PyObject *value;
};


/* "_expression.pxd":48
 * 
 * 
 * cdef class DirectionExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly bint is_asc
 */
struct __pyx_obj_5yapic_6entity_11_expression_DirectionExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *expr;
  int is_asc;
};


/* "_expression.pxd":53
 * 
 * 
 * cdef class CallExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression callable
 *     cpdef readonly tuple args
 */
struct __pyx_obj_5yapic_6entity_11_expression_CallExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *callable;
  PyObject *args;
};


/* "_expression.pxd":58
 * 
 * 
 * cdef class RawExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly str expr
 * 
 */
struct __pyx_obj_5yapic_6entity_11_expression_RawExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  PyObject *expr;
};


/* "_expression.pxd":62
 * 
 * 
 * cdef class PathExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly list _path_
 * 
 */
struct __pyx_obj_5yapic_6entity_11_expression_PathExpression {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  PyObject *_path_;
};


/* "_expression.pxd":66
 * 
 * 
 * cdef class VirtualExpressionVal(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly object _virtual_
 *     cpdef readonly object _source_
 */
struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionVal {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  PyObject *_virtual_;
  PyObject *_source_;
};


/* "_expression.pxd":73
 * 
 * 
 * cdef class VirtualExpressionBinary(BinaryExpression):             # <<<<<<<<<<<<<<
 *     cpdef Expression _create_expr_(self, object q)
 * 
 */
struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionBinary {
  struct __pyx_obj_5yapic_6entity_11_expression_BinaryExpression __pyx_base;
};


/* "_expression.pxd":77
 * 
 * 
 * cdef class VirtualExpressionDir(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly VirtualExpressionVal expr
 *     cpdef readonly object op
 */
struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionDir {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionVal *expr;
  PyObject *op;
};


/* "_registry.pxd":7
 * 
 * @cython.final
 * cdef class Registry:             # <<<<<<<<<<<<<<
 *     cdef readonly object entities
 *     cdef readonly object locals
 */
struct __pyx_obj_5yapic_6entity_9_registry_Registry {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_9_registry_Registry *__pyx_vtab;
  PyObject *entities;
  PyObject *locals;
  PyObject *deferred;
};


/* "_registry.pxd":23
 * 
 * @cython.final
 * cdef class RegistryDiff:             # <<<<<<<<<<<<<<
 *     cdef readonly Registry a
 *     cdef readonly Registry b
 */
struct __pyx_obj_5yapic_6entity_9_registry_RegistryDiff {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_9_registry_RegistryDiff *__pyx_vtab;
  struct __pyx_obj_5yapic_6entity_9_registry_Registry *a;
  struct __pyx_obj_5yapic_6entity_9_registry_Registry *b;
  PyObject *changes;
};


/* "yapic/entity/_entity.pxd":39
 * 
 * 
 * cdef class EntityAttribute(Expression):             # <<<<<<<<<<<<<<
 *     cdef object _impl
 *     cdef readonly str _key_
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute {
  struct __pyx_obj_5yapic_6entity_11_expression_Expression __pyx_base;
  PyObject *_impl;
  PyObject *_key_;
  int _index_;
  PyObject *_name_;
  PyObject *_default_;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *_impl_;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *_entity_;
  PyObject *_exts_;
  PyObject *_deps_;
  int _virtual_;
  int _uid_;
};


/* "_field.pxd":7
 * 
 * 
 * cdef class Field(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef dict type_cache
 *     cdef readonly int min_size
 */
struct __pyx_obj_5yapic_6entity_6_field_Field {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
  PyObject *type_cache;
  int min_size;
  int max_size;
  PyObject *nullable;
};


/* "yapic/entity/_entity.pxd":62
 * 
 * 
 * cdef class EntityAttributeExt:             # <<<<<<<<<<<<<<
 *     cdef readonly EntityAttribute attr
 *     cdef list _tmp
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_vtab;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *attr;
  PyObject *_tmp;
  int bound;
  PyObject *group_by;
};


/* "_field.pxd":27
 * 
 * 
 * cdef class FieldExtension(EntityAttributeExt):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_6_field_FieldExtension {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt __pyx_base;
};


/* "yapic/entity/_entity.pxd":81
 * 
 * 
 * cdef class EntityAttributeImpl:             # <<<<<<<<<<<<<<
 *     cdef bint inited
 * 
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_vtab;
  int inited;
};


/* "_field.pxd":31
 * 
 * 
 * cdef class FieldImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_6_field_FieldImpl {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
};


/* "_field.pxd":35
 * 
 * 
 * cdef class StorageType:             # <<<<<<<<<<<<<<
 *     cdef readonly name
 *     cpdef object encode(self, object value)
 */
struct __pyx_obj_5yapic_6entity_6_field_StorageType {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageType *__pyx_vtab;
  PyObject *name;
};


/* "_field.pxd":41
 * 
 * 
 * cdef class StorageTypeFactory:             # <<<<<<<<<<<<<<
 *     cpdef StorageType create(self, Field field)
 * 
 */
struct __pyx_obj_5yapic_6entity_6_field_StorageTypeFactory {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageTypeFactory *__pyx_vtab;
};


/* "_field.pxd":45
 * 
 * 
 * cdef class PrimaryKey(FieldExtension):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_6_field_PrimaryKey {
  struct __pyx_obj_5yapic_6entity_6_field_FieldExtension __pyx_base;
};


/* "_field.pxd":49
 * 
 * 
 * cdef class AutoIncrement(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType sequence
 * 
 */
struct __pyx_obj_5yapic_6entity_6_field_AutoIncrement {
  struct __pyx_obj_5yapic_6entity_6_field_FieldExtension __pyx_base;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *sequence;
};


/* "_field.pxd":53
 * 
 * 
 * cdef class Index(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 *     cdef readonly str method
 */
struct __pyx_obj_5yapic_6entity_6_field_Index {
  struct __pyx_obj_5yapic_6entity_6_field_FieldExtension __pyx_base;
  PyObject *name;
  PyObject *method;
  int unique;
  PyObject *collate;
  PyObject *expr;
};


/* "_field.pxd":61
 * 
 * 
 * cdef class Unique(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 * 
 */
struct __pyx_obj_5yapic_6entity_6_field_Unique {
  struct __pyx_obj_5yapic_6entity_6_field_FieldExtension __pyx_base;
  PyObject *name;
};


/* "_field.pxd":65
 * 
 * 
 * cdef class ForeignKey(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef object _ref
 *     cdef readonly Field ref
 */
struct __pyx_obj_5yapic_6entity_6_field_ForeignKey {
  struct __pyx_obj_5yapic_6entity_6_field_FieldExtension __pyx_base;
  PyObject *_ref;
  struct __pyx_obj_5yapic_6entity_6_field_Field *ref;
  PyObject *name;
  PyObject *on_update;
  PyObject *on_delete;
};


/* "_field_impl.pxd":5
 * 
 * 
 * cdef class StringImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_StringImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":9
 * 
 * 
 * cdef class BytesImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_BytesImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":13
 * 
 * 
 * cdef class IntImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_IntImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":17
 * 
 * 
 * cdef class BoolImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_BoolImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":21
 * 
 * 
 * cdef class DateImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_DateImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":25
 * 
 * 
 * cdef class DateTimeImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_DateTimeImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":29
 * 
 * 
 * cdef class DateTimeTzImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_DateTimeTzImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":33
 * 
 * 
 * cdef class TimeImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_TimeImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":37
 * 
 * 
 * cdef class TimeTzImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_TimeTzImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":41
 * 
 * 
 * cdef class NumericImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_NumericImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":45
 * 
 * 
 * cdef class FloatImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_FloatImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":49
 * 
 * 
 * cdef class UUIDImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_UUIDImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":53
 * 
 * 
 * cdef class ChoiceImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     cdef object _enum
 *     cdef readonly bint is_multi
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_ChoiceImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
  PyObject *_enum;
  int is_multi;
};


/* "_field_impl.pxd":58
 * 
 * 
 * cdef class EntityTypeImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType _entity_
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_EntityTypeImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *_entity_;
};


/* "_field_impl.pxd":62
 * 
 * 
 * cdef class JsonImpl(EntityTypeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_JsonImpl {
  struct __pyx_obj_5yapic_6entity_11_field_impl_EntityTypeImpl __pyx_base;
};


/* "_field_impl.pxd":66
 * 
 * 
 * cdef class JsonArrayImpl(JsonImpl):             # <<<<<<<<<<<<<<
 *     cdef bint __check_dirty(self, list value)
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_JsonArrayImpl {
  struct __pyx_obj_5yapic_6entity_11_field_impl_JsonImpl __pyx_base;
};


/* "_field_impl.pxd":70
 * 
 * 
 * cdef class CompositeImpl(EntityTypeImpl):             # <<<<<<<<<<<<<<
 *     cpdef object data_for_write(self, EntityBase value, bint for_insert)
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_CompositeImpl {
  struct __pyx_obj_5yapic_6entity_11_field_impl_EntityTypeImpl __pyx_base;
};


/* "_field_impl.pxd":74
 * 
 * 
 * cdef class NamedTupleImpl(CompositeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_NamedTupleImpl {
  struct __pyx_obj_5yapic_6entity_11_field_impl_CompositeImpl __pyx_base;
};


/* "_field_impl.pxd":78
 * 
 * 
 * cdef class AutoImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_AutoImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
};


/* "_field_impl.pxd":82
 * 
 * 
 * cdef class ArrayImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     cdef object _item_impl_
 */
struct __pyx_obj_5yapic_6entity_11_field_impl_ArrayImpl {
  struct __pyx_obj_5yapic_6entity_6_field_FieldImpl __pyx_base;
  PyObject *_item_impl_;
};


/* "_factory.pxd":42
 * 
 * @cython.final
 * cdef class Factory:             # <<<<<<<<<<<<<<
 *     cdef object orig_type
 *     # cdef set_attribute_fn init_attrs
 */
struct __pyx_obj_5yapic_6entity_8_factory_Factory {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_8_factory_Factory *__pyx_vtab;
  PyObject *orig_type;
  PyObject *hints;
  int has_forward_ref;
};


/* "_relation.pxd":10
 * 
 * 
 * cdef class Relation(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef object update_join_expr(self)
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_Relation {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
};


/* "_relation.pxd":15
 * 
 * @cython.final
 * cdef class RelatedAttribute(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef readonly Relation __relation__
 *     cdef readonly EntityAttribute __rattr__
 */
struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttribute {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
  struct __pyx_obj_5yapic_6entity_9_relation_Relation *__relation__;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__rattr__;
  struct __pyx_obj_5yapic_6entity_11_expression_PathExpression *__rpath__;
};


/* "_relation.pxd":21
 * 
 * 
 * cdef class RelatedAttributeImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttributeImpl {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
};


/* "_relation.pxd":25
 * 
 * 
 * cdef class RelationImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     cdef readonly ValueStore state_impl
 *     # orignal joined entity
 */
struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
  struct __pyx_obj_5yapic_6entity_9_relation_ValueStore *state_impl;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *_joined;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *joined;
  PyObject *join_expr;
};


/* "_relation.pxd":40
 * 
 * 
 * cdef class ManyToOne(RelationImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_ManyToOne {
  struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl __pyx_base;
};


/* "_relation.pxd":44
 * 
 * 
 * cdef class OneToMany(RelationImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_OneToMany {
  struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl __pyx_base;
};


/* "_relation.pxd":47
 *     pass
 * 
 * cdef class ManyToMany(RelationImpl):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType _across
 *     cdef readonly EntityType across
 */
struct __pyx_obj_5yapic_6entity_9_relation_ManyToMany {
  struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl __pyx_base;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *_across;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *across;
  PyObject *across_join_expr;
};


/* "_relation.pxd":64
 * 
 * 
 * cdef class ValueStore:             # <<<<<<<<<<<<<<
 *     # cdef object get_value(self)
 *     # cdef bint set_value(self, object value)
 */
struct __pyx_obj_5yapic_6entity_9_relation_ValueStore {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore *__pyx_vtab;
};


/* "_relation.pxd":75
 * 
 * 
 * cdef class RelatedItem(ValueStore):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_RelatedItem {
  struct __pyx_obj_5yapic_6entity_9_relation_ValueStore __pyx_base;
};


/* "_relation.pxd":79
 * 
 * 
 * cdef class RelatedList(ValueStore):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_RelatedList {
  struct __pyx_obj_5yapic_6entity_9_relation_ValueStore __pyx_base;
};


/* "_relation.pxd":83
 * 
 * 
 * cdef class RelatedDict(ValueStore):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_9_relation_RelatedDict {
  struct __pyx_obj_5yapic_6entity_9_relation_ValueStore __pyx_base;
};


/* "_relation.pxd":87
 * 
 * 
 * cdef class Loading(EntityAttributeExt):             # <<<<<<<<<<<<<<
 *     cdef readonly bint always
 *     cdef readonly str eager
 */
struct __pyx_obj_5yapic_6entity_9_relation_Loading {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt __pyx_base;
  int always;
  PyObject *eager;
};


/* "_virtual_attr.pxd":5
 * 
 * 
 * cdef class VirtualAttribute(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef readonly object _get
 *     cdef readonly object _set
 */
struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
  PyObject *_get;
  PyObject *_set;
  PyObject *_del;
  PyObject *_cmp;
  PyObject *_val;
  PyObject *_order;
};


/* "_virtual_attr.pxd":14
 * 
 * 
 * cdef class VirtualAttributeImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     pass
 */
struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
};


/* "_trigger.pxd":4
 * 
 * 
 * cdef class Trigger:             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 *     cdef readonly str before
 */
struct __pyx_obj_5yapic_6entity_8_trigger_Trigger {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_8_trigger_Trigger *__pyx_vtab;
  PyObject *name;
  PyObject *before;
  PyObject *after;
  PyObject *for_each;
  PyObject *when;
  PyObject *params;
  PyObject *args;
  PyObject *body;
  PyObject *unique_name;
};


/* "_trigger.pxd":21
 * 
 * 
 * cdef class OnUpdateTrigger(Trigger):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_8_trigger_OnUpdateTrigger {
  struct __pyx_obj_5yapic_6entity_8_trigger_Trigger __pyx_base;
};


/* "_trigger.pxd":25
 * 
 * 
 * cdef class PolymorphParentDeleteTrigger(Trigger):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType parent_entity
 */
struct __pyx_obj_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger {
  struct __pyx_obj_5yapic_6entity_8_trigger_Trigger __pyx_base;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *parent_entity;
};


/* "yapic/entity/_entity.pxd":8
 * 
 * 
 * cdef class NOTSET:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_5yapic_6entity_7_entity_NOTSET {
  PyObject_HEAD
};


/* "yapic/entity/_entity.pxd":12
 * 
 * 
 * cdef class EntityType(type):             # <<<<<<<<<<<<<<
 *     cdef readonly tuple __attrs__
 *     cdef readonly tuple __fields__
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityType {
  PyHeapTypeObject __pyx_base;
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType *__pyx_vtab;
  PyObject *__attrs__;
  PyObject *__fields__;
  PyObject *__props__;
  PyObject *__pk__;
  PyObject *__deferred__;
  PyObject *__fix_entries__;
  PyObject *__triggers__;
  PyObject *__extgroups__;
  PyObject *registry;
  PyObject *meta;
  PyObject *__deps__;
  PyObject *__weakref__;
};


/* "yapic/entity/_entity.pxd":34
 * 
 * 
 * cdef class EntityBase:             # <<<<<<<<<<<<<<
 *     cdef readonly EntityState __state__
 *     cdef int iter_index
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityBase {
  PyObject_HEAD
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__state__;
  int iter_index;
};


/* "yapic/entity/_entity.pxd":75
 * 
 * 
 * cdef class EntityAttributeExtGroup:             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 *     cdef readonly tuple items
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup {
  PyObject_HEAD
  PyObject *name;
  PyObject *items;
  PyObject *type;
};


/* "yapic/entity/_entity.pxd":98
 * @cython.final
 * @cython.freelist(1000)
 * cdef class EntityState:             # <<<<<<<<<<<<<<
 *     cdef EntityType entity
 *     cdef tuple initial
 */
struct __pyx_obj_5yapic_6entity_7_entity_EntityState {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityState *__pyx_vtab;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *entity;
  PyObject *initial;
  PyObject *current;
  int field_count;
  int exists;
};


/* "yapic/entity/_entity.pxd":127
 * 
 * @cython.final
 * cdef class DependencyList(list):             # <<<<<<<<<<<<<<
 *     cdef list items
 *     cdef dict circular
 */
struct __pyx_obj_5yapic_6entity_7_entity_DependencyList {
  PyListObject __pyx_base;
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_DependencyList *__pyx_vtab;
  PyObject *items;
  PyObject *circular;
};


/* "yapic/entity/_entity.pxd":141
 * 
 * @cython.final
 * cdef class PolymorphMeta:             # <<<<<<<<<<<<<<
 *     cdef readonly tuple id_fields
 *     cdef readonly dict entities
 */
struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta {
  PyObject_HEAD
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_PolymorphMeta *__pyx_vtab;
  PyObject *id_fields;
  PyObject *entities;
};


/* "yapic/entity/_entity.pyx":827
 *         PyTuple_SET_ITEM(<object>current, idx, <object>val)
 * 
 *     def changed_realtions(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 * 
 */
struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions {
  PyObject_HEAD
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr;
  Py_ssize_t __pyx_v_i;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self;
  PyObject *__pyx_v_val;
  Py_ssize_t __pyx_t_0;
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
};



/* "_expression.pxd":4
 * 
 * 
 * cdef class Visitor:             # <<<<<<<<<<<<<<
 *     cpdef visit(self, Expression expr)
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_Visitor {
  PyObject *(*visit)(struct __pyx_obj_5yapic_6entity_11_expression_Visitor *, struct __pyx_obj_5yapic_6entity_11_expression_Expression *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_Visitor *__pyx_vtabptr_5yapic_6entity_11_expression_Visitor;


/* "_expression.pxd":8
 * 
 * 
 * cdef class Expression:             # <<<<<<<<<<<<<<
 *     cpdef visit(self, Visitor visitor)
 *     cpdef asc(self)
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression {
  PyObject *(*visit)(struct __pyx_obj_5yapic_6entity_11_expression_Expression *, struct __pyx_obj_5yapic_6entity_11_expression_Visitor *, int __pyx_skip_dispatch);
  PyObject *(*asc)(struct __pyx_obj_5yapic_6entity_11_expression_Expression *, int __pyx_skip_dispatch);
  PyObject *(*desc)(struct __pyx_obj_5yapic_6entity_11_expression_Expression *, int __pyx_skip_dispatch);
  PyObject *(*cast)(struct __pyx_obj_5yapic_6entity_11_expression_Expression *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*alias)(struct __pyx_obj_5yapic_6entity_11_expression_Expression *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_5yapic_6entity_11_expression_BinaryExpression *(*_new_binary_expr)(struct __pyx_obj_5yapic_6entity_11_expression_Expression *, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression *__pyx_vtabptr_5yapic_6entity_11_expression_Expression;


/* "_expression.pxd":18
 * 
 * 
 * cdef class BinaryExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression left
 *     cpdef readonly Expression right
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_BinaryExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_BinaryExpression *__pyx_vtabptr_5yapic_6entity_11_expression_BinaryExpression;


/* "_expression.pxd":25
 * 
 * 
 * cdef class UnaryExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly object op
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_UnaryExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_UnaryExpression *__pyx_vtabptr_5yapic_6entity_11_expression_UnaryExpression;


/* "_expression.pxd":30
 * 
 * 
 * cdef class CastExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly object to
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_CastExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_CastExpression *__pyx_vtabptr_5yapic_6entity_11_expression_CastExpression;


/* "_expression.pxd":35
 * 
 * 
 * cdef class ConstExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly object value
 *     cpdef readonly type type
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_ConstExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_ConstExpression *__pyx_vtabptr_5yapic_6entity_11_expression_ConstExpression;


/* "_expression.pxd":40
 * 
 * 
 * cdef class AliasExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly str value
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_AliasExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_AliasExpression *__pyx_vtabptr_5yapic_6entity_11_expression_AliasExpression;


/* "_expression.pxd":48
 * 
 * 
 * cdef class DirectionExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression expr
 *     cpdef readonly bint is_asc
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_DirectionExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_DirectionExpression *__pyx_vtabptr_5yapic_6entity_11_expression_DirectionExpression;


/* "_expression.pxd":53
 * 
 * 
 * cdef class CallExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly Expression callable
 *     cpdef readonly tuple args
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_CallExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_CallExpression *__pyx_vtabptr_5yapic_6entity_11_expression_CallExpression;


/* "_expression.pxd":58
 * 
 * 
 * cdef class RawExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly str expr
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_RawExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_RawExpression *__pyx_vtabptr_5yapic_6entity_11_expression_RawExpression;


/* "_expression.pxd":62
 * 
 * 
 * cdef class PathExpression(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly list _path_
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_PathExpression {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_PathExpression *__pyx_vtabptr_5yapic_6entity_11_expression_PathExpression;


/* "_expression.pxd":66
 * 
 * 
 * cdef class VirtualExpressionVal(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly object _virtual_
 *     cpdef readonly object _source_
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionVal {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *(*_create_expr_)(struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionVal *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionVal *__pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionVal;


/* "_expression.pxd":73
 * 
 * 
 * cdef class VirtualExpressionBinary(BinaryExpression):             # <<<<<<<<<<<<<<
 *     cpdef Expression _create_expr_(self, object q)
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionBinary {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_BinaryExpression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *(*_create_expr_)(struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionBinary *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionBinary *__pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionBinary;


/* "_expression.pxd":77
 * 
 * 
 * cdef class VirtualExpressionDir(Expression):             # <<<<<<<<<<<<<<
 *     cpdef readonly VirtualExpressionVal expr
 *     cpdef readonly object op
 */

struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionDir {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
  struct __pyx_obj_5yapic_6entity_11_expression_Expression *(*_create_expr_)(struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionDir *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionDir *__pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionDir;


/* "_registry.pxd":7
 * 
 * @cython.final
 * cdef class Registry:             # <<<<<<<<<<<<<<
 *     cdef readonly object entities
 *     cdef readonly object locals
 */

struct __pyx_vtabstruct_5yapic_6entity_9_registry_Registry {
  PyObject *(*__pyx_register)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *, PyObject *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
  PyObject *(*keys)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *, int __pyx_skip_dispatch);
  PyObject *(*values)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *, int __pyx_skip_dispatch);
  PyObject *(*items)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *, int __pyx_skip_dispatch);
  PyObject *(*filter)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*get_foreign_key_refs)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch);
  PyObject *(*resolve_deferred)(struct __pyx_obj_5yapic_6entity_9_registry_Registry *);
};
static struct __pyx_vtabstruct_5yapic_6entity_9_registry_Registry *__pyx_vtabptr_5yapic_6entity_9_registry_Registry;


/* "_registry.pxd":23
 * 
 * @cython.final
 * cdef class RegistryDiff:             # <<<<<<<<<<<<<<
 *     cdef readonly Registry a
 *     cdef readonly Registry b
 */

struct __pyx_vtabstruct_5yapic_6entity_9_registry_RegistryDiff {
  PyObject *(*compare_data)(struct __pyx_obj_5yapic_6entity_9_registry_RegistryDiff *, PyObject *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_9_registry_RegistryDiff *__pyx_vtabptr_5yapic_6entity_9_registry_RegistryDiff;


/* "yapic/entity/_entity.pyx":388
 * 
 * 
 * cdef class EntityAttribute(Expression):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, *args, **kwargs):
 *         global ENTITY_ATTRIBUTE_UID_COUNTER
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute {
  struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression __pyx_base;
  PyObject *(*init)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *);
  PyObject *(*bind)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
  PyObject *(*clone)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch);
  PyObject *(*get_ext)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*clone_exts)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch);
  PyObject *(*copy_into)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *__pyx_vtabptr_5yapic_6entity_7_entity_EntityAttribute;


/* "_field.pxd":7
 * 
 * 
 * cdef class Field(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef dict type_cache
 *     cdef readonly int min_size
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_Field {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
  struct __pyx_obj_5yapic_6entity_6_field_StorageType *(*get_type)(struct __pyx_obj_5yapic_6entity_6_field_Field *, struct __pyx_obj_5yapic_6entity_6_field_StorageTypeFactory *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_Field *__pyx_vtabptr_5yapic_6entity_6_field_Field;


/* "yapic/entity/_entity.pyx":495
 * 
 * 
 * cdef class EntityAttributeExt:             # <<<<<<<<<<<<<<
 *     @classmethod
 *     def validate_group(self, EntityAttributeExtGroup group):
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt {
  PyObject *(*init)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch);
  PyObject *(*bind)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *, int __pyx_skip_dispatch);
  PyObject *(*clone)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeExt;


/* "_field.pxd":27
 * 
 * 
 * cdef class FieldExtension(EntityAttributeExt):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension *__pyx_vtabptr_5yapic_6entity_6_field_FieldExtension;


/* "yapic/entity/_entity.pyx":563
 * 
 * 
 * cdef class EntityAttributeImpl:             # <<<<<<<<<<<<<<
 *     def __cinit__(self, *args, **kwargs):
 *         self.inited = False
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl {
  PyObject *(*init)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch);
  PyObject *(*clone)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, int __pyx_skip_dispatch);
  PyObject *(*getattr)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*getitem)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*state_init)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, PyObject *);
  PyObject *(*state_set)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, PyObject *, PyObject *, PyObject *);
  PyObject *(*state_get_dirty)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeImpl;


/* "_field.pxd":31
 * 
 * 
 * cdef class FieldImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl *__pyx_vtabptr_5yapic_6entity_6_field_FieldImpl;


/* "_field.pxd":35
 * 
 * 
 * cdef class StorageType:             # <<<<<<<<<<<<<<
 *     cdef readonly name
 *     cpdef object encode(self, object value)
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageType {
  PyObject *(*encode)(struct __pyx_obj_5yapic_6entity_6_field_StorageType *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*decode)(struct __pyx_obj_5yapic_6entity_6_field_StorageType *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageType *__pyx_vtabptr_5yapic_6entity_6_field_StorageType;


/* "_field.pxd":41
 * 
 * 
 * cdef class StorageTypeFactory:             # <<<<<<<<<<<<<<
 *     cpdef StorageType create(self, Field field)
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageTypeFactory {
  struct __pyx_obj_5yapic_6entity_6_field_StorageType *(*create)(struct __pyx_obj_5yapic_6entity_6_field_StorageTypeFactory *, struct __pyx_obj_5yapic_6entity_6_field_Field *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageTypeFactory *__pyx_vtabptr_5yapic_6entity_6_field_StorageTypeFactory;


/* "_field.pxd":45
 * 
 * 
 * cdef class PrimaryKey(FieldExtension):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_PrimaryKey {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_PrimaryKey *__pyx_vtabptr_5yapic_6entity_6_field_PrimaryKey;


/* "_field.pxd":49
 * 
 * 
 * cdef class AutoIncrement(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType sequence
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_AutoIncrement {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_AutoIncrement *__pyx_vtabptr_5yapic_6entity_6_field_AutoIncrement;


/* "_field.pxd":53
 * 
 * 
 * cdef class Index(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 *     cdef readonly str method
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_Index {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_Index *__pyx_vtabptr_5yapic_6entity_6_field_Index;


/* "_field.pxd":61
 * 
 * 
 * cdef class Unique(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_Unique {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_Unique *__pyx_vtabptr_5yapic_6entity_6_field_Unique;


/* "_field.pxd":65
 * 
 * 
 * cdef class ForeignKey(FieldExtension):             # <<<<<<<<<<<<<<
 *     cdef object _ref
 *     cdef readonly Field ref
 */

struct __pyx_vtabstruct_5yapic_6entity_6_field_ForeignKey {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_6_field_ForeignKey *__pyx_vtabptr_5yapic_6entity_6_field_ForeignKey;


/* "_field_impl.pxd":5
 * 
 * 
 * cdef class StringImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_StringImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_StringImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_StringImpl;


/* "_field_impl.pxd":9
 * 
 * 
 * cdef class BytesImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_BytesImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_BytesImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_BytesImpl;


/* "_field_impl.pxd":13
 * 
 * 
 * cdef class IntImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_IntImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_IntImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_IntImpl;


/* "_field_impl.pxd":17
 * 
 * 
 * cdef class BoolImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_BoolImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_BoolImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_BoolImpl;


/* "_field_impl.pxd":21
 * 
 * 
 * cdef class DateImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_DateImpl;


/* "_field_impl.pxd":25
 * 
 * 
 * cdef class DateTimeImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateTimeImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateTimeImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_DateTimeImpl;


/* "_field_impl.pxd":29
 * 
 * 
 * cdef class DateTimeTzImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateTimeTzImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateTimeTzImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_DateTimeTzImpl;


/* "_field_impl.pxd":33
 * 
 * 
 * cdef class TimeImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_TimeImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_TimeImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_TimeImpl;


/* "_field_impl.pxd":37
 * 
 * 
 * cdef class TimeTzImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_TimeTzImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_TimeTzImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_TimeTzImpl;


/* "_field_impl.pxd":41
 * 
 * 
 * cdef class NumericImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_NumericImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_NumericImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_NumericImpl;


/* "_field_impl.pxd":45
 * 
 * 
 * cdef class FloatImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_FloatImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_FloatImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_FloatImpl;


/* "_field_impl.pxd":49
 * 
 * 
 * cdef class UUIDImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_UUIDImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_UUIDImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_UUIDImpl;


/* "_field_impl.pxd":53
 * 
 * 
 * cdef class ChoiceImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     cdef object _enum
 *     cdef readonly bint is_multi
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_ChoiceImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_ChoiceImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_ChoiceImpl;


/* "_field_impl.pxd":58
 * 
 * 
 * cdef class EntityTypeImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType _entity_
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_EntityTypeImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_EntityTypeImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_EntityTypeImpl;


/* "_field_impl.pxd":62
 * 
 * 
 * cdef class JsonImpl(EntityTypeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonImpl {
  struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_EntityTypeImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_JsonImpl;


/* "_field_impl.pxd":66
 * 
 * 
 * cdef class JsonArrayImpl(JsonImpl):             # <<<<<<<<<<<<<<
 *     cdef bint __check_dirty(self, list value)
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonArrayImpl {
  struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonImpl __pyx_base;
  int (*__pyx___check_dirty)(struct __pyx_obj_5yapic_6entity_11_field_impl_JsonArrayImpl *, PyObject *);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonArrayImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_JsonArrayImpl;


/* "_field_impl.pxd":70
 * 
 * 
 * cdef class CompositeImpl(EntityTypeImpl):             # <<<<<<<<<<<<<<
 *     cpdef object data_for_write(self, EntityBase value, bint for_insert)
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_CompositeImpl {
  struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_EntityTypeImpl __pyx_base;
  PyObject *(*data_for_write)(struct __pyx_obj_5yapic_6entity_11_field_impl_CompositeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *, int, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_CompositeImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_CompositeImpl;


/* "_field_impl.pxd":74
 * 
 * 
 * cdef class NamedTupleImpl(CompositeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_NamedTupleImpl {
  struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_CompositeImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_NamedTupleImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_NamedTupleImpl;


/* "_field_impl.pxd":78
 * 
 * 
 * cdef class AutoImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_AutoImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_AutoImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_AutoImpl;


/* "_field_impl.pxd":82
 * 
 * 
 * cdef class ArrayImpl(FieldImpl):             # <<<<<<<<<<<<<<
 *     cdef object _item_impl_
 */

struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_ArrayImpl {
  struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_ArrayImpl *__pyx_vtabptr_5yapic_6entity_11_field_impl_ArrayImpl;


/* "_factory.pxd":42
 * 
 * @cython.final
 * cdef class Factory:             # <<<<<<<<<<<<<<
 *     cdef object orig_type
 *     # cdef set_attribute_fn init_attrs
 */

struct __pyx_vtabstruct_5yapic_6entity_8_factory_Factory {
  struct __pyx_obj_5yapic_6entity_8_factory_Factory *(*create)(PyObject *);
  PyObject *(*invoke)(struct __pyx_obj_5yapic_6entity_8_factory_Factory *);
};
static struct __pyx_vtabstruct_5yapic_6entity_8_factory_Factory *__pyx_vtabptr_5yapic_6entity_8_factory_Factory;


/* "_relation.pxd":10
 * 
 * 
 * cdef class Relation(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef object update_join_expr(self)
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_Relation {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
  PyObject *(*update_join_expr)(struct __pyx_obj_5yapic_6entity_9_relation_Relation *);
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_Relation *__pyx_vtabptr_5yapic_6entity_9_relation_Relation;


/* "_relation.pxd":15
 * 
 * @cython.final
 * cdef class RelatedAttribute(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef readonly Relation __relation__
 *     cdef readonly EntityAttribute __rattr__
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedAttribute {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedAttribute *__pyx_vtabptr_5yapic_6entity_9_relation_RelatedAttribute;


/* "_relation.pxd":21
 * 
 * 
 * cdef class RelatedAttributeImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedAttributeImpl {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedAttributeImpl *__pyx_vtabptr_5yapic_6entity_9_relation_RelatedAttributeImpl;


/* "_relation.pxd":25
 * 
 * 
 * cdef class RelationImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     cdef readonly ValueStore state_impl
 *     # orignal joined entity
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelationImpl {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
  PyObject *(*determine_join_expr)(struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_9_relation_Relation *);
  PyObject *(*resolve_default)(struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl *, struct __pyx_obj_5yapic_6entity_9_relation_Relation *);
  PyObject *(*_eval)(struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl *, struct __pyx_obj_5yapic_6entity_9_relation_Relation *, PyObject *);
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelationImpl *__pyx_vtabptr_5yapic_6entity_9_relation_RelationImpl;


/* "_relation.pxd":40
 * 
 * 
 * cdef class ManyToOne(RelationImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_ManyToOne {
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelationImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_ManyToOne *__pyx_vtabptr_5yapic_6entity_9_relation_ManyToOne;


/* "_relation.pxd":44
 * 
 * 
 * cdef class OneToMany(RelationImpl):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_OneToMany {
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelationImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_OneToMany *__pyx_vtabptr_5yapic_6entity_9_relation_OneToMany;


/* "_relation.pxd":47
 *     pass
 * 
 * cdef class ManyToMany(RelationImpl):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType _across
 *     cdef readonly EntityType across
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_ManyToMany {
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelationImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_ManyToMany *__pyx_vtabptr_5yapic_6entity_9_relation_ManyToMany;


/* "_relation.pxd":64
 * 
 * 
 * cdef class ValueStore:             # <<<<<<<<<<<<<<
 *     # cdef object get_value(self)
 *     # cdef bint set_value(self, object value)
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore {
  PyObject *(*state_init)(struct __pyx_obj_5yapic_6entity_9_relation_ValueStore *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*state_set)(struct __pyx_obj_5yapic_6entity_9_relation_ValueStore *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*state_get_dirty)(struct __pyx_obj_5yapic_6entity_9_relation_ValueStore *, PyObject *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore *__pyx_vtabptr_5yapic_6entity_9_relation_ValueStore;


/* "_relation.pxd":75
 * 
 * 
 * cdef class RelatedItem(ValueStore):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedItem {
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedItem *__pyx_vtabptr_5yapic_6entity_9_relation_RelatedItem;


/* "_relation.pxd":79
 * 
 * 
 * cdef class RelatedList(ValueStore):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedList {
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedList *__pyx_vtabptr_5yapic_6entity_9_relation_RelatedList;


/* "_relation.pxd":83
 * 
 * 
 * cdef class RelatedDict(ValueStore):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedDict {
  struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedDict *__pyx_vtabptr_5yapic_6entity_9_relation_RelatedDict;


/* "_relation.pxd":87
 * 
 * 
 * cdef class Loading(EntityAttributeExt):             # <<<<<<<<<<<<<<
 *     cdef readonly bint always
 *     cdef readonly str eager
 */

struct __pyx_vtabstruct_5yapic_6entity_9_relation_Loading {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_9_relation_Loading *__pyx_vtabptr_5yapic_6entity_9_relation_Loading;


/* "_virtual_attr.pxd":5
 * 
 * 
 * cdef class VirtualAttribute(EntityAttribute):             # <<<<<<<<<<<<<<
 *     cdef readonly object _get
 *     cdef readonly object _set
 */

struct __pyx_vtabstruct_5yapic_6entity_13_virtual_attr_VirtualAttribute {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_13_virtual_attr_VirtualAttribute *__pyx_vtabptr_5yapic_6entity_13_virtual_attr_VirtualAttribute;


/* "_virtual_attr.pxd":14
 * 
 * 
 * cdef class VirtualAttributeImpl(EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *     pass
 */

struct __pyx_vtabstruct_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl {
  struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl *__pyx_vtabptr_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl;


/* "_trigger.pxd":4
 * 
 * 
 * cdef class Trigger:             # <<<<<<<<<<<<<<
 *     cdef readonly str name
 *     cdef readonly str before
 */

struct __pyx_vtabstruct_5yapic_6entity_8_trigger_Trigger {
  PyObject *(*get_unique_name)(struct __pyx_obj_5yapic_6entity_8_trigger_Trigger *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *);
};
static struct __pyx_vtabstruct_5yapic_6entity_8_trigger_Trigger *__pyx_vtabptr_5yapic_6entity_8_trigger_Trigger;


/* "_trigger.pxd":21
 * 
 * 
 * cdef class OnUpdateTrigger(Trigger):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_vtabstruct_5yapic_6entity_8_trigger_OnUpdateTrigger {
  struct __pyx_vtabstruct_5yapic_6entity_8_trigger_Trigger __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_8_trigger_OnUpdateTrigger *__pyx_vtabptr_5yapic_6entity_8_trigger_OnUpdateTrigger;


/* "_trigger.pxd":25
 * 
 * 
 * cdef class PolymorphParentDeleteTrigger(Trigger):             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType parent_entity
 */

struct __pyx_vtabstruct_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger {
  struct __pyx_vtabstruct_5yapic_6entity_8_trigger_Trigger __pyx_base;
};
static struct __pyx_vtabstruct_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger *__pyx_vtabptr_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger;


/* "yapic/entity/_entity.pyx":30
 * 
 * 
 * cdef class EntityType(type):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, *args, **kwargs):
 *         # XXX: DONT REMOVE
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType {
  PyObject *(*resolve_deferred)(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *);
  PyObject *(*__pyx___entity_ready__)(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType *__pyx_vtabptr_5yapic_6entity_7_entity_EntityType;


/* "yapic/entity/_entity.pyx":610
 * @cython.final
 * @cython.freelist(1000)
 * cdef class EntityState:             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, EntityType entity):
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityState {
  PyObject *(*init)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
  PyObject *(*update)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update *__pyx_optional_args);
  PyObject *(*set_value)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *);
  PyObject *(*set_initial_value)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *);
  PyObject *(*get_value)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
  PyObject *(*del_value)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
  PyObject *(*data_for_insert)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
  PyObject *(*data_for_update)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
  PyObject *(*attr_changes)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
  PyObject *(*reset_all)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
  PyObject *(*reset_attr)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityState *__pyx_vtabptr_5yapic_6entity_7_entity_EntityState;
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update *__pyx_optional_args);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_set_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_set_initial_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_del_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_insert(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_all(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_attr(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *);


/* "yapic/entity/_entity.pyx":1055
 * 
 * @cython.final
 * cdef class DependencyList:             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.items = []
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_DependencyList {
  PyObject *(*add)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
  PyObject *(*index)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
  PyObject *(*_add)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);
  PyObject *(*_resolve_circular)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_DependencyList *__pyx_vtabptr_5yapic_6entity_7_entity_DependencyList;
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList_add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList_index(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList__add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList__resolve_circular(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);


/* "yapic/entity/_entity.pyx":1150
 * 
 * @cython.final
 * cdef class PolymorphMeta:             # <<<<<<<<<<<<<<
 *     def __cinit__(self, EntityType ent, object id):
 *         self.id_fields = PolymorphMeta.normalize_id(id)
 */

struct __pyx_vtabstruct_5yapic_6entity_7_entity_PolymorphMeta {
  PyObject *(*normalize_id)(PyObject *);
  PyObject *(*add)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, PyObject *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);
  PyObject *(*parents)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
  PyObject *(*children)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
  PyObject *(*_parents)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_PolymorphMeta *__pyx_vtabptr_5yapic_6entity_7_entity_PolymorphMeta;
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(PyObject *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_add(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, PyObject *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_children(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch);
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta__parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *);

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_str(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_str(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* IncludeStringH.proto */
#include <string.h>

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* PyObjectFormatAndDecref.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f);
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* pop_index.proto */
static PyObject* __Pyx__PyObject_PopNewIndex(PyObject* L, PyObject* py_ix);
static PyObject* __Pyx__PyObject_PopIndex(PyObject* L, PyObject* py_ix);
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static PyObject* __Pyx__PyList_PopIndex(PyObject* L, PyObject* py_ix, Py_ssize_t ix);
#define __Pyx_PyObject_PopIndex(L, py_ix, ix, is_signed, type, to_py_func) (\
    (likely(PyList_CheckExact(L) && __Pyx_fits_Py_ssize_t(ix, type, is_signed))) ?\
        __Pyx__PyList_PopIndex(L, py_ix, ix) : (\
        (unlikely((py_ix) == Py_None)) ? __Pyx__PyObject_PopNewIndex(L, to_py_func(ix)) :\
            __Pyx__PyObject_PopIndex(L, py_ix)))
#define __Pyx_PyList_PopIndex(L, py_ix, ix, is_signed, type, to_py_func) (\
    __Pyx_fits_Py_ssize_t(ix, type, is_signed) ?\
        __Pyx__PyList_PopIndex(L, py_ix, ix) : (\
        (unlikely((py_ix) == Py_None)) ? __Pyx__PyObject_PopNewIndex(L, to_py_func(ix)) :\
            __Pyx__PyObject_PopIndex(L, py_ix)))
#else
#define __Pyx_PyList_PopIndex(L, py_ix, ix, is_signed, type, to_py_func)\
    __Pyx_PyObject_PopIndex(L, py_ix, ix, is_signed, type, to_py_func)
#define __Pyx_PyObject_PopIndex(L, py_ix, ix, is_signed, type, to_py_func) (\
    (unlikely((py_ix) == Py_None)) ? __Pyx__PyObject_PopNewIndex(L, to_py_func(ix)) :\
        __Pyx__PyObject_PopIndex(L, py_ix))
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* ListExtend.proto */
static CYTHON_INLINE int __Pyx_PyList_Extend(PyObject* L, PyObject* v) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject* none = _PyList_Extend((PyListObject*)L, v);
    if (unlikely(!none))
        return -1;
    Py_DECREF(none);
    return 0;
#else
    return PyList_SetSlice(L, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, v);
#endif
}

/* SliceObject.proto */
#define __Pyx_PyObject_DelSlice(obj, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)\
    __Pyx_PyObject_SetSlice(obj, (PyObject*)NULL, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)
static CYTHON_INLINE int __Pyx_PyObject_SetSlice(
        PyObject* obj, PyObject* value, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* PyUnicode_Unicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj);

/* CallableCheck.proto */
#if CYTHON_USE_TYPE_SLOTS && PY_MAJOR_VERSION >= 3
#define __Pyx_PyCallable_Check(obj)   ((obj)->ob_type->tp_call != NULL)
#else
#define __Pyx_PyCallable_Check(obj)   PyCallable_Check(obj)
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* py_dict_pop.proto */
static CYTHON_INLINE PyObject *__Pyx_PyDict_Pop(PyObject *d, PyObject *key, PyObject *default_value);

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* pyfrozenset_new.proto */
static CYTHON_INLINE PyObject* __Pyx_PyFrozenSet_New(PyObject* it);

/* PySetContains.proto */
static CYTHON_INLINE int __Pyx_PySet_ContainsTF(PyObject* key, PyObject* set, int eq);

/* PyDictContains.proto */
static CYTHON_INLINE int __Pyx_PyDict_ContainsTF(PyObject* item, PyObject* dict, int eq) {
    int result = PyDict_Contains(dict, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* py_set_discard.proto */
static CYTHON_INLINE int __Pyx_PySet_Discard(PyObject *set, PyObject *key);

/* CallNextTpDealloc.proto */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyObject *dict);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* ClassMethod.proto */
#include "descrobject.h"
static CYTHON_UNUSED PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* FunctionExport.proto */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig);

/* FunctionImport.proto */
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_5yapic_6entity_7_entity_10EntityType_resolve_deferred(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_10EntityType___entity_ready__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_bind(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone_exts(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_get_ext(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_ext_type, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_copy_into(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_other, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_bind(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_init(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_clone(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getattr(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, CYTHON_UNUSED PyObject *__pyx_v_key, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getitem(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, CYTHON_UNUSED PyObject *__pyx_v_index, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_init(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_initial); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_set(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_initial, CYTHON_UNUSED PyObject *__pyx_v_current, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_get_dirty(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, PyObject *__pyx_v_initial, PyObject *__pyx_v_current); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_data, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_set_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_set_initial_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_del_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_insert(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_all(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_attr(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList_add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item, CYTHON_UNUSED int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList_index(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item, CYTHON_UNUSED int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList__add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_dep, PyObject *__pyx_v_cd); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList__resolve_circular(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_dep, CYTHON_UNUSED PyObject *__pyx_v_cd); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_add(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, PyObject *__pyx_v_id, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, PyObject *__pyx_v_relation); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(PyObject *__pyx_v_id); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, CYTHON_UNUSED int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta__parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, PyObject *__pyx_v_result); /* proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_children(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, CYTHON_UNUSED int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'yapic.entity._expression' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_Visitor = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_Expression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_BinaryExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_UnaryExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_CastExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_ConstExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_AliasExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_DirectionExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_CallExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_RawExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_PathExpression = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionVal = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionBinary = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionDir = 0;

/* Module declarations from 'yapic.entity._registry' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_registry_Registry = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_registry_RegistryDiff = 0;

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'yapic.entity._field' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_Field = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_FieldExtension = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_FieldImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_StorageType = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_StorageTypeFactory = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_PrimaryKey = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_AutoIncrement = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_Index = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_Unique = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_6_field_ForeignKey = 0;

/* Module declarations from 'yapic.entity._field_impl' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_StringImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_BytesImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_IntImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_BoolImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_DateImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_DateTimeImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_DateTimeTzImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_TimeImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_TimeTzImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_NumericImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_FloatImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_UUIDImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_ChoiceImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_EntityTypeImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_JsonImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_JsonArrayImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_CompositeImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_NamedTupleImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_AutoImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_11_field_impl_ArrayImpl = 0;

/* Module declarations from 'yapic.entity._factory' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_8_factory_Factory = 0;
static int (*__pyx_f_5yapic_6entity_8_factory_is_forward_decl)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_5yapic_6entity_8_factory_get_type_hints)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_5yapic_6entity_8_factory_new_instance_from_forward)(PyObject *, PyObject *); /*proto*/

/* Module declarations from 'yapic.entity._relation' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_Relation = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_RelatedAttribute = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_RelatedAttributeImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_RelationImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_ManyToOne = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_OneToMany = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_ManyToMany = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_ValueStore = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_RelatedItem = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_RelatedList = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_RelatedDict = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_9_relation_Loading = 0;

/* Module declarations from 'yapic.entity._virtual_attr' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttribute = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl = 0;

/* Module declarations from 'yapic.entity._trigger' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_8_trigger_Trigger = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_8_trigger_OnUpdateTrigger = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger = 0;

/* Module declarations from 'yapic.entity._entity' */
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_NOTSET = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityType = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityBase = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityAttribute = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExtGroup = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeImpl = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_EntityState = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_DependencyList = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity_PolymorphMeta = 0;
static PyTypeObject *__pyx_ptype_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions = 0;
static int __pyx_v_5yapic_6entity_7_entity_ENTITY_ATTRIBUTE_UID_COUNTER;
static int __pyx_f_5yapic_6entity_7_entity_is_entity_alias(PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_f_5yapic_6entity_7_entity_get_alias_target(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_group_extensions(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *); /*proto*/
static struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_f_5yapic_6entity_7_entity_init_attribute(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5yapic_6entity_7_entity_state_set_value(PyObject *, PyObject *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *); /*proto*/
static int __pyx_f_5yapic_6entity_7_entity__is_dependency(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *); /*proto*/
#define __Pyx_MODULE_NAME "yapic.entity._entity"
extern int __pyx_module_is_main_yapic__entity___entity;
int __pyx_module_is_main_yapic__entity___entity = 0;

/* Implementation of 'yapic.entity._entity' */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_id;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_NameError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_map;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_StopIteration;
static PyObject *__pyx_builtin_sorted;
static const char __pyx_k__4[] = ".";
static const char __pyx_k__5[] = ">";
static const char __pyx_k__6[] = "";
static const char __pyx_k__9[] = "@";
static const char __pyx_k_eq[] = "__eq__";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_of[] = ") of ";
static const char __pyx_k_pk[] = "__pk__";
static const char __pyx_k__10[] = "()";
static const char __pyx_k__11[] = ":";
static const char __pyx_k__12[] = "[";
static const char __pyx_k__13[] = ", ";
static const char __pyx_k__14[] = "]";
static const char __pyx_k__17[] = "<";
static const char __pyx_k__18[] = " ";
static const char __pyx_k_add[] = "add";
static const char __pyx_k_ctx[] = "ctx";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_ent[] = "ent";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_map[] = "map";
static const char __pyx_k_mro[] = "__mro__";
static const char __pyx_k_pop[] = "pop";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_attr[] = "attr";
static const char __pyx_k_bind[] = "bind";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_deps[] = "_deps_";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_meta[] = "__meta__";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_next[] = "__next__";
static const char __pyx_k_repr[] = "repr";
static const char __pyx_k_root[] = "_root";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_type[] = "type";
static const char __pyx_k_Alias[] = "<Alias(";
static const char __pyx_k_alias[] = "alias";
static const char __pyx_k_clone[] = "clone";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_key_2[] = "_key_";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_qname[] = "__qname__";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_scope[] = "scope";
static const char __pyx_k_slots[] = "__slots__";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_Entity[] = "Entity";
static const char __pyx_k_NOTSET[] = "NOTSET";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_entity[] = "entity";
static const char __pyx_k_fields[] = "__fields__";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_init_2[] = "init";
static const char __pyx_k_joined[] = "_joined";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_locals[] = "locals";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_name_3[] = "_name_";
static const char __pyx_k_random[] = "random";
static const char __pyx_k_schema[] = "schema";
static const char __pyx_k_sorted[] = "sorted";
static const char __pyx_k_string[] = "string";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_CASCADE[] = "CASCADE";
static const char __pyx_k_as_dict[] = "as_dict";
static const char __pyx_k_get_ext[] = "get_ext";
static const char __pyx_k_getattr[] = "getattr";
static const char __pyx_k_getitem[] = "getitem";
static const char __pyx_k_index_2[] = "_index_";
static const char __pyx_k_is_type[] = "is_type";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_Entity_s[] = "<Entity %s>";
static const char __pyx_k_KeyError[] = "KeyError";
static const char __pyx_k_REGISTRY[] = "REGISTRY";
static const char __pyx_k_is_alias[] = "is_alias";
static const char __pyx_k_operator[] = "operator";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_registry[] = "__registry__";
static const char __pyx_k_triggers[] = "__triggers__";
static const char __pyx_k_ItemsView[] = "ItemsView";
static const char __pyx_k_NameError[] = "NameError";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_copy_into[] = "copy_into";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_on_delete[] = "on_delete";
static const char __pyx_k_on_update[] = "on_update";
static const char __pyx_k_polymorph[] = "polymorph";
static const char __pyx_k_EntityBase[] = "EntityBase";
static const char __pyx_k_EntityType[] = "EntityType";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_attrgetter[] = "attrgetter";
static const char __pyx_k_clone_exts[] = "clone_exts";
static const char __pyx_k_get_entity[] = "get_entity";
static const char __pyx_k_is_initial[] = "is_initial";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_registry_2[] = "registry";
static const char __pyx_k_EntityState[] = "EntityState";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_entity_ready[] = "__entity_ready__";
static const char __pyx_k_polymorph_id[] = "polymorph_id";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_PolymorphMeta[] = "PolymorphMeta";
static const char __pyx_k_SerializerCtx[] = "SerializerCtx";
static const char __pyx_k_StopIteration[] = "StopIteration";
static const char __pyx_k_init_subclass[] = "__init_subclass__";
static const char __pyx_k_DependencyList[] = "DependencyList";
static const char __pyx_k_validate_group[] = "validate_group";
static const char __pyx_k_EntityAttribute[] = "EntityAttribute";
static const char __pyx_k_collections_abc[] = "collections.abc";
static const char __pyx_k_EntitySerializer[] = "EntitySerializer";
static const char __pyx_k_changed_realtions[] = "changed_realtions";
static const char __pyx_k_entity_serializer[] = "_entity_serializer";
static const char __pyx_k_EntityAttributeExt[] = "EntityAttributeExt";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_EntityAttributeImpl[] = "EntityAttributeImpl";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_yapic_entity__entity[] = "yapic.entity._entity";
static const char __pyx_k_Entity_is_not_resolved[] = "Entity is not resolved...";
static const char __pyx_k_Unsupported_key_type_r[] = "Unsupported key type: %r";
static const char __pyx_k_EntityAttributeExtGroup[] = "EntityAttributeExtGroup";
static const char __pyx_k_Can_t_alias_deferred_entity[] = "Can't alias deferred entity";
static const char __pyx_k_Relation_expected_but_got_r[] = "Relation expected, but got: %r";
static const char __pyx_k_src_yapic_entity__entity_pyx[] = "src\\yapic\\entity\\_entity.pyx";
static const char __pyx_k_Can_t_rebind_entity_attribute[] = "Can't rebind entity attribute";
static const char __pyx_k_EntityState_changed_realtions[] = "EntityState.changed_realtions";
static const char __pyx_k_Can_t_resolve_circular_reference[] = "Can't resolve circular reference";
static const char __pyx_k_Instance_must_be_None_or_EntityB[] = "Instance must be 'None' or 'EntityBase'";
static const char __pyx_k_Missing_attribute_implementation[] = "Missing attribute implementation: %r";
static const char __pyx_k_More_than_one_Entity_base_is_not[] = "More than one Entity base is not allowed";
static const char __pyx_k_Unexpected_value_for_polymorph_i[] = "Unexpected value for polymorph id: %r";
static PyObject *__pyx_kp_u_Alias;
static PyObject *__pyx_n_u_CASCADE;
static PyObject *__pyx_kp_u_Can_t_alias_deferred_entity;
static PyObject *__pyx_kp_u_Can_t_rebind_entity_attribute;
static PyObject *__pyx_kp_u_Can_t_resolve_circular_reference;
static PyObject *__pyx_n_s_DependencyList;
static PyObject *__pyx_n_s_Entity;
static PyObject *__pyx_n_s_EntityAttribute;
static PyObject *__pyx_n_s_EntityAttributeExt;
static PyObject *__pyx_n_s_EntityAttributeExtGroup;
static PyObject *__pyx_n_s_EntityAttributeImpl;
static PyObject *__pyx_n_s_EntityBase;
static PyObject *__pyx_n_s_EntitySerializer;
static PyObject *__pyx_n_s_EntityState;
static PyObject *__pyx_n_s_EntityState_changed_realtions;
static PyObject *__pyx_n_s_EntityType;
static PyObject *__pyx_kp_u_Entity_is_not_resolved;
static PyObject *__pyx_kp_u_Entity_s;
static PyObject *__pyx_kp_u_Instance_must_be_None_or_EntityB;
static PyObject *__pyx_n_s_ItemsView;
static PyObject *__pyx_n_s_KeyError;
static PyObject *__pyx_kp_u_Missing_attribute_implementation;
static PyObject *__pyx_kp_u_More_than_one_Entity_base_is_not;
static PyObject *__pyx_n_s_NOTSET;
static PyObject *__pyx_n_s_NameError;
static PyObject *__pyx_kp_u_None;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_PolymorphMeta;
static PyObject *__pyx_n_s_REGISTRY;
static PyObject *__pyx_kp_u_Relation_expected_but_got_r;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_SerializerCtx;
static PyObject *__pyx_n_s_StopIteration;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_kp_u_Unexpected_value_for_polymorph_i;
static PyObject *__pyx_kp_u_Unsupported_key_type_r;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_u__10;
static PyObject *__pyx_kp_u__11;
static PyObject *__pyx_kp_u__12;
static PyObject *__pyx_kp_u__13;
static PyObject *__pyx_kp_u__14;
static PyObject *__pyx_kp_u__17;
static PyObject *__pyx_kp_u__18;
static PyObject *__pyx_kp_u__4;
static PyObject *__pyx_kp_u__5;
static PyObject *__pyx_kp_u__6;
static PyObject *__pyx_kp_u__9;
static PyObject *__pyx_n_s_add;
static PyObject *__pyx_n_s_alias;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_as_dict;
static PyObject *__pyx_n_s_attr;
static PyObject *__pyx_n_s_attrgetter;
static PyObject *__pyx_n_s_bind;
static PyObject *__pyx_n_s_changed_realtions;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_clone;
static PyObject *__pyx_n_s_clone_exts;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_collections_abc;
static PyObject *__pyx_n_s_copy_into;
static PyObject *__pyx_n_s_ctx;
static PyObject *__pyx_n_s_data;
static PyObject *__pyx_n_s_deps;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_ent;
static PyObject *__pyx_n_s_entity;
static PyObject *__pyx_n_s_entity_ready;
static PyObject *__pyx_n_s_entity_serializer;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_eq;
static PyObject *__pyx_n_s_fields;
static PyObject *__pyx_n_u_fields;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_get_entity;
static PyObject *__pyx_n_s_get_ext;
static PyObject *__pyx_n_s_getattr;
static PyObject *__pyx_n_s_getitem;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_index_2;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_init_2;
static PyObject *__pyx_n_s_init_subclass;
static PyObject *__pyx_n_s_is_alias;
static PyObject *__pyx_n_u_is_alias;
static PyObject *__pyx_n_s_is_initial;
static PyObject *__pyx_n_u_is_type;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_joined;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_key_2;
static PyObject *__pyx_n_s_kwargs;
static PyObject *__pyx_n_s_locals;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_map;
static PyObject *__pyx_n_s_meta;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_mro;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_u_name_2;
static PyObject *__pyx_n_s_name_3;
static PyObject *__pyx_n_s_next;
static PyObject *__pyx_kp_u_of;
static PyObject *__pyx_n_s_on_delete;
static PyObject *__pyx_n_s_on_update;
static PyObject *__pyx_n_s_operator;
static PyObject *__pyx_n_s_pk;
static PyObject *__pyx_n_u_polymorph;
static PyObject *__pyx_n_u_polymorph_id;
static PyObject *__pyx_n_s_pop;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_qname;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_random;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_registry;
static PyObject *__pyx_n_s_registry_2;
static PyObject *__pyx_n_s_repr;
static PyObject *__pyx_n_s_root;
static PyObject *__pyx_n_s_schema;
static PyObject *__pyx_n_u_schema;
static PyObject *__pyx_n_s_scope;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_u_slots;
static PyObject *__pyx_n_s_sorted;
static PyObject *__pyx_kp_s_src_yapic_entity__entity_pyx;
static PyObject *__pyx_n_s_state;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_string;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_triggers;
static PyObject *__pyx_n_u_triggers;
static PyObject *__pyx_n_s_type;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_validate_group;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_yapic_entity__entity;
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_2__init__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v__root, CYTHON_UNUSED PyObject *__pyx_v___fields__, PyObject *__pyx_v_is_alias, PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_8__meta_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__registry_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_9__qname_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_4__prepare__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_6__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_8alias(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_alias); /* proto */
static void __pyx_pf_5yapic_6entity_7_entity_10EntityType_10__dealloc__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__entity_ready__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_9__attrs_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_10__fields_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_9__props_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_6__pk_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__deferred_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries___4__del__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers___4__del__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups___4__del__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_8__deps_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_is_entity_alias(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_o); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_2get_alias_target(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_o); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_2__floordiv__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_4__get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_instance, CYTHON_UNUSED PyObject *__pyx_v_owner); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_instance, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_8__delete__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_instance); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_10clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_12clone_exts(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_14get_ext(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_ext_type); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_16copy_into(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_5_key____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_7_index____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_name____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_9_default____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_impl____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_8_entity____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_exts____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_deps____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_9_virtual____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_5_uid____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_validate_group(CYTHON_UNUSED PyTypeObject *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_group); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_2__cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_4__floordiv__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_6init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_8bind(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_10clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self); /* proto */
static Py_hash_t __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_12__hash__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_14__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_16__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_18__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_4attr___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_type); /* proto */
static Py_hash_t __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_2__hash__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_6__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_8__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4name___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5items___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4type___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_2init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_4clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_6getattr(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_8getitem(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_index); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_10__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_12__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_11EntityState___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_2update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_data, int __pyx_v_is_initial); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_4changes(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_6changes_with_previous(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_8is_dirty___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_8reset(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_10changed_realtions(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_13__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_15__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_6exists___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_state, CYTHON_UNUSED PyObject *__pyx_v_values); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase_2__init__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_data, PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_4__init_subclass__(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_name, struct __pyx_obj_5yapic_6entity_9_registry_Registry *__pyx_v_registry, CYTHON_UNUSED int __pyx_v__root, PyObject *__pyx_v_meta); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__pk_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__pk___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static Py_hash_t __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__hash__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_8__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_10__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_12__iter__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_14__next__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_16__json__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_18__getitem__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_key); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase_20__setitem__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_22serialize(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_ctx); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_24as_dict(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_26__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_9__state_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_14DependencyList___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_14DependencyList_2add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_14DependencyList_4index(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item); /* proto */
static int __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent, PyObject *__pyx_v_id); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_2get_entity(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, PyObject *__pyx_v_poly_id); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_4new_entity(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, PyObject *__pyx_v_poly_id); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_6parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_8children(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_9id_fields___get__(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_8entities___get__(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_NOTSET(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityType(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityBase(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttribute(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeExt(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeExtGroup(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeImpl(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_DependencyList(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_PolymorphMeta(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, &__pyx_n_s_get, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_pop = {0, &__pyx_n_s_pop, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_update = {0, &__pyx_n_s_update, 0, 0, 0};
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_codeobj__21;
/* Late includes */

/* "yapic/entity/_entity.pyx":31
 * 
 * cdef class EntityType(type):
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         # XXX: DONT REMOVE
 *         (name, bases, attrs) = args
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_bases = NULL;
  PyObject *__pyx_v_attrs = NULL;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v___attrs__ = 0;
  PyObject *__pyx_v___triggers__ = 0;
  struct __pyx_obj_5yapic_6entity_8_factory_Factory *__pyx_v_factory = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_aliased = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_base_entity = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_poly_meta = 0;
  PyObject *__pyx_v_hints = 0;
  PyObject *__pyx_v_polymorph = 0;
  PyObject *__pyx_v_base = NULL;
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_v_is_alias = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_found = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_poly_join = NULL;
  struct __pyx_obj_5yapic_6entity_9_relation_Relation *__pyx_v_poly_relation = NULL;
  PyObject *__pyx_v_self_pk = NULL;
  struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttribute *__pyx_v_self_attr = NULL;
  PyObject *__pyx_v_type = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_v_attr_type = NULL;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_v_pk = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_t_17;
  int __pyx_t_18;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":33
 *     def __cinit__(self, *args, **kwargs):
 *         # XXX: DONT REMOVE
 *         (name, bases, attrs) = args             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (1) {
    PyObject* sequence = __pyx_v_args;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 33, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
    __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
    __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 33, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 33, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
  }
  __pyx_v_name = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_bases = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_attrs = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "yapic/entity/_entity.pyx":36
 * 
 * 
 *         cdef list fields = kwargs.get("__fields__", [])             # <<<<<<<<<<<<<<
 *         cdef list __attrs__ = []
 *         cdef list __triggers__ = []
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_kwargs, __pyx_n_u_fields, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(PyList_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 36, __pyx_L1_error)
  __pyx_v_fields = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":37
 * 
 *         cdef list fields = kwargs.get("__fields__", [])
 *         cdef list __attrs__ = []             # <<<<<<<<<<<<<<
 *         cdef list __triggers__ = []
 * 
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v___attrs__ = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":38
 *         cdef list fields = kwargs.get("__fields__", [])
 *         cdef list __attrs__ = []
 *         cdef list __triggers__ = []             # <<<<<<<<<<<<<<
 * 
 *         cdef Factory factory
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v___triggers__ = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":43
 *         cdef EntityAttribute attr
 *         cdef EntityType aliased
 *         cdef EntityType base_entity = None             # <<<<<<<<<<<<<<
 *         cdef PolymorphMeta poly_meta = None
 *         cdef tuple hints
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_base_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)Py_None);

  /* "yapic/entity/_entity.pyx":44
 *         cdef EntityType aliased
 *         cdef EntityType base_entity = None
 *         cdef PolymorphMeta poly_meta = None             # <<<<<<<<<<<<<<
 *         cdef tuple hints
 *         cdef object polymorph = self.__meta__.get("polymorph", None)
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_poly_meta = ((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)Py_None);

  /* "yapic/entity/_entity.pyx":46
 *         cdef PolymorphMeta poly_meta = None
 *         cdef tuple hints
 *         cdef object polymorph = self.__meta__.get("polymorph", None)             # <<<<<<<<<<<<<<
 * 
 *         for base in bases:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_meta); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_get); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_polymorph = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":48
 *         cdef object polymorph = self.__meta__.get("polymorph", None)
 * 
 *         for base in bases:             # <<<<<<<<<<<<<<
 *             if isinstance(base, EntityType):
 *                 if base_entity is None:
 */
  if (likely(PyList_CheckExact(__pyx_v_bases)) || PyTuple_CheckExact(__pyx_v_bases)) {
    __pyx_t_2 = __pyx_v_bases; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_bases); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 48, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 48, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 48, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 48, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 48, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 48, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_base, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":49
 * 
 *         for base in bases:
 *             if isinstance(base, EntityType):             # <<<<<<<<<<<<<<
 *                 if base_entity is None:
 *                     base_entity = base
 */
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_v_base, __pyx_ptype_5yapic_6entity_7_entity_EntityType); 
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":50
 *         for base in bases:
 *             if isinstance(base, EntityType):
 *                 if base_entity is None:             # <<<<<<<<<<<<<<
 *                     base_entity = base
 *                 else:
 */
      __pyx_t_7 = (((PyObject *)__pyx_v_base_entity) == Py_None);
      __pyx_t_6 = (__pyx_t_7 != 0);
      if (likely(__pyx_t_6)) {

        /* "yapic/entity/_entity.pyx":51
 *             if isinstance(base, EntityType):
 *                 if base_entity is None:
 *                     base_entity = base             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError("More than one Entity base is not allowed")
 */
        if (!(likely(((__pyx_v_base) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_base, __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 51, __pyx_L1_error)
        __pyx_t_3 = __pyx_v_base;
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_base_entity, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "yapic/entity/_entity.pyx":50
 *         for base in bases:
 *             if isinstance(base, EntityType):
 *                 if base_entity is None:             # <<<<<<<<<<<<<<
 *                     base_entity = base
 *                 else:
 */
        goto __pyx_L6;
      }

      /* "yapic/entity/_entity.pyx":53
 *                     base_entity = base
 *                 else:
 *                     raise ValueError("More than one Entity base is not allowed")             # <<<<<<<<<<<<<<
 * 
 *             if hasattr(base, "__triggers__"):
 */
      /*else*/ {
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 53, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __PYX_ERR(0, 53, __pyx_L1_error)
      }
      __pyx_L6:;

      /* "yapic/entity/_entity.pyx":49
 * 
 *         for base in bases:
 *             if isinstance(base, EntityType):             # <<<<<<<<<<<<<<
 *                 if base_entity is None:
 *                     base_entity = base
 */
    }

    /* "yapic/entity/_entity.pyx":55
 *                     raise ValueError("More than one Entity base is not allowed")
 * 
 *             if hasattr(base, "__triggers__"):             # <<<<<<<<<<<<<<
 *                 for t in base.__triggers__:
 *                     if t not in __triggers__:
 */
    __pyx_t_6 = __Pyx_HasAttr(__pyx_v_base, __pyx_n_u_triggers); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 55, __pyx_L1_error)
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":56
 * 
 *             if hasattr(base, "__triggers__"):
 *                 for t in base.__triggers__:             # <<<<<<<<<<<<<<
 *                     if t not in __triggers__:
 *                         __triggers__.append(t)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_base, __pyx_n_s_triggers); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
        __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 56, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_1))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 56, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 56, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_9(__pyx_t_1);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 56, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "yapic/entity/_entity.pyx":57
 *             if hasattr(base, "__triggers__"):
 *                 for t in base.__triggers__:
 *                     if t not in __triggers__:             # <<<<<<<<<<<<<<
 *                         __triggers__.append(t)
 * 
 */
        __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_v_t, __pyx_v___triggers__, Py_NE)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 57, __pyx_L1_error)
        __pyx_t_6 = (__pyx_t_7 != 0);
        if (__pyx_t_6) {

          /* "yapic/entity/_entity.pyx":58
 *                 for t in base.__triggers__:
 *                     if t not in __triggers__:
 *                         __triggers__.append(t)             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
          __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___triggers__, __pyx_v_t); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 58, __pyx_L1_error)

          /* "yapic/entity/_entity.pyx":57
 *             if hasattr(base, "__triggers__"):
 *                 for t in base.__triggers__:
 *                     if t not in __triggers__:             # <<<<<<<<<<<<<<
 *                         __triggers__.append(t)
 * 
 */
        }

        /* "yapic/entity/_entity.pyx":56
 * 
 *             if hasattr(base, "__triggers__"):
 *                 for t in base.__triggers__:             # <<<<<<<<<<<<<<
 *                     if t not in __triggers__:
 *                         __triggers__.append(t)
 */
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "yapic/entity/_entity.pyx":55
 *                     raise ValueError("More than one Entity base is not allowed")
 * 
 *             if hasattr(base, "__triggers__"):             # <<<<<<<<<<<<<<
 *                 for t in base.__triggers__:
 *                     if t not in __triggers__:
 */
    }

    /* "yapic/entity/_entity.pyx":48
 *         cdef object polymorph = self.__meta__.get("polymorph", None)
 * 
 *         for base in bases:             # <<<<<<<<<<<<<<
 *             if isinstance(base, EntityType):
 *                 if base_entity is None:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":60
 *                         __triggers__.append(t)
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             is_alias = self.__meta__["is_alias"] is True
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
    __Pyx_XGOTREF(__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_12);
    __Pyx_XGOTREF(__pyx_t_13);
    /*try:*/ {

      /* "yapic/entity/_entity.pyx":61
 * 
 *         try:
 *             is_alias = self.__meta__["is_alias"] is True             # <<<<<<<<<<<<<<
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)
 *         except:
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_meta); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_u_is_alias); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 61, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_6 = (__pyx_t_1 == Py_True);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 61, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_v_is_alias = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "yapic/entity/_entity.pyx":62
 *         try:
 *             is_alias = self.__meta__["is_alias"] is True
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)             # <<<<<<<<<<<<<<
 *         except:
 *             is_alias = False
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_is_alias); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 62, __pyx_L11_error)
      if (__pyx_t_6) {
      } else {
        __Pyx_INCREF(__pyx_v_is_alias);
        __pyx_t_1 = __pyx_v_is_alias;
        goto __pyx_L17_bool_binop_done;
      }
      __pyx_t_4 = PyObject_Length(__pyx_v_bases); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 62, __pyx_L11_error)
      __pyx_t_6 = (__pyx_t_4 == 1);
      if (__pyx_t_6) {
      } else {
        __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L11_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = __pyx_t_2;
        __pyx_t_2 = 0;
        goto __pyx_L17_bool_binop_done;
      }
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_bases, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_2, __pyx_ptype_5yapic_6entity_7_entity_EntityType); 
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __pyx_t_2;
      __pyx_t_2 = 0;
      __pyx_L17_bool_binop_done:;
      __Pyx_DECREF_SET(__pyx_v_is_alias, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "yapic/entity/_entity.pyx":60
 *                         __triggers__.append(t)
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             is_alias = self.__meta__["is_alias"] is True
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)
 */
    }
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    goto __pyx_L16_try_end;
    __pyx_L11_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":63
 *             is_alias = self.__meta__["is_alias"] is True
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)
 *         except:             # <<<<<<<<<<<<<<
 *             is_alias = False
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("yapic.entity._entity.EntityType.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 63, __pyx_L13_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "yapic/entity/_entity.pyx":64
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)
 *         except:
 *             is_alias = False             # <<<<<<<<<<<<<<
 * 
 *         if polymorph:
 */
      __Pyx_INCREF(Py_False);
      __Pyx_XDECREF_SET(__pyx_v_is_alias, Py_False);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L12_exception_handled;
    }
    __pyx_L13_except_error:;

    /* "yapic/entity/_entity.pyx":60
 *                         __triggers__.append(t)
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             is_alias = self.__meta__["is_alias"] is True
 *             is_alias = is_alias and len(bases) == 1 and isinstance(bases[0], EntityType)
 */
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
    goto __pyx_L1_error;
    __pyx_L12_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
    __pyx_L16_try_end:;
  }

  /* "yapic/entity/_entity.pyx":66
 *             is_alias = False
 * 
 *         if polymorph:             # <<<<<<<<<<<<<<
 *             if not isinstance(polymorph, PolymorphMeta):
 *                 polymorph = PolymorphMeta(self, polymorph)
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_polymorph); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 66, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "yapic/entity/_entity.pyx":67
 * 
 *         if polymorph:
 *             if not isinstance(polymorph, PolymorphMeta):             # <<<<<<<<<<<<<<
 *                 polymorph = PolymorphMeta(self, polymorph)
 *                 self.__meta__["polymorph"] = polymorph
 */
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_v_polymorph, __pyx_ptype_5yapic_6entity_7_entity_PolymorphMeta); 
    __pyx_t_7 = ((!(__pyx_t_6 != 0)) != 0);
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":68
 *         if polymorph:
 *             if not isinstance(polymorph, PolymorphMeta):
 *                 polymorph = PolymorphMeta(self, polymorph)             # <<<<<<<<<<<<<<
 *                 self.__meta__["polymorph"] = polymorph
 *             poly_meta = <PolymorphMeta>polymorph
 */
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 68, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(((PyObject *)__pyx_v_self));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
      PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
      __Pyx_INCREF(__pyx_v_polymorph);
      __Pyx_GIVEREF(__pyx_v_polymorph);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_polymorph);
      __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_PolymorphMeta), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 68, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF_SET(__pyx_v_polymorph, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":69
 *             if not isinstance(polymorph, PolymorphMeta):
 *                 polymorph = PolymorphMeta(self, polymorph)
 *                 self.__meta__["polymorph"] = polymorph             # <<<<<<<<<<<<<<
 *             poly_meta = <PolymorphMeta>polymorph
 * 
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_meta); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(PyObject_SetItem(__pyx_t_2, __pyx_n_u_polymorph, __pyx_v_polymorph) < 0)) __PYX_ERR(0, 69, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":67
 * 
 *         if polymorph:
 *             if not isinstance(polymorph, PolymorphMeta):             # <<<<<<<<<<<<<<
 *                 polymorph = PolymorphMeta(self, polymorph)
 *                 self.__meta__["polymorph"] = polymorph
 */
    }

    /* "yapic/entity/_entity.pyx":70
 *                 polymorph = PolymorphMeta(self, polymorph)
 *                 self.__meta__["polymorph"] = polymorph
 *             poly_meta = <PolymorphMeta>polymorph             # <<<<<<<<<<<<<<
 * 
 *         if is_alias:
 */
    __pyx_t_2 = __pyx_v_polymorph;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_poly_meta, ((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":66
 *             is_alias = False
 * 
 *         if polymorph:             # <<<<<<<<<<<<<<
 *             if not isinstance(polymorph, PolymorphMeta):
 *                 polymorph = PolymorphMeta(self, polymorph)
 */
  }

  /* "yapic/entity/_entity.pyx":72
 *             poly_meta = <PolymorphMeta>polymorph
 * 
 *         if is_alias:             # <<<<<<<<<<<<<<
 *             aliased = <EntityType>bases[0]
 * 
 */
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_is_alias); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 72, __pyx_L1_error)
  if (__pyx_t_7) {

    /* "yapic/entity/_entity.pyx":73
 * 
 *         if is_alias:
 *             aliased = <EntityType>bases[0]             # <<<<<<<<<<<<<<
 * 
 *             # aliased.resolve_deferred()
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_bases, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_t_2;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_aliased = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":76
 * 
 *             # aliased.resolve_deferred()
 *             if not aliased.resolve_deferred():             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Can't alias deferred entity")
 * 
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType *)__pyx_v_aliased->__pyx_vtab)->resolve_deferred(__pyx_v_aliased); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 76, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((!__pyx_t_7) != 0);
    if (unlikely(__pyx_t_6)) {

      /* "yapic/entity/_entity.pyx":77
 *             # aliased.resolve_deferred()
 *             if not aliased.resolve_deferred():
 *                 raise RuntimeError("Can't alias deferred entity")             # <<<<<<<<<<<<<<
 * 
 *             for v in aliased.__attrs__:
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 77, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(0, 77, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":76
 * 
 *             # aliased.resolve_deferred()
 *             if not aliased.resolve_deferred():             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Can't alias deferred entity")
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":79
 *                 raise RuntimeError("Can't alias deferred entity")
 * 
 *             for v in aliased.__attrs__:             # <<<<<<<<<<<<<<
 *                 if isinstance(v, EntityAttribute):
 *                     attr = (<EntityAttribute>v).clone()
 */
    if (unlikely(__pyx_v_aliased->__attrs__ == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 79, __pyx_L1_error)
    }
    __pyx_t_3 = __pyx_v_aliased->__attrs__; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    for (;;) {
      if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 79, __pyx_L1_error)
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":80
 * 
 *             for v in aliased.__attrs__:
 *                 if isinstance(v, EntityAttribute):             # <<<<<<<<<<<<<<
 *                     attr = (<EntityAttribute>v).clone()
 *                     attr._key_ = (<EntityAttribute>v)._key_
 */
      __pyx_t_6 = __Pyx_TypeCheck(__pyx_v_v, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute); 
      __pyx_t_7 = (__pyx_t_6 != 0);
      if (__pyx_t_7) {

        /* "yapic/entity/_entity.pyx":81
 *             for v in aliased.__attrs__:
 *                 if isinstance(v, EntityAttribute):
 *                     attr = (<EntityAttribute>v).clone()             # <<<<<<<<<<<<<<
 *                     attr._key_ = (<EntityAttribute>v)._key_
 * 
 */
        __pyx_t_2 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_v)->__pyx_base.__pyx_vtab)->clone(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_v), 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_2));
        __pyx_t_2 = 0;

        /* "yapic/entity/_entity.pyx":82
 *                 if isinstance(v, EntityAttribute):
 *                     attr = (<EntityAttribute>v).clone()
 *                     attr._key_ = (<EntityAttribute>v)._key_             # <<<<<<<<<<<<<<
 * 
 *                     if isinstance(attr, Field):
 */
        __pyx_t_2 = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_v)->_key_;
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_v_attr->_key_);
        __Pyx_DECREF(__pyx_v_attr->_key_);
        __pyx_v_attr->_key_ = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;

        /* "yapic/entity/_entity.pyx":84
 *                     attr._key_ = (<EntityAttribute>v)._key_
 * 
 *                     if isinstance(attr, Field):             # <<<<<<<<<<<<<<
 *                         fields.append(attr)
 *                     else:
 */
        __pyx_t_7 = __Pyx_TypeCheck(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_6_field_Field); 
        __pyx_t_6 = (__pyx_t_7 != 0);
        if (__pyx_t_6) {

          /* "yapic/entity/_entity.pyx":85
 * 
 *                     if isinstance(attr, Field):
 *                         fields.append(attr)             # <<<<<<<<<<<<<<
 *                     else:
 *                         __attrs__.append(attr)
 */
          if (unlikely(__pyx_v_fields == Py_None)) {
            PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
            __PYX_ERR(0, 85, __pyx_L1_error)
          }
          __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_fields, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 85, __pyx_L1_error)

          /* "yapic/entity/_entity.pyx":84
 *                     attr._key_ = (<EntityAttribute>v)._key_
 * 
 *                     if isinstance(attr, Field):             # <<<<<<<<<<<<<<
 *                         fields.append(attr)
 *                     else:
 */
          goto __pyx_L29;
        }

        /* "yapic/entity/_entity.pyx":87
 *                         fields.append(attr)
 *                     else:
 *                         __attrs__.append(attr)             # <<<<<<<<<<<<<<
 * 
 *                     if attr._key_:
 */
        /*else*/ {
          __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___attrs__, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 87, __pyx_L1_error)
        }
        __pyx_L29:;

        /* "yapic/entity/_entity.pyx":89
 *                         __attrs__.append(attr)
 * 
 *                     if attr._key_:             # <<<<<<<<<<<<<<
 *                         setattr(self, attr._key_, attr)
 *         elif fields:
 */
        __pyx_t_6 = (__pyx_v_attr->_key_ != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(__pyx_v_attr->_key_) != 0);
        if (__pyx_t_6) {

          /* "yapic/entity/_entity.pyx":90
 * 
 *                     if attr._key_:
 *                         setattr(self, attr._key_, attr)             # <<<<<<<<<<<<<<
 *         elif fields:
 *             for attr in fields:
 */
          __pyx_t_2 = __pyx_v_attr->_key_;
          __Pyx_INCREF(__pyx_t_2);
          __pyx_t_10 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_t_2, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 90, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "yapic/entity/_entity.pyx":89
 *                         __attrs__.append(attr)
 * 
 *                     if attr._key_:             # <<<<<<<<<<<<<<
 *                         setattr(self, attr._key_, attr)
 *         elif fields:
 */
        }

        /* "yapic/entity/_entity.pyx":80
 * 
 *             for v in aliased.__attrs__:
 *                 if isinstance(v, EntityAttribute):             # <<<<<<<<<<<<<<
 *                     attr = (<EntityAttribute>v).clone()
 *                     attr._key_ = (<EntityAttribute>v)._key_
 */
      }

      /* "yapic/entity/_entity.pyx":79
 *                 raise RuntimeError("Can't alias deferred entity")
 * 
 *             for v in aliased.__attrs__:             # <<<<<<<<<<<<<<
 *                 if isinstance(v, EntityAttribute):
 *                     attr = (<EntityAttribute>v).clone()
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":72
 *             poly_meta = <PolymorphMeta>polymorph
 * 
 *         if is_alias:             # <<<<<<<<<<<<<<
 *             aliased = <EntityType>bases[0]
 * 
 */
    goto __pyx_L24;
  }

  /* "yapic/entity/_entity.pyx":91
 *                     if attr._key_:
 *                         setattr(self, attr._key_, attr)
 *         elif fields:             # <<<<<<<<<<<<<<
 *             for attr in fields:
 *                 attr._key_ = attr._name_
 */
  __pyx_t_6 = (__pyx_v_fields != Py_None)&&(PyList_GET_SIZE(__pyx_v_fields) != 0);
  if (__pyx_t_6) {

    /* "yapic/entity/_entity.pyx":92
 *                         setattr(self, attr._key_, attr)
 *         elif fields:
 *             for attr in fields:             # <<<<<<<<<<<<<<
 *                 attr._key_ = attr._name_
 *                 setattr(self, attr._name_, attr)
 */
    if (unlikely(__pyx_v_fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 92, __pyx_L1_error)
    }
    __pyx_t_3 = __pyx_v_fields; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    for (;;) {
      if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 92, __pyx_L1_error)
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 92, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":93
 *         elif fields:
 *             for attr in fields:
 *                 attr._key_ = attr._name_             # <<<<<<<<<<<<<<
 *                 setattr(self, attr._name_, attr)
 *         else:
 */
      __pyx_t_2 = __pyx_v_attr->_name_;
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_v_attr->_key_);
      __Pyx_DECREF(__pyx_v_attr->_key_);
      __pyx_v_attr->_key_ = ((PyObject*)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":94
 *             for attr in fields:
 *                 attr._key_ = attr._name_
 *                 setattr(self, attr._name_, attr)             # <<<<<<<<<<<<<<
 *         else:
 *             hints = get_type_hints(self)
 */
      __pyx_t_2 = __pyx_v_attr->_name_;
      __Pyx_INCREF(__pyx_t_2);
      __pyx_t_10 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_t_2, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 94, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":92
 *                         setattr(self, attr._key_, attr)
 *         elif fields:
 *             for attr in fields:             # <<<<<<<<<<<<<<
 *                 attr._key_ = attr._name_
 *                 setattr(self, attr._name_, attr)
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":91
 *                     if attr._key_:
 *                         setattr(self, attr._key_, attr)
 *         elif fields:             # <<<<<<<<<<<<<<
 *             for attr in fields:
 *                 attr._key_ = attr._name_
 */
    goto __pyx_L24;
  }

  /* "yapic/entity/_entity.pyx":96
 *                 setattr(self, attr._name_, attr)
 *         else:
 *             hints = get_type_hints(self)             # <<<<<<<<<<<<<<
 * 
 *             if poly_meta and base_entity and base_entity.__pk__:
 */
  /*else*/ {
    __pyx_t_3 = __pyx_f_5yapic_6entity_8_factory_get_type_hints(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 96, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_hints = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":98
 *             hints = get_type_hints(self)
 * 
 *             if poly_meta and base_entity and base_entity.__pk__:             # <<<<<<<<<<<<<<
 *                 found = None
 *                 for i, t in enumerate(__triggers__):
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_poly_meta)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 98, __pyx_L1_error)
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L34_bool_binop_done;
    }
    __pyx_t_7 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_base_entity)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 98, __pyx_L1_error)
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L34_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_base_entity->__pk__ != Py_None)&&(PyTuple_GET_SIZE(__pyx_v_base_entity->__pk__) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L34_bool_binop_done:;
    if (__pyx_t_6) {

      /* "yapic/entity/_entity.pyx":99
 * 
 *             if poly_meta and base_entity and base_entity.__pk__:
 *                 found = None             # <<<<<<<<<<<<<<
 *                 for i, t in enumerate(__triggers__):
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:
 */
      __Pyx_INCREF(Py_None);
      __pyx_v_found = Py_None;

      /* "yapic/entity/_entity.pyx":100
 *             if poly_meta and base_entity and base_entity.__pk__:
 *                 found = None
 *                 for i, t in enumerate(__triggers__):             # <<<<<<<<<<<<<<
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:
 *                         found = i
 */
      __Pyx_INCREF(__pyx_int_0);
      __pyx_t_3 = __pyx_int_0;
      __pyx_t_2 = __pyx_v___triggers__; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      for (;;) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 100, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
        __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_1);
        __pyx_t_1 = 0;
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
        __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3);
        __pyx_t_3 = __pyx_t_1;
        __pyx_t_1 = 0;

        /* "yapic/entity/_entity.pyx":101
 *                 found = None
 *                 for i, t in enumerate(__triggers__):
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:             # <<<<<<<<<<<<<<
 *                         found = i
 *                         break
 */
        __pyx_t_7 = __Pyx_TypeCheck(__pyx_v_t, __pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger); 
        __pyx_t_14 = (__pyx_t_7 != 0);
        if (__pyx_t_14) {
        } else {
          __pyx_t_6 = __pyx_t_14;
          goto __pyx_L40_bool_binop_done;
        }
        __pyx_t_14 = (((struct __pyx_obj_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger *)__pyx_v_t)->parent_entity == __pyx_v_base_entity);
        __pyx_t_7 = (__pyx_t_14 != 0);
        __pyx_t_6 = __pyx_t_7;
        __pyx_L40_bool_binop_done:;
        if (__pyx_t_6) {

          /* "yapic/entity/_entity.pyx":102
 *                 for i, t in enumerate(__triggers__):
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:
 *                         found = i             # <<<<<<<<<<<<<<
 *                         break
 * 
 */
          __Pyx_INCREF(__pyx_v_i);
          __Pyx_DECREF_SET(__pyx_v_found, __pyx_v_i);

          /* "yapic/entity/_entity.pyx":103
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:
 *                         found = i
 *                         break             # <<<<<<<<<<<<<<
 * 
 *                 if found is not None:
 */
          goto __pyx_L38_break;

          /* "yapic/entity/_entity.pyx":101
 *                 found = None
 *                 for i, t in enumerate(__triggers__):
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:             # <<<<<<<<<<<<<<
 *                         found = i
 *                         break
 */
        }

        /* "yapic/entity/_entity.pyx":100
 *             if poly_meta and base_entity and base_entity.__pk__:
 *                 found = None
 *                 for i, t in enumerate(__triggers__):             # <<<<<<<<<<<<<<
 *                     if isinstance(t, PolymorphParentDeleteTrigger) and (<PolymorphParentDeleteTrigger>t).parent_entity is base_entity:
 *                         found = i
 */
      }
      __pyx_L38_break:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":105
 *                         break
 * 
 *                 if found is not None:             # <<<<<<<<<<<<<<
 *                     __triggers__[found] = PolymorphParentDeleteTrigger(base_entity)
 *                 else:
 */
      __pyx_t_6 = (__pyx_v_found != Py_None);
      __pyx_t_7 = (__pyx_t_6 != 0);
      if (__pyx_t_7) {

        /* "yapic/entity/_entity.pyx":106
 * 
 *                 if found is not None:
 *                     __triggers__[found] = PolymorphParentDeleteTrigger(base_entity)             # <<<<<<<<<<<<<<
 *                 else:
 *                     __triggers__.append(PolymorphParentDeleteTrigger(base_entity))
 */
        __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger), ((PyObject *)__pyx_v_base_entity)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(PyObject_SetItem(__pyx_v___triggers__, __pyx_v_found, __pyx_t_3) < 0)) __PYX_ERR(0, 106, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "yapic/entity/_entity.pyx":105
 *                         break
 * 
 *                 if found is not None:             # <<<<<<<<<<<<<<
 *                     __triggers__[found] = PolymorphParentDeleteTrigger(base_entity)
 *                 else:
 */
        goto __pyx_L42;
      }

      /* "yapic/entity/_entity.pyx":108
 *                     __triggers__[found] = PolymorphParentDeleteTrigger(base_entity)
 *                 else:
 *                     __triggers__.append(PolymorphParentDeleteTrigger(base_entity))             # <<<<<<<<<<<<<<
 * 
 *             if poly_meta and base_entity.__fields__:
 */
      /*else*/ {
        __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger), ((PyObject *)__pyx_v_base_entity)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 108, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___triggers__, __pyx_t_3); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 108, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __pyx_L42:;

      /* "yapic/entity/_entity.pyx":98
 *             hints = get_type_hints(self)
 * 
 *             if poly_meta and base_entity and base_entity.__pk__:             # <<<<<<<<<<<<<<
 *                 found = None
 *                 for i, t in enumerate(__triggers__):
 */
    }

    /* "yapic/entity/_entity.pyx":110
 *                     __triggers__.append(PolymorphParentDeleteTrigger(base_entity))
 * 
 *             if poly_meta and base_entity.__fields__:             # <<<<<<<<<<<<<<
 *                 poly_join = None
 *                 poly_relation = Relation(ManyToOne(base_entity, RelatedItem()))
 */
    __pyx_t_6 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_poly_meta)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 110, __pyx_L1_error)
    if (__pyx_t_6) {
    } else {
      __pyx_t_7 = __pyx_t_6;
      goto __pyx_L44_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_base_entity->__fields__ != Py_None)&&(PyTuple_GET_SIZE(__pyx_v_base_entity->__fields__) != 0);
    __pyx_t_7 = __pyx_t_6;
    __pyx_L44_bool_binop_done:;
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":111
 * 
 *             if poly_meta and base_entity.__fields__:
 *                 poly_join = None             # <<<<<<<<<<<<<<
 *                 poly_relation = Relation(ManyToOne(base_entity, RelatedItem()))
 * 
 */
      __Pyx_INCREF(Py_None);
      __pyx_v_poly_join = Py_None;

      /* "yapic/entity/_entity.pyx":112
 *             if poly_meta and base_entity.__fields__:
 *                 poly_join = None
 *                 poly_relation = Relation(ManyToOne(base_entity, RelatedItem()))             # <<<<<<<<<<<<<<
 * 
 *                 for attr in base_entity.__attrs__:
 */
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_5yapic_6entity_9_relation_RelatedItem)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(((PyObject *)__pyx_v_base_entity));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_base_entity));
      PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_base_entity));
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_9_relation_ManyToOne), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5yapic_6entity_9_relation_Relation), __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_poly_relation = ((struct __pyx_obj_5yapic_6entity_9_relation_Relation *)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":114
 *                 poly_relation = Relation(ManyToOne(base_entity, RelatedItem()))
 * 
 *                 for attr in base_entity.__attrs__:             # <<<<<<<<<<<<<<
 *                     if attr.get_ext(PrimaryKey):
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \
 */
      if (unlikely(__pyx_v_base_entity->__attrs__ == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
        __PYX_ERR(0, 114, __pyx_L1_error)
      }
      __pyx_t_2 = __pyx_v_base_entity->__attrs__; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      for (;;) {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 114, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
        if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 114, __pyx_L1_error)
        __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "yapic/entity/_entity.pyx":115
 * 
 *                 for attr in base_entity.__attrs__:
 *                     if attr.get_ext(PrimaryKey):             # <<<<<<<<<<<<<<
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \
 *                             // ForeignKey(attr, on_delete="CASCADE", on_update="CASCADE") \
 */
        __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr->__pyx_base.__pyx_vtab)->get_ext(__pyx_v_attr, ((PyObject *)__pyx_ptype_5yapic_6entity_6_field_PrimaryKey), 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 115, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_7) {

          /* "yapic/entity/_entity.pyx":116
 *                 for attr in base_entity.__attrs__:
 *                     if attr.get_ext(PrimaryKey):
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \             # <<<<<<<<<<<<<<
 *                             // ForeignKey(attr, on_delete="CASCADE", on_update="CASCADE") \
 *                             // PrimaryKey()
 */
          __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_5yapic_6entity_11_field_impl_AutoImpl)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_name, __pyx_v_attr->_name_) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
          __pyx_t_15 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_6_field_Field), __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 116, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "yapic/entity/_entity.pyx":117
 *                     if attr.get_ext(PrimaryKey):
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \
 *                             // ForeignKey(attr, on_delete="CASCADE", on_update="CASCADE") \             # <<<<<<<<<<<<<<
 *                             // PrimaryKey()
 *                         fields.append(self_pk)
 */
          __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_INCREF(((PyObject *)__pyx_v_attr));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
          PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_attr));
          __pyx_t_1 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 117, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_on_delete, __pyx_n_u_CASCADE) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_on_update, __pyx_n_u_CASCADE) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
          __pyx_t_16 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_6_field_ForeignKey), __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 117, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = PyNumber_FloorDivide(__pyx_t_15, __pyx_t_16); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 117, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

          /* "yapic/entity/_entity.pyx":118
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \
 *                             // ForeignKey(attr, on_delete="CASCADE", on_update="CASCADE") \
 *                             // PrimaryKey()             # <<<<<<<<<<<<<<
 *                         fields.append(self_pk)
 *                         (<EntityAttribute>self_pk)._key_ = attr._key_
 */
          __pyx_t_16 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_5yapic_6entity_6_field_PrimaryKey)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 118, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_15 = PyNumber_FloorDivide(__pyx_t_1, __pyx_t_16); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 118, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_XDECREF_SET(__pyx_v_self_pk, __pyx_t_15);
          __pyx_t_15 = 0;

          /* "yapic/entity/_entity.pyx":119
 *                             // ForeignKey(attr, on_delete="CASCADE", on_update="CASCADE") \
 *                             // PrimaryKey()
 *                         fields.append(self_pk)             # <<<<<<<<<<<<<<
 *                         (<EntityAttribute>self_pk)._key_ = attr._key_
 *                         setattr(self, attr._key_, self_pk)
 */
          if (unlikely(__pyx_v_fields == Py_None)) {
            PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
            __PYX_ERR(0, 119, __pyx_L1_error)
          }
          __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_fields, __pyx_v_self_pk); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 119, __pyx_L1_error)

          /* "yapic/entity/_entity.pyx":120
 *                             // PrimaryKey()
 *                         fields.append(self_pk)
 *                         (<EntityAttribute>self_pk)._key_ = attr._key_             # <<<<<<<<<<<<<<
 *                         setattr(self, attr._key_, self_pk)
 * 
 */
          __pyx_t_15 = __pyx_v_attr->_key_;
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_GIVEREF(__pyx_t_15);
          __Pyx_GOTREF(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self_pk)->_key_);
          __Pyx_DECREF(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self_pk)->_key_);
          ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self_pk)->_key_ = ((PyObject*)__pyx_t_15);
          __pyx_t_15 = 0;

          /* "yapic/entity/_entity.pyx":121
 *                         fields.append(self_pk)
 *                         (<EntityAttribute>self_pk)._key_ = attr._key_
 *                         setattr(self, attr._key_, self_pk)             # <<<<<<<<<<<<<<
 * 
 *                         if poly_join is None:
 */
          __pyx_t_15 = __pyx_v_attr->_key_;
          __Pyx_INCREF(__pyx_t_15);
          __pyx_t_10 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_t_15, __pyx_v_self_pk); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 121, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

          /* "yapic/entity/_entity.pyx":123
 *                         setattr(self, attr._key_, self_pk)
 * 
 *                         if poly_join is None:             # <<<<<<<<<<<<<<
 *                             poly_join = self_pk == attr
 *                         else:
 */
          __pyx_t_7 = (__pyx_v_poly_join == Py_None);
          __pyx_t_6 = (__pyx_t_7 != 0);
          if (__pyx_t_6) {

            /* "yapic/entity/_entity.pyx":124
 * 
 *                         if poly_join is None:
 *                             poly_join = self_pk == attr             # <<<<<<<<<<<<<<
 *                         else:
 *                             poly_join &= self_pk == attr
 */
            __pyx_t_15 = PyObject_RichCompare(__pyx_v_self_pk, ((PyObject *)__pyx_v_attr), Py_EQ); __Pyx_XGOTREF(__pyx_t_15); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 124, __pyx_L1_error)
            __Pyx_DECREF_SET(__pyx_v_poly_join, __pyx_t_15);
            __pyx_t_15 = 0;

            /* "yapic/entity/_entity.pyx":123
 *                         setattr(self, attr._key_, self_pk)
 * 
 *                         if poly_join is None:             # <<<<<<<<<<<<<<
 *                             poly_join = self_pk == attr
 *                         else:
 */
            goto __pyx_L49;
          }

          /* "yapic/entity/_entity.pyx":126
 *                             poly_join = self_pk == attr
 *                         else:
 *                             poly_join &= self_pk == attr             # <<<<<<<<<<<<<<
 *                     elif attr._key_:
 *                         # TODO: stateless
 */
          /*else*/ {
            __pyx_t_15 = PyObject_RichCompare(__pyx_v_self_pk, ((PyObject *)__pyx_v_attr), Py_EQ); __Pyx_XGOTREF(__pyx_t_15); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 126, __pyx_L1_error)
            __pyx_t_16 = PyNumber_InPlaceAnd(__pyx_v_poly_join, __pyx_t_15); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 126, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_16);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF_SET(__pyx_v_poly_join, __pyx_t_16);
            __pyx_t_16 = 0;
          }
          __pyx_L49:;

          /* "yapic/entity/_entity.pyx":115
 * 
 *                 for attr in base_entity.__attrs__:
 *                     if attr.get_ext(PrimaryKey):             # <<<<<<<<<<<<<<
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \
 *                             // ForeignKey(attr, on_delete="CASCADE", on_update="CASCADE") \
 */
          goto __pyx_L48;
        }

        /* "yapic/entity/_entity.pyx":127
 *                         else:
 *                             poly_join &= self_pk == attr
 *                     elif attr._key_:             # <<<<<<<<<<<<<<
 *                         # TODO: stateless
 *                         self_attr = RelatedAttribute(poly_relation, name=attr._key_)
 */
        __pyx_t_6 = (__pyx_v_attr->_key_ != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(__pyx_v_attr->_key_) != 0);
        if (__pyx_t_6) {

          /* "yapic/entity/_entity.pyx":129
 *                     elif attr._key_:
 *                         # TODO: stateless
 *                         self_attr = RelatedAttribute(poly_relation, name=attr._key_)             # <<<<<<<<<<<<<<
 *                         __attrs__.append(self_attr)
 *                         (<EntityAttribute>self_attr)._key_ = attr._key_
 */
          __pyx_t_16 = PyTuple_New(1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 129, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_INCREF(((PyObject *)__pyx_v_poly_relation));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_poly_relation));
          PyTuple_SET_ITEM(__pyx_t_16, 0, ((PyObject *)__pyx_v_poly_relation));
          __pyx_t_15 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 129, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          if (PyDict_SetItem(__pyx_t_15, __pyx_n_s_name, __pyx_v_attr->_key_) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
          __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_9_relation_RelatedAttribute), __pyx_t_16, __pyx_t_15); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 129, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF_SET(__pyx_v_self_attr, ((struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttribute *)__pyx_t_1));
          __pyx_t_1 = 0;

          /* "yapic/entity/_entity.pyx":130
 *                         # TODO: stateless
 *                         self_attr = RelatedAttribute(poly_relation, name=attr._key_)
 *                         __attrs__.append(self_attr)             # <<<<<<<<<<<<<<
 *                         (<EntityAttribute>self_attr)._key_ = attr._key_
 *                         if attr._key_:
 */
          __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___attrs__, ((PyObject *)__pyx_v_self_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 130, __pyx_L1_error)

          /* "yapic/entity/_entity.pyx":131
 *                         self_attr = RelatedAttribute(poly_relation, name=attr._key_)
 *                         __attrs__.append(self_attr)
 *                         (<EntityAttribute>self_attr)._key_ = attr._key_             # <<<<<<<<<<<<<<
 *                         if attr._key_:
 *                             setattr(self, attr._key_, self_attr)
 */
          __pyx_t_1 = __pyx_v_attr->_key_;
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_GOTREF(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self_attr)->_key_);
          __Pyx_DECREF(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self_attr)->_key_);
          ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self_attr)->_key_ = ((PyObject*)__pyx_t_1);
          __pyx_t_1 = 0;

          /* "yapic/entity/_entity.pyx":132
 *                         __attrs__.append(self_attr)
 *                         (<EntityAttribute>self_attr)._key_ = attr._key_
 *                         if attr._key_:             # <<<<<<<<<<<<<<
 *                             setattr(self, attr._key_, self_attr)
 * 
 */
          __pyx_t_6 = (__pyx_v_attr->_key_ != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(__pyx_v_attr->_key_) != 0);
          if (__pyx_t_6) {

            /* "yapic/entity/_entity.pyx":133
 *                         (<EntityAttribute>self_attr)._key_ = attr._key_
 *                         if attr._key_:
 *                             setattr(self, attr._key_, self_attr)             # <<<<<<<<<<<<<<
 * 
 *                 (<Relation>poly_relation)._default_ = poly_join
 */
            __pyx_t_1 = __pyx_v_attr->_key_;
            __Pyx_INCREF(__pyx_t_1);
            __pyx_t_10 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_t_1, ((PyObject *)__pyx_v_self_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 133, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "yapic/entity/_entity.pyx":132
 *                         __attrs__.append(self_attr)
 *                         (<EntityAttribute>self_attr)._key_ = attr._key_
 *                         if attr._key_:             # <<<<<<<<<<<<<<
 *                             setattr(self, attr._key_, self_attr)
 * 
 */
          }

          /* "yapic/entity/_entity.pyx":127
 *                         else:
 *                             poly_join &= self_pk == attr
 *                     elif attr._key_:             # <<<<<<<<<<<<<<
 *                         # TODO: stateless
 *                         self_attr = RelatedAttribute(poly_relation, name=attr._key_)
 */
        }
        __pyx_L48:;

        /* "yapic/entity/_entity.pyx":114
 *                 poly_relation = Relation(ManyToOne(base_entity, RelatedItem()))
 * 
 *                 for attr in base_entity.__attrs__:             # <<<<<<<<<<<<<<
 *                     if attr.get_ext(PrimaryKey):
 *                         self_pk = Field(AutoImpl(), name=attr._name_) \
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":135
 *                             setattr(self, attr._key_, self_attr)
 * 
 *                 (<Relation>poly_relation)._default_ = poly_join             # <<<<<<<<<<<<<<
 *                 __attrs__.append(poly_relation)
 *                 poly_meta.add(self.__meta__["polymorph_id"], self, poly_relation)
 */
      __Pyx_INCREF(__pyx_v_poly_join);
      __Pyx_GIVEREF(__pyx_v_poly_join);
      __Pyx_GOTREF(__pyx_v_poly_relation->__pyx_base._default_);
      __Pyx_DECREF(__pyx_v_poly_relation->__pyx_base._default_);
      __pyx_v_poly_relation->__pyx_base._default_ = __pyx_v_poly_join;

      /* "yapic/entity/_entity.pyx":136
 * 
 *                 (<Relation>poly_relation)._default_ = poly_join
 *                 __attrs__.append(poly_relation)             # <<<<<<<<<<<<<<
 *                 poly_meta.add(self.__meta__["polymorph_id"], self, poly_relation)
 * 
 */
      __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___attrs__, ((PyObject *)__pyx_v_poly_relation)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 136, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":137
 *                 (<Relation>poly_relation)._default_ = poly_join
 *                 __attrs__.append(poly_relation)
 *                 poly_meta.add(self.__meta__["polymorph_id"], self, poly_relation)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_meta); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_u_polymorph_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_add(__pyx_v_poly_meta, __pyx_t_1, __pyx_v_self, ((PyObject *)__pyx_v_poly_relation)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":110
 *                     __triggers__.append(PolymorphParentDeleteTrigger(base_entity))
 * 
 *             if poly_meta and base_entity.__fields__:             # <<<<<<<<<<<<<<
 *                 poly_join = None
 *                 poly_relation = Relation(ManyToOne(base_entity, RelatedItem()))
 */
    }

    /* "yapic/entity/_entity.pyx":140
 * 
 * 
 *             if hints[1] is not None:             # <<<<<<<<<<<<<<
 *                 for name, type in (<dict>hints[1]).items():
 *                     if poly_meta and hasattr(base_entity, name):
 */
    if (unlikely(__pyx_v_hints == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 140, __pyx_L1_error)
    }
    __pyx_t_6 = (PyTuple_GET_ITEM(__pyx_v_hints, 1) != Py_None);
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":141
 * 
 *             if hints[1] is not None:
 *                 for name, type in (<dict>hints[1]).items():             # <<<<<<<<<<<<<<
 *                     if poly_meta and hasattr(base_entity, name):
 *                         continue
 */
      __pyx_t_4 = 0;
      if (unlikely(__pyx_v_hints == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 141, __pyx_L1_error)
      }
      if (unlikely(PyTuple_GET_ITEM(__pyx_v_hints, 1) == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 141, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_dict_iterator(((PyObject*)PyTuple_GET_ITEM(__pyx_v_hints, 1)), 1, __pyx_n_s_items, (&__pyx_t_8), (&__pyx_t_17)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 141, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_XDECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_1;
      __pyx_t_1 = 0;
      while (1) {
        __pyx_t_18 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_8, &__pyx_t_4, &__pyx_t_1, &__pyx_t_15, NULL, __pyx_t_17);
        if (unlikely(__pyx_t_18 == 0)) break;
        if (unlikely(__pyx_t_18 == -1)) __PYX_ERR(0, 141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF_SET(__pyx_v_name, __pyx_t_1);
        __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_type, __pyx_t_15);
        __pyx_t_15 = 0;

        /* "yapic/entity/_entity.pyx":142
 *             if hints[1] is not None:
 *                 for name, type in (<dict>hints[1]).items():
 *                     if poly_meta and hasattr(base_entity, name):             # <<<<<<<<<<<<<<
 *                         continue
 * 
 */
        __pyx_t_6 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_poly_meta)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 142, __pyx_L1_error)
        if (__pyx_t_6) {
        } else {
          __pyx_t_7 = __pyx_t_6;
          goto __pyx_L55_bool_binop_done;
        }
        __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v_base_entity), __pyx_v_name); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 142, __pyx_L1_error)
        __pyx_t_14 = (__pyx_t_6 != 0);
        __pyx_t_7 = __pyx_t_14;
        __pyx_L55_bool_binop_done:;
        if (__pyx_t_7) {

          /* "yapic/entity/_entity.pyx":143
 *                 for name, type in (<dict>hints[1]).items():
 *                     if poly_meta and hasattr(base_entity, name):
 *                         continue             # <<<<<<<<<<<<<<
 * 
 *                     factory = Factory.create(type)
 */
          goto __pyx_L52_continue;

          /* "yapic/entity/_entity.pyx":142
 *             if hints[1] is not None:
 *                 for name, type in (<dict>hints[1]).items():
 *                     if poly_meta and hasattr(base_entity, name):             # <<<<<<<<<<<<<<
 *                         continue
 * 
 */
        }

        /* "yapic/entity/_entity.pyx":145
 *                         continue
 * 
 *                     factory = Factory.create(type)             # <<<<<<<<<<<<<<
 *                     if factory is None:
 *                         continue
 */
        __pyx_t_15 = ((PyObject *)__pyx_vtabptr_5yapic_6entity_8_factory_Factory->create(__pyx_v_type)); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 145, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_XDECREF_SET(__pyx_v_factory, ((struct __pyx_obj_5yapic_6entity_8_factory_Factory *)__pyx_t_15));
        __pyx_t_15 = 0;

        /* "yapic/entity/_entity.pyx":146
 * 
 *                     factory = Factory.create(type)
 *                     if factory is None:             # <<<<<<<<<<<<<<
 *                         continue
 * 
 */
        __pyx_t_7 = (((PyObject *)__pyx_v_factory) == Py_None);
        __pyx_t_14 = (__pyx_t_7 != 0);
        if (__pyx_t_14) {

          /* "yapic/entity/_entity.pyx":147
 *                     factory = Factory.create(type)
 *                     if factory is None:
 *                         continue             # <<<<<<<<<<<<<<
 * 
 *                     try:
 */
          goto __pyx_L52_continue;

          /* "yapic/entity/_entity.pyx":146
 * 
 *                     factory = Factory.create(type)
 *                     if factory is None:             # <<<<<<<<<<<<<<
 *                         continue
 * 
 */
        }

        /* "yapic/entity/_entity.pyx":149
 *                         continue
 * 
 *                     try:             # <<<<<<<<<<<<<<
 *                         value = attrs[name]
 *                     except KeyError:
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_13, &__pyx_t_12, &__pyx_t_11);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_12);
          __Pyx_XGOTREF(__pyx_t_11);
          /*try:*/ {

            /* "yapic/entity/_entity.pyx":150
 * 
 *                     try:
 *                         value = attrs[name]             # <<<<<<<<<<<<<<
 *                     except KeyError:
 *                         value = getattr(self, name, NOTSET)
 */
            __pyx_t_15 = __Pyx_PyObject_GetItem(__pyx_v_attrs, __pyx_v_name); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 150, __pyx_L58_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_15);
            __pyx_t_15 = 0;

            /* "yapic/entity/_entity.pyx":149
 *                         continue
 * 
 *                     try:             # <<<<<<<<<<<<<<
 *                         value = attrs[name]
 *                     except KeyError:
 */
          }
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          goto __pyx_L65_try_end;
          __pyx_L58_error:;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "yapic/entity/_entity.pyx":151
 *                     try:
 *                         value = attrs[name]
 *                     except KeyError:             # <<<<<<<<<<<<<<
 *                         value = getattr(self, name, NOTSET)
 *                         if isinstance(value, EntityAttribute):
 */
          __pyx_t_18 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
          if (__pyx_t_18) {
            __Pyx_AddTraceback("yapic.entity._entity.EntityType.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_15, &__pyx_t_1, &__pyx_t_16) < 0) __PYX_ERR(0, 151, __pyx_L60_except_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_GOTREF(__pyx_t_16);

            /* "yapic/entity/_entity.pyx":152
 *                         value = attrs[name]
 *                     except KeyError:
 *                         value = getattr(self, name, NOTSET)             # <<<<<<<<<<<<<<
 *                         if isinstance(value, EntityAttribute):
 *                             value = value.clone()
 */
            __pyx_t_3 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_v_name, ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L60_except_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "yapic/entity/_entity.pyx":153
 *                     except KeyError:
 *                         value = getattr(self, name, NOTSET)
 *                         if isinstance(value, EntityAttribute):             # <<<<<<<<<<<<<<
 *                             value = value.clone()
 * 
 */
            __pyx_t_14 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute); 
            __pyx_t_7 = (__pyx_t_14 != 0);
            if (__pyx_t_7) {

              /* "yapic/entity/_entity.pyx":154
 *                         value = getattr(self, name, NOTSET)
 *                         if isinstance(value, EntityAttribute):
 *                             value = value.clone()             # <<<<<<<<<<<<<<
 * 
 *                     attr_type = factory.hints[0]
 */
              __pyx_t_19 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_clone); if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 154, __pyx_L60_except_error)
              __Pyx_GOTREF(__pyx_t_19);
              __pyx_t_20 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_19))) {
                __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_19);
                if (likely(__pyx_t_20)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_19);
                  __Pyx_INCREF(__pyx_t_20);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_19, function);
                }
              }
              __pyx_t_3 = (__pyx_t_20) ? __Pyx_PyObject_CallOneArg(__pyx_t_19, __pyx_t_20) : __Pyx_PyObject_CallNoArg(__pyx_t_19);
              __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L60_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
              __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_3);
              __pyx_t_3 = 0;

              /* "yapic/entity/_entity.pyx":153
 *                     except KeyError:
 *                         value = getattr(self, name, NOTSET)
 *                         if isinstance(value, EntityAttribute):             # <<<<<<<<<<<<<<
 *                             value = value.clone()
 * 
 */
            }
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            goto __pyx_L59_exception_handled;
          }
          goto __pyx_L60_except_error;
          __pyx_L60_except_error:;

          /* "yapic/entity/_entity.pyx":149
 *                         continue
 * 
 *                     try:             # <<<<<<<<<<<<<<
 *                         value = attrs[name]
 *                     except KeyError:
 */
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_XGIVEREF(__pyx_t_11);
          __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_12, __pyx_t_11);
          goto __pyx_L1_error;
          __pyx_L59_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_XGIVEREF(__pyx_t_11);
          __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_12, __pyx_t_11);
          __pyx_L65_try_end:;
        }

        /* "yapic/entity/_entity.pyx":156
 *                             value = value.clone()
 * 
 *                     attr_type = factory.hints[0]             # <<<<<<<<<<<<<<
 * 
 *                     if issubclass(attr_type, EntityAttribute):
 */
        if (unlikely(__pyx_v_factory->hints == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 156, __pyx_L1_error)
        }
        __pyx_t_16 = PyTuple_GET_ITEM(__pyx_v_factory->hints, 0);
        __Pyx_INCREF(__pyx_t_16);
        __Pyx_XDECREF_SET(__pyx_v_attr_type, __pyx_t_16);
        __pyx_t_16 = 0;

        /* "yapic/entity/_entity.pyx":158
 *                     attr_type = factory.hints[0]
 * 
 *                     if issubclass(attr_type, EntityAttribute):             # <<<<<<<<<<<<<<
 *                         attr = init_attribute(factory(), value)
 *                         attr._key_ = name
 */
        __pyx_t_7 = PyObject_IsSubclass(__pyx_v_attr_type, ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityAttribute)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 158, __pyx_L1_error)
        __pyx_t_14 = (__pyx_t_7 != 0);
        if (__pyx_t_14) {

          /* "yapic/entity/_entity.pyx":159
 * 
 *                     if issubclass(attr_type, EntityAttribute):
 *                         attr = init_attribute(factory(), value)             # <<<<<<<<<<<<<<
 *                         attr._key_ = name
 *                         if not attr._name_:
 */
          __Pyx_INCREF(((PyObject *)__pyx_v_factory));
          __pyx_t_1 = ((PyObject *)__pyx_v_factory); __pyx_t_15 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_15)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_15);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          __pyx_t_16 = (__pyx_t_15) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_15) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (!(likely(((__pyx_t_16) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_16, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 159, __pyx_L1_error)
          __pyx_t_1 = ((PyObject *)__pyx_f_5yapic_6entity_7_entity_init_attribute(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_16), __pyx_v_value)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_1));
          __pyx_t_1 = 0;

          /* "yapic/entity/_entity.pyx":160
 *                     if issubclass(attr_type, EntityAttribute):
 *                         attr = init_attribute(factory(), value)
 *                         attr._key_ = name             # <<<<<<<<<<<<<<
 *                         if not attr._name_:
 *                             attr._name_ = name
 */
          if (!(likely(PyUnicode_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(0, 160, __pyx_L1_error)
          __pyx_t_1 = __pyx_v_name;
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_v_attr->_key_);
          __Pyx_DECREF(__pyx_v_attr->_key_);
          __pyx_v_attr->_key_ = ((PyObject*)__pyx_t_1);
          __pyx_t_1 = 0;

          /* "yapic/entity/_entity.pyx":161
 *                         attr = init_attribute(factory(), value)
 *                         attr._key_ = name
 *                         if not attr._name_:             # <<<<<<<<<<<<<<
 *                             attr._name_ = name
 * 
 */
          __pyx_t_14 = (__pyx_v_attr->_name_ != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(__pyx_v_attr->_name_) != 0);
          __pyx_t_7 = ((!__pyx_t_14) != 0);
          if (__pyx_t_7) {

            /* "yapic/entity/_entity.pyx":162
 *                         attr._key_ = name
 *                         if not attr._name_:
 *                             attr._name_ = name             # <<<<<<<<<<<<<<
 * 
 *                         if isinstance(attr, Field):
 */
            if (!(likely(PyUnicode_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(0, 162, __pyx_L1_error)
            __pyx_t_1 = __pyx_v_name;
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GOTREF(__pyx_v_attr->_name_);
            __Pyx_DECREF(__pyx_v_attr->_name_);
            __pyx_v_attr->_name_ = ((PyObject*)__pyx_t_1);
            __pyx_t_1 = 0;

            /* "yapic/entity/_entity.pyx":161
 *                         attr = init_attribute(factory(), value)
 *                         attr._key_ = name
 *                         if not attr._name_:             # <<<<<<<<<<<<<<
 *                             attr._name_ = name
 * 
 */
          }

          /* "yapic/entity/_entity.pyx":164
 *                             attr._name_ = name
 * 
 *                         if isinstance(attr, Field):             # <<<<<<<<<<<<<<
 *                             fields.append(attr)
 *                         else:
 */
          __pyx_t_7 = __Pyx_TypeCheck(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_6_field_Field); 
          __pyx_t_14 = (__pyx_t_7 != 0);
          if (__pyx_t_14) {

            /* "yapic/entity/_entity.pyx":165
 * 
 *                         if isinstance(attr, Field):
 *                             fields.append(attr)             # <<<<<<<<<<<<<<
 *                         else:
 *                             __attrs__.append(attr)
 */
            if (unlikely(__pyx_v_fields == Py_None)) {
              PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
              __PYX_ERR(0, 165, __pyx_L1_error)
            }
            __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_fields, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 165, __pyx_L1_error)

            /* "yapic/entity/_entity.pyx":164
 *                             attr._name_ = name
 * 
 *                         if isinstance(attr, Field):             # <<<<<<<<<<<<<<
 *                             fields.append(attr)
 *                         else:
 */
            goto __pyx_L71;
          }

          /* "yapic/entity/_entity.pyx":167
 *                             fields.append(attr)
 *                         else:
 *                             __attrs__.append(attr)             # <<<<<<<<<<<<<<
 * 
 *                         setattr(self, name, attr)
 */
          /*else*/ {
            __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___attrs__, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 167, __pyx_L1_error)
          }
          __pyx_L71:;

          /* "yapic/entity/_entity.pyx":169
 *                             __attrs__.append(attr)
 * 
 *                         setattr(self, name, attr)             # <<<<<<<<<<<<<<
 * 
 *         # add virtual attributes
 */
          __pyx_t_10 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_v_name, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 169, __pyx_L1_error)

          /* "yapic/entity/_entity.pyx":158
 *                     attr_type = factory.hints[0]
 * 
 *                     if issubclass(attr_type, EntityAttribute):             # <<<<<<<<<<<<<<
 *                         attr = init_attribute(factory(), value)
 *                         attr._key_ = name
 */
        }
        __pyx_L52_continue:;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":140
 * 
 * 
 *             if hints[1] is not None:             # <<<<<<<<<<<<<<
 *                 for name, type in (<dict>hints[1]).items():
 *                     if poly_meta and hasattr(base_entity, name):
 */
    }
  }
  __pyx_L24:;

  /* "yapic/entity/_entity.pyx":172
 * 
 *         # add virtual attributes
 *         for k, v in attrs.items():             # <<<<<<<<<<<<<<
 *             if isinstance(v, VirtualAttribute):
 *                 if not (<VirtualAttribute>v)._key_:
 */
  __pyx_t_8 = 0;
  if (unlikely(__pyx_v_attrs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 172, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_dict_iterator(__pyx_v_attrs, 0, __pyx_n_s_items, (&__pyx_t_4), (&__pyx_t_17)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __pyx_t_2 = __pyx_t_1;
  __pyx_t_1 = 0;
  while (1) {
    __pyx_t_18 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_4, &__pyx_t_8, &__pyx_t_1, &__pyx_t_16, NULL, __pyx_t_17);
    if (unlikely(__pyx_t_18 == 0)) break;
    if (unlikely(__pyx_t_18 == -1)) __PYX_ERR(0, 172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_16);
    __pyx_t_16 = 0;

    /* "yapic/entity/_entity.pyx":173
 *         # add virtual attributes
 *         for k, v in attrs.items():
 *             if isinstance(v, VirtualAttribute):             # <<<<<<<<<<<<<<
 *                 if not (<VirtualAttribute>v)._key_:
 *                     __attrs__.append(v)
 */
    __pyx_t_14 = __Pyx_TypeCheck(__pyx_v_v, __pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttribute); 
    __pyx_t_7 = (__pyx_t_14 != 0);
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":174
 *         for k, v in attrs.items():
 *             if isinstance(v, VirtualAttribute):
 *                 if not (<VirtualAttribute>v)._key_:             # <<<<<<<<<<<<<<
 *                     __attrs__.append(v)
 *                     (<VirtualAttribute>v)._key_ = k
 */
      __pyx_t_7 = (((struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute *)__pyx_v_v)->__pyx_base._key_ != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(((struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute *)__pyx_v_v)->__pyx_base._key_) != 0);
      __pyx_t_14 = ((!__pyx_t_7) != 0);
      if (__pyx_t_14) {

        /* "yapic/entity/_entity.pyx":175
 *             if isinstance(v, VirtualAttribute):
 *                 if not (<VirtualAttribute>v)._key_:
 *                     __attrs__.append(v)             # <<<<<<<<<<<<<<
 *                     (<VirtualAttribute>v)._key_ = k
 * 
 */
        __pyx_t_10 = __Pyx_PyList_Append(__pyx_v___attrs__, __pyx_v_v); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 175, __pyx_L1_error)

        /* "yapic/entity/_entity.pyx":176
 *                 if not (<VirtualAttribute>v)._key_:
 *                     __attrs__.append(v)
 *                     (<VirtualAttribute>v)._key_ = k             # <<<<<<<<<<<<<<
 * 
 *         self.__fix_entries__ = None
 */
        if (!(likely(PyUnicode_CheckExact(__pyx_v_k))||((__pyx_v_k) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_k)->tp_name), 0))) __PYX_ERR(0, 176, __pyx_L1_error)
        __pyx_t_16 = __pyx_v_k;
        __Pyx_INCREF(__pyx_t_16);
        __Pyx_GIVEREF(__pyx_t_16);
        __Pyx_GOTREF(((struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute *)__pyx_v_v)->__pyx_base._key_);
        __Pyx_DECREF(((struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute *)__pyx_v_v)->__pyx_base._key_);
        ((struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute *)__pyx_v_v)->__pyx_base._key_ = ((PyObject*)__pyx_t_16);
        __pyx_t_16 = 0;

        /* "yapic/entity/_entity.pyx":174
 *         for k, v in attrs.items():
 *             if isinstance(v, VirtualAttribute):
 *                 if not (<VirtualAttribute>v)._key_:             # <<<<<<<<<<<<<<
 *                     __attrs__.append(v)
 *                     (<VirtualAttribute>v)._key_ = k
 */
      }

      /* "yapic/entity/_entity.pyx":173
 *         # add virtual attributes
 *         for k, v in attrs.items():
 *             if isinstance(v, VirtualAttribute):             # <<<<<<<<<<<<<<
 *                 if not (<VirtualAttribute>v)._key_:
 *                     __attrs__.append(v)
 */
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":178
 *                     (<VirtualAttribute>v)._key_ = k
 * 
 *         self.__fix_entries__ = None             # <<<<<<<<<<<<<<
 *         self.__triggers__ = __triggers__
 *         self.__deferred__ = []
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->__fix_entries__);
  __Pyx_DECREF(__pyx_v_self->__fix_entries__);
  __pyx_v_self->__fix_entries__ = ((PyObject*)Py_None);

  /* "yapic/entity/_entity.pyx":179
 * 
 *         self.__fix_entries__ = None
 *         self.__triggers__ = __triggers__             # <<<<<<<<<<<<<<
 *         self.__deferred__ = []
 *         self.__fields__ = tuple(fields)
 */
  __Pyx_INCREF(__pyx_v___triggers__);
  __Pyx_GIVEREF(__pyx_v___triggers__);
  __Pyx_GOTREF(__pyx_v_self->__triggers__);
  __Pyx_DECREF(__pyx_v_self->__triggers__);
  __pyx_v_self->__triggers__ = __pyx_v___triggers__;

  /* "yapic/entity/_entity.pyx":180
 *         self.__fix_entries__ = None
 *         self.__triggers__ = __triggers__
 *         self.__deferred__ = []             # <<<<<<<<<<<<<<
 *         self.__fields__ = tuple(fields)
 *         self.__attrs__ = tuple(fields + __attrs__)
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->__deferred__);
  __Pyx_DECREF(__pyx_v_self->__deferred__);
  __pyx_v_self->__deferred__ = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":181
 *         self.__triggers__ = __triggers__
 *         self.__deferred__ = []
 *         self.__fields__ = tuple(fields)             # <<<<<<<<<<<<<<
 *         self.__attrs__ = tuple(fields + __attrs__)
 *         self.__deps__ = set()
 */
  if (unlikely(__pyx_v_fields == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 181, __pyx_L1_error)
  }
  __pyx_t_2 = PyList_AsTuple(__pyx_v_fields); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->__fields__);
  __Pyx_DECREF(__pyx_v_self->__fields__);
  __pyx_v_self->__fields__ = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":182
 *         self.__deferred__ = []
 *         self.__fields__ = tuple(fields)
 *         self.__attrs__ = tuple(fields + __attrs__)             # <<<<<<<<<<<<<<
 *         self.__deps__ = set()
 * 
 */
  __pyx_t_2 = PyNumber_Add(__pyx_v_fields, __pyx_v___attrs__); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_16 = PyList_AsTuple(((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_16);
  __Pyx_GOTREF(__pyx_v_self->__attrs__);
  __Pyx_DECREF(__pyx_v_self->__attrs__);
  __pyx_v_self->__attrs__ = ((PyObject*)__pyx_t_16);
  __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":183
 *         self.__fields__ = tuple(fields)
 *         self.__attrs__ = tuple(fields + __attrs__)
 *         self.__deps__ = set()             # <<<<<<<<<<<<<<
 * 
 *         pk = []
 */
  __pyx_t_16 = PySet_New(0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_GIVEREF(__pyx_t_16);
  __Pyx_GOTREF(__pyx_v_self->__deps__);
  __Pyx_DECREF(__pyx_v_self->__deps__);
  __pyx_v_self->__deps__ = ((PyObject*)__pyx_t_16);
  __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":185
 *         self.__deps__ = set()
 * 
 *         pk = []             # <<<<<<<<<<<<<<
 * 
 *         for i, attr in enumerate(self.__attrs__):
 */
  __pyx_t_16 = PyList_New(0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_v_pk = ((PyObject*)__pyx_t_16);
  __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":187
 *         pk = []
 * 
 *         for i, attr in enumerate(self.__attrs__):             # <<<<<<<<<<<<<<
 *             attr._index_ = i
 *             attr.init(self)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_16 = __pyx_int_0;
  __pyx_t_2 = __pyx_v_self->__attrs__; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
  for (;;) {
    if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 187, __pyx_L1_error)
    #else
    __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 187, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    #endif
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 187, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_1));
    __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_t_16);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_16);
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_16, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 187, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_16);
    __pyx_t_16 = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":188
 * 
 *         for i, attr in enumerate(self.__attrs__):
 *             attr._index_ = i             # <<<<<<<<<<<<<<
 *             attr.init(self)
 * 
 */
    __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_v_i); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 188, __pyx_L1_error)
    __pyx_v_attr->_index_ = __pyx_t_17;

    /* "yapic/entity/_entity.pyx":189
 *         for i, attr in enumerate(self.__attrs__):
 *             attr._index_ = i
 *             attr.init(self)             # <<<<<<<<<<<<<<
 * 
 *             if isinstance(attr, Field) and (<Field>attr).get_ext(PrimaryKey):
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr->__pyx_base.__pyx_vtab)->init(__pyx_v_attr, __pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":191
 *             attr.init(self)
 * 
 *             if isinstance(attr, Field) and (<Field>attr).get_ext(PrimaryKey):             # <<<<<<<<<<<<<<
 *                 pk.append(attr)
 * 
 */
    __pyx_t_7 = __Pyx_TypeCheck(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_6_field_Field); 
    __pyx_t_6 = (__pyx_t_7 != 0);
    if (__pyx_t_6) {
    } else {
      __pyx_t_14 = __pyx_t_6;
      goto __pyx_L79_bool_binop_done;
    }
    __pyx_t_1 = ((struct __pyx_vtabstruct_5yapic_6entity_6_field_Field *)((struct __pyx_obj_5yapic_6entity_6_field_Field *)__pyx_v_attr)->__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.get_ext(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)((struct __pyx_obj_5yapic_6entity_6_field_Field *)__pyx_v_attr)), ((PyObject *)__pyx_ptype_5yapic_6entity_6_field_PrimaryKey), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 191, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_14 = __pyx_t_6;
    __pyx_L79_bool_binop_done:;
    if (__pyx_t_14) {

      /* "yapic/entity/_entity.pyx":192
 * 
 *             if isinstance(attr, Field) and (<Field>attr).get_ext(PrimaryKey):
 *                 pk.append(attr)             # <<<<<<<<<<<<<<
 * 
 *         self.__pk__ = tuple(pk)
 */
      __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_pk, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 192, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":191
 *             attr.init(self)
 * 
 *             if isinstance(attr, Field) and (<Field>attr).get_ext(PrimaryKey):             # <<<<<<<<<<<<<<
 *                 pk.append(attr)
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":187
 *         pk = []
 * 
 *         for i, attr in enumerate(self.__attrs__):             # <<<<<<<<<<<<<<
 *             attr._index_ = i
 *             attr.init(self)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":194
 *                 pk.append(attr)
 * 
 *         self.__pk__ = tuple(pk)             # <<<<<<<<<<<<<<
 *         self.__extgroups__ = group_extensions(self)
 * 
 */
  __pyx_t_16 = PyList_AsTuple(__pyx_v_pk); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_GIVEREF(__pyx_t_16);
  __Pyx_GOTREF(__pyx_v_self->__pk__);
  __Pyx_DECREF(__pyx_v_self->__pk__);
  __pyx_v_self->__pk__ = ((PyObject*)__pyx_t_16);
  __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":195
 * 
 *         self.__pk__ = tuple(pk)
 *         self.__extgroups__ = group_extensions(self)             # <<<<<<<<<<<<<<
 * 
 *         for attr in self.__attrs__:
 */
  __pyx_t_16 = __pyx_f_5yapic_6entity_7_entity_group_extensions(__pyx_v_self); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __Pyx_GIVEREF(__pyx_t_16);
  __Pyx_GOTREF(__pyx_v_self->__extgroups__);
  __Pyx_DECREF(__pyx_v_self->__extgroups__);
  __pyx_v_self->__extgroups__ = ((PyObject*)__pyx_t_16);
  __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":197
 *         self.__extgroups__ = group_extensions(self)
 * 
 *         for attr in self.__attrs__:             # <<<<<<<<<<<<<<
 *             if not attr.bind():
 *                 self.__deferred__.append(attr)
 */
  if (unlikely(__pyx_v_self->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 197, __pyx_L1_error)
  }
  __pyx_t_16 = __pyx_v_self->__attrs__; __Pyx_INCREF(__pyx_t_16); __pyx_t_4 = 0;
  for (;;) {
    if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_16)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_16, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 197, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_16, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 197, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":198
 * 
 *         for attr in self.__attrs__:
 *             if not attr.bind():             # <<<<<<<<<<<<<<
 *                 self.__deferred__.append(attr)
 * 
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr->__pyx_base.__pyx_vtab)->bind(__pyx_v_attr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_14 < 0)) __PYX_ERR(0, 198, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_6 = ((!__pyx_t_14) != 0);
    if (__pyx_t_6) {

      /* "yapic/entity/_entity.pyx":199
 *         for attr in self.__attrs__:
 *             if not attr.bind():
 *                 self.__deferred__.append(attr)             # <<<<<<<<<<<<<<
 * 
 *         if not self.__deferred__:
 */
      if (unlikely(__pyx_v_self->__deferred__ == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 199, __pyx_L1_error)
      }
      __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_self->__deferred__, ((PyObject *)__pyx_v_attr)); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 199, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":198
 * 
 *         for attr in self.__attrs__:
 *             if not attr.bind():             # <<<<<<<<<<<<<<
 *                 self.__deferred__.append(attr)
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":197
 *         self.__extgroups__ = group_extensions(self)
 * 
 *         for attr in self.__attrs__:             # <<<<<<<<<<<<<<
 *             if not attr.bind():
 *                 self.__deferred__.append(attr)
 */
  }
  __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

  /* "yapic/entity/_entity.pyx":201
 *                 self.__deferred__.append(attr)
 * 
 *         if not self.__deferred__:             # <<<<<<<<<<<<<<
 *             self.__entity_ready__()
 * 
 */
  __pyx_t_6 = (__pyx_v_self->__deferred__ != Py_None)&&(PyList_GET_SIZE(__pyx_v_self->__deferred__) != 0);
  __pyx_t_14 = ((!__pyx_t_6) != 0);
  if (__pyx_t_14) {

    /* "yapic/entity/_entity.pyx":202
 * 
 *         if not self.__deferred__:
 *             self.__entity_ready__()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, _root=False, __fields__=None, is_alias=False, **kwargs):
 */
    __pyx_t_16 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType *)__pyx_v_self->__pyx_vtab)->__pyx___entity_ready__(__pyx_v_self, 0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_16);
    __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

    /* "yapic/entity/_entity.pyx":201
 *                 self.__deferred__.append(attr)
 * 
 *         if not self.__deferred__:             # <<<<<<<<<<<<<<
 *             self.__entity_ready__()
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":31
 * 
 * cdef class EntityType(type):
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         # XXX: DONT REMOVE
 *         (name, bases, attrs) = args
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_bases);
  __Pyx_XDECREF(__pyx_v_attrs);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v___attrs__);
  __Pyx_XDECREF(__pyx_v___triggers__);
  __Pyx_XDECREF((PyObject *)__pyx_v_factory);
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF((PyObject *)__pyx_v_aliased);
  __Pyx_XDECREF((PyObject *)__pyx_v_base_entity);
  __Pyx_XDECREF((PyObject *)__pyx_v_poly_meta);
  __Pyx_XDECREF(__pyx_v_hints);
  __Pyx_XDECREF(__pyx_v_polymorph);
  __Pyx_XDECREF(__pyx_v_base);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XDECREF(__pyx_v_is_alias);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_found);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_poly_join);
  __Pyx_XDECREF((PyObject *)__pyx_v_poly_relation);
  __Pyx_XDECREF(__pyx_v_self_pk);
  __Pyx_XDECREF((PyObject *)__pyx_v_self_attr);
  __Pyx_XDECREF(__pyx_v_type);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF(__pyx_v_attr_type);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_pk);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":204
 *             self.__entity_ready__()
 * 
 *     def __init__(self, *args, _root=False, __fields__=None, is_alias=False, **kwargs):             # <<<<<<<<<<<<<<
 *         type.__init__(self, *args)
 * 
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v__root = 0;
  CYTHON_UNUSED PyObject *__pyx_v___fields__ = 0;
  PyObject *__pyx_v_is_alias = 0;
  PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_root,&__pyx_n_s_fields,&__pyx_n_s_is_alias,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args > 0 && (kw_args <= 3)) {
        Py_ssize_t index;
        for (index = 0; index < 3 && kw_args > 0; index++) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, 0, "__init__") < 0)) __PYX_ERR(0, 204, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v__root = values[0];
    __pyx_v___fields__ = values[1];
    __pyx_v_is_alias = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 204, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_2__init__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self), __pyx_v__root, __pyx_v___fields__, __pyx_v_is_alias, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_2__init__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v__root, CYTHON_UNUSED PyObject *__pyx_v___fields__, PyObject *__pyx_v_is_alias, PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_module = NULL;
  PyObject *__pyx_v_mdict;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "yapic/entity/_entity.pyx":205
 * 
 *     def __init__(self, *args, _root=False, __fields__=None, is_alias=False, **kwargs):
 *         type.__init__(self, *args)             # <<<<<<<<<<<<<<
 * 
 *         if _root is False:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)(&PyType_Type)), __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_v_args); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":207
 *         type.__init__(self, *args)
 * 
 *         if _root is False:             # <<<<<<<<<<<<<<
 *             if not is_alias:
 *                 # TODO: better solution for registering entity early for resolving
 */
  __pyx_t_4 = (__pyx_v__root == Py_False);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "yapic/entity/_entity.pyx":208
 * 
 *         if _root is False:
 *             if not is_alias:             # <<<<<<<<<<<<<<
 *                 # TODO: better solution for registering entity early for resolving
 *                 module = PyImport_Import(self.__module__)
 */
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_is_alias); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 208, __pyx_L1_error)
    __pyx_t_4 = ((!__pyx_t_5) != 0);
    if (__pyx_t_4) {

      /* "yapic/entity/_entity.pyx":210
 *             if not is_alias:
 *                 # TODO: better solution for registering entity early for resolving
 *                 module = PyImport_Import(self.__module__)             # <<<<<<<<<<<<<<
 *                 mdict = PyModule_GetDict(module)
 *                 (<object>mdict)[args[0]] = self
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_module); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 210, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyImport_Import(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 210, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_v_module = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":211
 *                 # TODO: better solution for registering entity early for resolving
 *                 module = PyImport_Import(self.__module__)
 *                 mdict = PyModule_GetDict(module)             # <<<<<<<<<<<<<<
 *                 (<object>mdict)[args[0]] = self
 * 
 */
      __pyx_t_6 = PyModule_GetDict(__pyx_v_module); if (unlikely(__pyx_t_6 == ((PyObject *)NULL))) __PYX_ERR(0, 211, __pyx_L1_error)
      __pyx_v_mdict = __pyx_t_6;

      /* "yapic/entity/_entity.pyx":212
 *                 module = PyImport_Import(self.__module__)
 *                 mdict = PyModule_GetDict(module)
 *                 (<object>mdict)[args[0]] = self             # <<<<<<<<<<<<<<
 * 
 *                 (<Registry>self.__registry__).register(self.__qname__, self)
 */
      if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_mdict), PyTuple_GET_ITEM(__pyx_v_args, 0), ((PyObject *)__pyx_v_self)) < 0)) __PYX_ERR(0, 212, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":214
 *                 (<object>mdict)[args[0]] = self
 * 
 *                 (<Registry>self.__registry__).register(self.__qname__, self)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_registry); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 214, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_qname); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 214, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(PyUnicode_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 214, __pyx_L1_error)
      __pyx_t_1 = ((struct __pyx_vtabstruct_5yapic_6entity_9_registry_Registry *)((struct __pyx_obj_5yapic_6entity_9_registry_Registry *)__pyx_t_3)->__pyx_vtab)->__pyx_register(((struct __pyx_obj_5yapic_6entity_9_registry_Registry *)__pyx_t_3), ((PyObject*)__pyx_t_2), __pyx_v_self, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 214, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "yapic/entity/_entity.pyx":208
 * 
 *         if _root is False:
 *             if not is_alias:             # <<<<<<<<<<<<<<
 *                 # TODO: better solution for registering entity early for resolving
 *                 module = PyImport_Import(self.__module__)
 */
    }

    /* "yapic/entity/_entity.pyx":207
 *         type.__init__(self, *args)
 * 
 *         if _root is False:             # <<<<<<<<<<<<<<
 *             if not is_alias:
 *                 # TODO: better solution for registering entity early for resolving
 */
  }

  /* "yapic/entity/_entity.pyx":204
 *             self.__entity_ready__()
 * 
 *     def __init__(self, *args, _root=False, __fields__=None, is_alias=False, **kwargs):             # <<<<<<<<<<<<<<
 *         type.__init__(self, *args)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_module);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":217
 * 
 *     @property
 *     def __meta__(self):             # <<<<<<<<<<<<<<
 *         return <object>self.meta
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_8__meta___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_8__meta___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_8__meta_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_8__meta_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "yapic/entity/_entity.pyx":218
 *     @property
 *     def __meta__(self):
 *         return <object>self.meta             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->meta));
  __pyx_r = ((PyObject *)__pyx_v_self->meta);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":217
 * 
 *     @property
 *     def __meta__(self):             # <<<<<<<<<<<<<<
 *         return <object>self.meta
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":221
 * 
 *     @property
 *     def __registry__(self):             # <<<<<<<<<<<<<<
 *         return <object>self.registry
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_12__registry___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_12__registry___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__registry_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__registry_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "yapic/entity/_entity.pyx":222
 *     @property
 *     def __registry__(self):
 *         return <object>self.registry             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->registry));
  __pyx_r = ((PyObject *)__pyx_v_self->registry);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":221
 * 
 *     @property
 *     def __registry__(self):             # <<<<<<<<<<<<<<
 *         return <object>self.registry
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":225
 * 
 *     @property
 *     def __qname__(self):             # <<<<<<<<<<<<<<
 *         try:
 *             schema = self.__meta__["schema"]
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9__qname___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9__qname___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_9__qname_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_9__qname_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_v_schema = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_UCS4 __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "yapic/entity/_entity.pyx":226
 *     @property
 *     def __qname__(self):
 *         try:             # <<<<<<<<<<<<<<
 *             schema = self.__meta__["schema"]
 *         except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "yapic/entity/_entity.pyx":227
 *     def __qname__(self):
 *         try:
 *             schema = self.__meta__["schema"]             # <<<<<<<<<<<<<<
 *         except KeyError:
 *             return self.__name__
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_meta); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_u_schema); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_schema = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "yapic/entity/_entity.pyx":226
 *     @property
 *     def __qname__(self):
 *         try:             # <<<<<<<<<<<<<<
 *             schema = self.__meta__["schema"]
 *         except KeyError:
 */
    }

    /* "yapic/entity/_entity.pyx":231
 *             return self.__name__
 *         else:
 *             if schema is None:             # <<<<<<<<<<<<<<
 *                 return self.__name__
 *             else:
 */
    /*else:*/ {
      __pyx_t_6 = (__pyx_v_schema == Py_None);
      __pyx_t_7 = (__pyx_t_6 != 0);
      if (__pyx_t_7) {

        /* "yapic/entity/_entity.pyx":232
 *         else:
 *             if schema is None:
 *                 return self.__name__             # <<<<<<<<<<<<<<
 *             else:
 *                 return f"{schema}.{self.__name__}"
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_name_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 232, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_r = __pyx_t_5;
        __pyx_t_5 = 0;
        goto __pyx_L6_except_return;

        /* "yapic/entity/_entity.pyx":231
 *             return self.__name__
 *         else:
 *             if schema is None:             # <<<<<<<<<<<<<<
 *                 return self.__name__
 *             else:
 */
      }

      /* "yapic/entity/_entity.pyx":234
 *                 return self.__name__
 *             else:
 *                 return f"{schema}.{self.__name__}"             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
      /*else*/ {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 234, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_schema, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 234, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__4);
        __pyx_t_8 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__4);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_kp_u__4);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_name_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 234, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 234, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_10);
        __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 234, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_r = __pyx_t_10;
        __pyx_t_10 = 0;
        goto __pyx_L6_except_return;
      }
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":228
 *         try:
 *             schema = self.__meta__["schema"]
 *         except KeyError:             # <<<<<<<<<<<<<<
 *             return self.__name__
 *         else:
 */
    __pyx_t_11 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_11) {
      __Pyx_AddTraceback("yapic.entity._entity.EntityType.__qname__.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_5, &__pyx_t_4) < 0) __PYX_ERR(0, 228, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);

      /* "yapic/entity/_entity.pyx":229
 *             schema = self.__meta__["schema"]
 *         except KeyError:
 *             return self.__name__             # <<<<<<<<<<<<<<
 *         else:
 *             if schema is None:
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_name_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 229, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_r = __pyx_t_12;
      __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "yapic/entity/_entity.pyx":226
 *     @property
 *     def __qname__(self):
 *         try:             # <<<<<<<<<<<<<<
 *             schema = self.__meta__["schema"]
 *         except KeyError:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":225
 * 
 *     @property
 *     def __qname__(self):             # <<<<<<<<<<<<<<
 *         try:
 *             schema = self.__meta__["schema"]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__qname__.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_schema);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":237
 * 
 *     @staticmethod
 *     def __prepare__(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         scope = type.__prepare__(*args, **kwargs)
 *         scope["__slots__"] = ()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_5__prepare__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5yapic_6entity_7_entity_10EntityType_5__prepare__ = {"__prepare__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_10EntityType_5__prepare__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_5__prepare__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__prepare__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__prepare__", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_4__prepare__(__pyx_self, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_4__prepare__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_scope = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__prepare__", 0);

  /* "yapic/entity/_entity.pyx":238
 *     @staticmethod
 *     def __prepare__(*args, **kwargs):
 *         scope = type.__prepare__(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         scope["__slots__"] = ()
 *         return scope
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)(&PyType_Type)), __pyx_n_s_prepare); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_scope = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":239
 *     def __prepare__(*args, **kwargs):
 *         scope = type.__prepare__(*args, **kwargs)
 *         scope["__slots__"] = ()             # <<<<<<<<<<<<<<
 *         return scope
 * 
 */
  if (unlikely(PyObject_SetItem(__pyx_v_scope, __pyx_n_u_slots, __pyx_empty_tuple) < 0)) __PYX_ERR(0, 239, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":240
 *         scope = type.__prepare__(*args, **kwargs)
 *         scope["__slots__"] = ()
 *         return scope             # <<<<<<<<<<<<<<
 * 
 *     # def __getattr__(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_scope);
  __pyx_r = __pyx_v_scope;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":237
 * 
 *     @staticmethod
 *     def __prepare__(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         scope = type.__prepare__(*args, **kwargs)
 *         scope["__slots__"] = ()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__prepare__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":267
 *     #         raise AttributeError(f"type object '{self}' has no attribute '{name}'")
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         aliased = get_alias_target(self)
 *         if aliased is self:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_6__repr__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_6__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_aliased = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "yapic/entity/_entity.pyx":268
 * 
 *     def __repr__(self):
 *         aliased = get_alias_target(self)             # <<<<<<<<<<<<<<
 *         if aliased is self:
 *             return "<Entity %s>" % self.__qname__
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_5yapic_6entity_7_entity_get_alias_target(__pyx_v_self, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_aliased = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":269
 *     def __repr__(self):
 *         aliased = get_alias_target(self)
 *         if aliased is self:             # <<<<<<<<<<<<<<
 *             return "<Entity %s>" % self.__qname__
 *         else:
 */
  __pyx_t_2 = (__pyx_v_aliased == __pyx_v_self);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "yapic/entity/_entity.pyx":270
 *         aliased = get_alias_target(self)
 *         if aliased is self:
 *             return "<Entity %s>" % self.__qname__             # <<<<<<<<<<<<<<
 *         else:
 *             return "<Alias(%s) of %r>" % (id(self), aliased)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_qname); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Entity_s, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":269
 *     def __repr__(self):
 *         aliased = get_alias_target(self)
 *         if aliased is self:             # <<<<<<<<<<<<<<
 *             return "<Entity %s>" % self.__qname__
 *         else:
 */
  }

  /* "yapic/entity/_entity.pyx":272
 *             return "<Entity %s>" % self.__qname__
 *         else:
 *             return "<Alias(%s) of %r>" % (id(self), aliased)             # <<<<<<<<<<<<<<
 *             # return "<Alias of %r>" % aliased
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = PyTuple_New(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = 0;
    __pyx_t_6 = 127;
    __Pyx_INCREF(__pyx_kp_u_Alias);
    __pyx_t_5 += 7;
    __Pyx_GIVEREF(__pyx_kp_u_Alias);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Alias);
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_id, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_1), __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_kp_u_of);
    __pyx_t_5 += 5;
    __Pyx_GIVEREF(__pyx_kp_u_of);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_of);
    __pyx_t_7 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Repr(((PyObject *)__pyx_v_aliased)), __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_kp_u__5);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__5);
    PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u__5);
    __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_4, 5, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_7;
    __pyx_t_7 = 0;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":267
 *     #         raise AttributeError(f"type object '{self}' has no attribute '{name}'")
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         aliased = get_alias_target(self)
 *         if aliased is self:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_aliased);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":275
 *             # return "<Alias of %r>" % aliased
 * 
 *     def alias(self, str alias = None):             # <<<<<<<<<<<<<<
 *         if alias is None:
 *             # alias = "".join(random.choices(string.ascii_letters, k=6))
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9alias(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9alias(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_alias = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("alias (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alias,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject*)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alias);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "alias") < 0)) __PYX_ERR(0, 275, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_alias = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("alias", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 275, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.alias", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_alias), (&PyUnicode_Type), 1, "alias", 1))) __PYX_ERR(0, 275, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_8alias(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self), __pyx_v_alias);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_8alias(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_alias) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_aliased = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("alias", 0);
  __Pyx_INCREF(__pyx_v_alias);

  /* "yapic/entity/_entity.pyx":276
 * 
 *     def alias(self, str alias = None):
 *         if alias is None:             # <<<<<<<<<<<<<<
 *             # alias = "".join(random.choices(string.ascii_letters, k=6))
 *             alias = ""
 */
  __pyx_t_1 = (__pyx_v_alias == ((PyObject*)Py_None));
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":278
 *         if alias is None:
 *             # alias = "".join(random.choices(string.ascii_letters, k=6))
 *             alias = ""             # <<<<<<<<<<<<<<
 * 
 *         aliased = get_alias_target(self)
 */
    __Pyx_INCREF(__pyx_kp_u__6);
    __Pyx_DECREF_SET(__pyx_v_alias, __pyx_kp_u__6);

    /* "yapic/entity/_entity.pyx":276
 * 
 *     def alias(self, str alias = None):
 *         if alias is None:             # <<<<<<<<<<<<<<
 *             # alias = "".join(random.choices(string.ascii_letters, k=6))
 *             alias = ""
 */
  }

  /* "yapic/entity/_entity.pyx":280
 *             alias = ""
 * 
 *         aliased = get_alias_target(self)             # <<<<<<<<<<<<<<
 *         return EntityType(alias, (aliased,), {}, name=alias, schema=None, is_alias=True)
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_f_5yapic_6entity_7_entity_get_alias_target(__pyx_v_self, 0)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_aliased = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "yapic/entity/_entity.pyx":281
 * 
 *         aliased = get_alias_target(self)
 *         return EntityType(alias, (aliased,), {}, name=alias, schema=None, is_alias=True)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_aliased));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_aliased));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_aliased));
  __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_alias);
  __Pyx_GIVEREF(__pyx_v_alias);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_alias);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_name, __pyx_v_alias) < 0) __PYX_ERR(0, 281, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_schema, Py_None) < 0) __PYX_ERR(0, 281, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_is_alias, Py_True) < 0) __PYX_ERR(0, 281, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityType), __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":275
 *             # return "<Alias of %r>" % aliased
 * 
 *     def alias(self, str alias = None):             # <<<<<<<<<<<<<<
 *         if alias is None:
 *             # alias = "".join(random.choices(string.ascii_letters, k=6))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.alias", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_aliased);
  __Pyx_XDECREF(__pyx_v_alias);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":283
 *         return EntityType(alias, (aliased,), {}, name=alias, schema=None, is_alias=True)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         Py_XDECREF(self.meta)
 *         Py_XDECREF(self.registry)
 */

/* Python wrapper */
static void __pyx_pw_5yapic_6entity_7_entity_10EntityType_11__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5yapic_6entity_7_entity_10EntityType_11__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5yapic_6entity_7_entity_10EntityType_10__dealloc__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5yapic_6entity_7_entity_10EntityType_10__dealloc__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "yapic/entity/_entity.pyx":284
 * 
 *     def __dealloc__(self):
 *         Py_XDECREF(self.meta)             # <<<<<<<<<<<<<<
 *         Py_XDECREF(self.registry)
 * 
 */
  Py_XDECREF(__pyx_v_self->meta);

  /* "yapic/entity/_entity.pyx":285
 *     def __dealloc__(self):
 *         Py_XDECREF(self.meta)
 *         Py_XDECREF(self.registry)             # <<<<<<<<<<<<<<
 * 
 *     cdef object resolve_deferred(self):
 */
  Py_XDECREF(__pyx_v_self->registry);

  /* "yapic/entity/_entity.pyx":283
 *         return EntityType(alias, (aliased,), {}, name=alias, schema=None, is_alias=True)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         Py_XDECREF(self.meta)
 *         Py_XDECREF(self.registry)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "yapic/entity/_entity.pyx":287
 *         Py_XDECREF(self.registry)
 * 
 *     cdef object resolve_deferred(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef list deferred = self.__deferred__
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_10EntityType_resolve_deferred(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_v_deferred = 0;
  int __pyx_v_index;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("resolve_deferred", 0);

  /* "yapic/entity/_entity.pyx":289
 *     cdef object resolve_deferred(self):
 *         cdef EntityAttribute attr
 *         cdef list deferred = self.__deferred__             # <<<<<<<<<<<<<<
 *         cdef int index = len(deferred) - 1
 * 
 */
  __pyx_t_1 = __pyx_v_self->__deferred__;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_deferred = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":290
 *         cdef EntityAttribute attr
 *         cdef list deferred = self.__deferred__
 *         cdef int index = len(deferred) - 1             # <<<<<<<<<<<<<<
 * 
 *         if index < 0:
 */
  if (unlikely(__pyx_v_deferred == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 290, __pyx_L1_error)
  }
  __pyx_t_2 = PyList_GET_SIZE(__pyx_v_deferred); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 290, __pyx_L1_error)
  __pyx_v_index = (__pyx_t_2 - 1);

  /* "yapic/entity/_entity.pyx":292
 *         cdef int index = len(deferred) - 1
 * 
 *         if index < 0:             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
  __pyx_t_3 = ((__pyx_v_index < 0) != 0);
  if (__pyx_t_3) {

    /* "yapic/entity/_entity.pyx":293
 * 
 *         if index < 0:
 *             return True             # <<<<<<<<<<<<<<
 * 
 *         while index >= 0:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":292
 *         cdef int index = len(deferred) - 1
 * 
 *         if index < 0:             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":295
 *             return True
 * 
 *         while index >= 0:             # <<<<<<<<<<<<<<
 *             attr = deferred[index]
 *             if attr.bind():
 */
  while (1) {
    __pyx_t_3 = ((__pyx_v_index >= 0) != 0);
    if (!__pyx_t_3) break;

    /* "yapic/entity/_entity.pyx":296
 * 
 *         while index >= 0:
 *             attr = deferred[index]             # <<<<<<<<<<<<<<
 *             if attr.bind():
 *                 deferred.pop(index)
 */
    if (unlikely(__pyx_v_deferred == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 296, __pyx_L1_error)
    }
    if (!(likely(((PyList_GET_ITEM(__pyx_v_deferred, __pyx_v_index)) == Py_None) || likely(__Pyx_TypeTest(PyList_GET_ITEM(__pyx_v_deferred, __pyx_v_index), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 296, __pyx_L1_error)
    __pyx_t_1 = PyList_GET_ITEM(__pyx_v_deferred, __pyx_v_index);
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":297
 *         while index >= 0:
 *             attr = deferred[index]
 *             if attr.bind():             # <<<<<<<<<<<<<<
 *                 deferred.pop(index)
 *             index -= 1
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr->__pyx_base.__pyx_vtab)->bind(__pyx_v_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 297, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_3) {

      /* "yapic/entity/_entity.pyx":298
 *             attr = deferred[index]
 *             if attr.bind():
 *                 deferred.pop(index)             # <<<<<<<<<<<<<<
 *             index -= 1
 * 
 */
      if (unlikely(__pyx_v_deferred == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "pop");
        __PYX_ERR(0, 298, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_PyList_PopIndex(__pyx_v_deferred, Py_None, __pyx_v_index, 1, int, __Pyx_PyInt_From_int); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 298, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "yapic/entity/_entity.pyx":297
 *         while index >= 0:
 *             attr = deferred[index]
 *             if attr.bind():             # <<<<<<<<<<<<<<
 *                 deferred.pop(index)
 *             index -= 1
 */
    }

    /* "yapic/entity/_entity.pyx":299
 *             if attr.bind():
 *                 deferred.pop(index)
 *             index -= 1             # <<<<<<<<<<<<<<
 * 
 *         if len(deferred) == 0:
 */
    __pyx_v_index = (__pyx_v_index - 1);
  }

  /* "yapic/entity/_entity.pyx":301
 *             index -= 1
 * 
 *         if len(deferred) == 0:             # <<<<<<<<<<<<<<
 *             self.__entity_ready__()
 *             return True
 */
  if (unlikely(__pyx_v_deferred == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 301, __pyx_L1_error)
  }
  __pyx_t_2 = PyList_GET_SIZE(__pyx_v_deferred); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 301, __pyx_L1_error)
  __pyx_t_3 = ((__pyx_t_2 == 0) != 0);
  if (__pyx_t_3) {

    /* "yapic/entity/_entity.pyx":302
 * 
 *         if len(deferred) == 0:
 *             self.__entity_ready__()             # <<<<<<<<<<<<<<
 *             return True
 *         else:
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType *)__pyx_v_self->__pyx_vtab)->__pyx___entity_ready__(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":303
 *         if len(deferred) == 0:
 *             self.__entity_ready__()
 *             return True             # <<<<<<<<<<<<<<
 *         else:
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":301
 *             index -= 1
 * 
 *         if len(deferred) == 0:             # <<<<<<<<<<<<<<
 *             self.__entity_ready__()
 *             return True
 */
  }

  /* "yapic/entity/_entity.pyx":305
 *             return True
 *         else:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *     cpdef object __entity_ready__(self):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":287
 *         Py_XDECREF(self.registry)
 * 
 *     cdef object resolve_deferred(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef list deferred = self.__deferred__
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.resolve_deferred", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_deferred);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":307
 *             return False
 * 
 *     cpdef object __entity_ready__(self):             # <<<<<<<<<<<<<<
 *         for attr in self.__attrs__:
 *             self.__deps__ |= attr._deps_
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__entity_ready__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_10EntityType___entity_ready__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_attr = NULL;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_group = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__entity_ready__", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_entity_ready); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__entity_ready__)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":308
 * 
 *     cpdef object __entity_ready__(self):
 *         for attr in self.__attrs__:             # <<<<<<<<<<<<<<
 *             self.__deps__ |= attr._deps_
 * 
 */
  if (unlikely(__pyx_v_self->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 308, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 308, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_attr, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":309
 *     cpdef object __entity_ready__(self):
 *         for attr in self.__attrs__:
 *             self.__deps__ |= attr._deps_             # <<<<<<<<<<<<<<
 * 
 *         cdef EntityAttributeExtGroup group
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_attr, __pyx_n_s_deps); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_InPlaceOr(__pyx_v_self->__deps__, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(PySet_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_self->__deps__);
    __Pyx_DECREF(__pyx_v_self->__deps__);
    __pyx_v_self->__deps__ = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":308
 * 
 *     cpdef object __entity_ready__(self):
 *         for attr in self.__attrs__:             # <<<<<<<<<<<<<<
 *             self.__deps__ |= attr._deps_
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":312
 * 
 *         cdef EntityAttributeExtGroup group
 *         for group in self.__extgroups__:             # <<<<<<<<<<<<<<
 *             type(group.items[0]).validate_group(group)
 * 
 */
  if (unlikely(__pyx_v_self->__extgroups__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 312, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->__extgroups__; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 312, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExtGroup))))) __PYX_ERR(0, 312, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_group, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":313
 *         cdef EntityAttributeExtGroup group
 *         for group in self.__extgroups__:
 *             type(group.items[0]).validate_group(group)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    if (unlikely(__pyx_v_group->items == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 313, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(PyTuple_GET_ITEM(__pyx_v_group->items, 0))), __pyx_n_s_validate_group); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 313, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, ((PyObject *)__pyx_v_group)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_group));
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 313, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":312
 * 
 *         cdef EntityAttributeExtGroup group
 *         for group in self.__extgroups__:             # <<<<<<<<<<<<<<
 *             type(group.items[0]).validate_group(group)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":307
 *             return False
 * 
 *     cpdef object __entity_ready__(self):             # <<<<<<<<<<<<<<
 *         for attr in self.__attrs__:
 *             self.__deps__ |= attr._deps_
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__entity_ready__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr);
  __Pyx_XDECREF((PyObject *)__pyx_v_group);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__entity_ready__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__entity_ready__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__entity_ready__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__entity_ready__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__entity_ready__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__entity_ready__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_10EntityType___entity_ready__(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__entity_ready__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":13
 * 
 * cdef class EntityType(type):
 *     cdef readonly tuple __attrs__             # <<<<<<<<<<<<<<
 *     cdef readonly tuple __fields__
 *     cdef readonly tuple __props__
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9__attrs___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9__attrs___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_9__attrs_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_9__attrs_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__attrs__);
  __pyx_r = __pyx_v_self->__attrs__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":14
 * cdef class EntityType(type):
 *     cdef readonly tuple __attrs__
 *     cdef readonly tuple __fields__             # <<<<<<<<<<<<<<
 *     cdef readonly tuple __props__
 *     cdef readonly tuple __pk__
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_10__fields___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_10__fields___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_10__fields_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_10__fields_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__fields__);
  __pyx_r = __pyx_v_self->__fields__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":15
 *     cdef readonly tuple __attrs__
 *     cdef readonly tuple __fields__
 *     cdef readonly tuple __props__             # <<<<<<<<<<<<<<
 *     cdef readonly tuple __pk__
 *     cdef readonly list __deferred__
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9__props___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_9__props___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_9__props_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_9__props_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__props__);
  __pyx_r = __pyx_v_self->__props__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":16
 *     cdef readonly tuple __fields__
 *     cdef readonly tuple __props__
 *     cdef readonly tuple __pk__             # <<<<<<<<<<<<<<
 *     cdef readonly list __deferred__
 *     cdef public list __fix_entries__
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_6__pk___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_6__pk___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_6__pk_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_6__pk_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__pk__);
  __pyx_r = __pyx_v_self->__pk__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":17
 *     cdef readonly tuple __props__
 *     cdef readonly tuple __pk__
 *     cdef readonly list __deferred__             # <<<<<<<<<<<<<<
 *     cdef public list __fix_entries__
 *     cdef public list __triggers__
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_12__deferred___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_12__deferred___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__deferred_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__deferred_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__deferred__);
  __pyx_r = __pyx_v_self->__deferred__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":18
 *     cdef readonly tuple __pk__
 *     cdef readonly list __deferred__
 *     cdef public list __fix_entries__             # <<<<<<<<<<<<<<
 *     cdef public list __triggers__
 *     cdef public tuple __extgroups__
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__fix_entries__);
  __pyx_r = __pyx_v_self->__fix_entries__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries___2__set__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(1, 18, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__fix_entries__);
  __Pyx_DECREF(__pyx_v_self->__fix_entries__);
  __pyx_v_self->__fix_entries__ = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__fix_entries__.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries___4__del__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_15__fix_entries___4__del__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->__fix_entries__);
  __Pyx_DECREF(__pyx_v_self->__fix_entries__);
  __pyx_v_self->__fix_entries__ = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":19
 *     cdef readonly list __deferred__
 *     cdef public list __fix_entries__
 *     cdef public list __triggers__             # <<<<<<<<<<<<<<
 *     cdef public tuple __extgroups__
 *     cdef PyObject* registry
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__triggers__);
  __pyx_r = __pyx_v_self->__triggers__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers___2__set__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(1, 19, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__triggers__);
  __Pyx_DECREF(__pyx_v_self->__triggers__);
  __pyx_v_self->__triggers__ = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__triggers__.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers___4__del__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_12__triggers___4__del__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->__triggers__);
  __Pyx_DECREF(__pyx_v_self->__triggers__);
  __pyx_v_self->__triggers__ = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":20
 *     cdef public list __fix_entries__
 *     cdef public list __triggers__
 *     cdef public tuple __extgroups__             # <<<<<<<<<<<<<<
 *     cdef PyObject* registry
 *     cdef PyObject* meta
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__extgroups__);
  __pyx_r = __pyx_v_self->__extgroups__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups___2__set__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyTuple_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(1, 20, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__extgroups__);
  __Pyx_DECREF(__pyx_v_self->__extgroups__);
  __pyx_v_self->__extgroups__ = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityType.__extgroups__.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups___4__del__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityType_13__extgroups___4__del__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->__extgroups__);
  __Pyx_DECREF(__pyx_v_self->__extgroups__);
  __pyx_v_self->__extgroups__ = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":23
 *     cdef PyObject* registry
 *     cdef PyObject* meta
 *     cdef readonly set __deps__             # <<<<<<<<<<<<<<
 *     cdef object __weakref__
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_8__deps___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityType_8__deps___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityType_8__deps_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityType_8__deps_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->__deps__);
  __pyx_r = __pyx_v_self->__deps__;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":316
 * 
 * 
 * cdef tuple group_extensions(EntityType entity):             # <<<<<<<<<<<<<<
 *     cdef dict ext_groups = {}
 *     cdef EntityAttributeExt ext
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_group_extensions(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity) {
  PyObject *__pyx_v_ext_groups = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_ext = 0;
  PyObject *__pyx_v_ext_group_list = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_group = 0;
  PyObject *__pyx_v_attr = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_exts = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("group_extensions", 0);

  /* "yapic/entity/_entity.pyx":317
 * 
 * cdef tuple group_extensions(EntityType entity):
 *     cdef dict ext_groups = {}             # <<<<<<<<<<<<<<
 *     cdef EntityAttributeExt ext
 *     cdef list ext_group_list = []
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ext_groups = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":319
 *     cdef dict ext_groups = {}
 *     cdef EntityAttributeExt ext
 *     cdef list ext_group_list = []             # <<<<<<<<<<<<<<
 *     cdef EntityAttributeExtGroup group
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ext_group_list = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":322
 *     cdef EntityAttributeExtGroup group
 * 
 *     for attr in entity.__attrs__:             # <<<<<<<<<<<<<<
 *         if not isinstance(attr, Field):
 *             continue
 */
  if (unlikely(__pyx_v_entity->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 322, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_entity->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 322, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_attr, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":323
 * 
 *     for attr in entity.__attrs__:
 *         if not isinstance(attr, Field):             # <<<<<<<<<<<<<<
 *             continue
 * 
 */
    __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_attr, __pyx_ptype_5yapic_6entity_6_field_Field); 
    __pyx_t_5 = ((!(__pyx_t_4 != 0)) != 0);
    if (__pyx_t_5) {

      /* "yapic/entity/_entity.pyx":324
 *     for attr in entity.__attrs__:
 *         if not isinstance(attr, Field):
 *             continue             # <<<<<<<<<<<<<<
 * 
 *         for ext in (<Field>attr)._exts_:
 */
      goto __pyx_L3_continue;

      /* "yapic/entity/_entity.pyx":323
 * 
 *     for attr in entity.__attrs__:
 *         if not isinstance(attr, Field):             # <<<<<<<<<<<<<<
 *             continue
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":326
 *             continue
 * 
 *         for ext in (<Field>attr)._exts_:             # <<<<<<<<<<<<<<
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:
 *                 key = (ext.group_by, type(ext))
 */
    if (unlikely(((struct __pyx_obj_5yapic_6entity_6_field_Field *)__pyx_v_attr)->__pyx_base._exts_ == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 326, __pyx_L1_error)
    }
    __pyx_t_3 = ((struct __pyx_obj_5yapic_6entity_6_field_Field *)__pyx_v_attr)->__pyx_base._exts_; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
    for (;;) {
      if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_7 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_7); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 326, __pyx_L1_error)
      #else
      __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 326, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      #endif
      if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt))))) __PYX_ERR(0, 326, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_ext, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_t_7));
      __pyx_t_7 = 0;

      /* "yapic/entity/_entity.pyx":327
 * 
 *         for ext in (<Field>attr)._exts_:
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:             # <<<<<<<<<<<<<<
 *                 key = (ext.group_by, type(ext))
 *                 try:
 */
      __pyx_t_4 = __Pyx_TypeCheck(((PyObject *)__pyx_v_ext), __pyx_ptype_5yapic_6entity_6_field_PrimaryKey); 
      __pyx_t_8 = ((!(__pyx_t_4 != 0)) != 0);
      if (__pyx_t_8) {
      } else {
        __pyx_t_5 = __pyx_t_8;
        goto __pyx_L9_bool_binop_done;
      }
      __pyx_t_8 = (__pyx_v_ext->group_by != Py_None)&&(__Pyx_PyUnicode_IS_TRUE(__pyx_v_ext->group_by) != 0);
      __pyx_t_5 = __pyx_t_8;
      __pyx_L9_bool_binop_done:;
      if (__pyx_t_5) {

        /* "yapic/entity/_entity.pyx":328
 *         for ext in (<Field>attr)._exts_:
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:
 *                 key = (ext.group_by, type(ext))             # <<<<<<<<<<<<<<
 *                 try:
 *                     ext_groups[key].append(ext)
 */
        __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 328, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_v_ext->group_by);
        __Pyx_GIVEREF(__pyx_v_ext->group_by);
        PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_ext->group_by);
        __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_ext))));
        __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_ext))));
        PyTuple_SET_ITEM(__pyx_t_7, 1, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_ext))));
        __Pyx_XDECREF_SET(__pyx_v_key, ((PyObject*)__pyx_t_7));
        __pyx_t_7 = 0;

        /* "yapic/entity/_entity.pyx":329
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:
 *                 key = (ext.group_by, type(ext))
 *                 try:             # <<<<<<<<<<<<<<
 *                     ext_groups[key].append(ext)
 *                 except KeyError:
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
          __Pyx_XGOTREF(__pyx_t_9);
          __Pyx_XGOTREF(__pyx_t_10);
          __Pyx_XGOTREF(__pyx_t_11);
          /*try:*/ {

            /* "yapic/entity/_entity.pyx":330
 *                 key = (ext.group_by, type(ext))
 *                 try:
 *                     ext_groups[key].append(ext)             # <<<<<<<<<<<<<<
 *                 except KeyError:
 *                     ext_groups[key] = [ext]
 */
            __pyx_t_7 = __Pyx_PyDict_GetItem(__pyx_v_ext_groups, __pyx_v_key); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 330, __pyx_L11_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_7, ((PyObject *)__pyx_v_ext)); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 330, __pyx_L11_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "yapic/entity/_entity.pyx":329
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:
 *                 key = (ext.group_by, type(ext))
 *                 try:             # <<<<<<<<<<<<<<
 *                     ext_groups[key].append(ext)
 *                 except KeyError:
 */
          }
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          goto __pyx_L18_try_end;
          __pyx_L11_error:;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "yapic/entity/_entity.pyx":331
 *                 try:
 *                     ext_groups[key].append(ext)
 *                 except KeyError:             # <<<<<<<<<<<<<<
 *                     ext_groups[key] = [ext]
 * 
 */
          __pyx_t_13 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
          if (__pyx_t_13) {
            __Pyx_AddTraceback("yapic.entity._entity.group_extensions", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_14, &__pyx_t_15) < 0) __PYX_ERR(0, 331, __pyx_L13_except_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_GOTREF(__pyx_t_15);

            /* "yapic/entity/_entity.pyx":332
 *                     ext_groups[key].append(ext)
 *                 except KeyError:
 *                     ext_groups[key] = [ext]             # <<<<<<<<<<<<<<
 * 
 *     for exts in ext_groups.values():
 */
            __pyx_t_16 = PyList_New(1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 332, __pyx_L13_except_error)
            __Pyx_GOTREF(__pyx_t_16);
            __Pyx_INCREF(((PyObject *)__pyx_v_ext));
            __Pyx_GIVEREF(((PyObject *)__pyx_v_ext));
            PyList_SET_ITEM(__pyx_t_16, 0, ((PyObject *)__pyx_v_ext));
            if (unlikely(PyDict_SetItem(__pyx_v_ext_groups, __pyx_v_key, __pyx_t_16) < 0)) __PYX_ERR(0, 332, __pyx_L13_except_error)
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            goto __pyx_L12_exception_handled;
          }
          goto __pyx_L13_except_error;
          __pyx_L13_except_error:;

          /* "yapic/entity/_entity.pyx":329
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:
 *                 key = (ext.group_by, type(ext))
 *                 try:             # <<<<<<<<<<<<<<
 *                     ext_groups[key].append(ext)
 *                 except KeyError:
 */
          __Pyx_XGIVEREF(__pyx_t_9);
          __Pyx_XGIVEREF(__pyx_t_10);
          __Pyx_XGIVEREF(__pyx_t_11);
          __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
          goto __pyx_L1_error;
          __pyx_L12_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_9);
          __Pyx_XGIVEREF(__pyx_t_10);
          __Pyx_XGIVEREF(__pyx_t_11);
          __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
          __pyx_L18_try_end:;
        }

        /* "yapic/entity/_entity.pyx":327
 * 
 *         for ext in (<Field>attr)._exts_:
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:             # <<<<<<<<<<<<<<
 *                 key = (ext.group_by, type(ext))
 *                 try:
 */
      }

      /* "yapic/entity/_entity.pyx":326
 *             continue
 * 
 *         for ext in (<Field>attr)._exts_:             # <<<<<<<<<<<<<<
 *             if not isinstance(ext, PrimaryKey) and ext.group_by:
 *                 key = (ext.group_by, type(ext))
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":322
 *     cdef EntityAttributeExtGroup group
 * 
 *     for attr in entity.__attrs__:             # <<<<<<<<<<<<<<
 *         if not isinstance(attr, Field):
 *             continue
 */
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":334
 *                     ext_groups[key] = [ext]
 * 
 *     for exts in ext_groups.values():             # <<<<<<<<<<<<<<
 *         group = EntityAttributeExtGroup(exts[0].name, type(exts[0]))
 *         group.items = tuple(exts)
 */
  __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_ext_groups, 1, __pyx_n_s_values, (&__pyx_t_6), (&__pyx_t_13)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_17 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_6, &__pyx_t_2, NULL, &__pyx_t_3, NULL, __pyx_t_13);
    if (unlikely(__pyx_t_17 == 0)) break;
    if (unlikely(__pyx_t_17 == -1)) __PYX_ERR(0, 334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_exts, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":335
 * 
 *     for exts in ext_groups.values():
 *         group = EntityAttributeExtGroup(exts[0].name, type(exts[0]))             # <<<<<<<<<<<<<<
 *         group.items = tuple(exts)
 *         ext_group_list.append(group)
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_exts, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_name); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_exts, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_15);
    PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
    __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_t_3)));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_t_3)));
    PyTuple_SET_ITEM(__pyx_t_14, 1, ((PyObject *)Py_TYPE(__pyx_t_3)));
    __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExtGroup), __pyx_t_14, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF_SET(__pyx_v_group, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":336
 *     for exts in ext_groups.values():
 *         group = EntityAttributeExtGroup(exts[0].name, type(exts[0]))
 *         group.items = tuple(exts)             # <<<<<<<<<<<<<<
 *         ext_group_list.append(group)
 * 
 */
    __pyx_t_3 = __Pyx_PySequence_Tuple(__pyx_v_exts); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_group->items);
    __Pyx_DECREF(__pyx_v_group->items);
    __pyx_v_group->items = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":337
 *         group = EntityAttributeExtGroup(exts[0].name, type(exts[0]))
 *         group.items = tuple(exts)
 *         ext_group_list.append(group)             # <<<<<<<<<<<<<<
 * 
 *     return tuple(ext_group_list)
 */
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ext_group_list, ((PyObject *)__pyx_v_group)); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 337, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":339
 *         ext_group_list.append(group)
 * 
 *     return tuple(ext_group_list)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_AsTuple(__pyx_v_ext_group_list); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":316
 * 
 * 
 * cdef tuple group_extensions(EntityType entity):             # <<<<<<<<<<<<<<
 *     cdef dict ext_groups = {}
 *     cdef EntityAttributeExt ext
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_AddTraceback("yapic.entity._entity.group_extensions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ext_groups);
  __Pyx_XDECREF((PyObject *)__pyx_v_ext);
  __Pyx_XDECREF(__pyx_v_ext_group_list);
  __Pyx_XDECREF((PyObject *)__pyx_v_group);
  __Pyx_XDECREF(__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_exts);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":342
 * 
 * 
 * cpdef bint is_entity_alias(object o):             # <<<<<<<<<<<<<<
 *     cdef dict meta
 *     if isinstance(o, EntityType):
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_1is_entity_alias(PyObject *__pyx_self, PyObject *__pyx_v_o); /*proto*/
static int __pyx_f_5yapic_6entity_7_entity_is_entity_alias(PyObject *__pyx_v_o, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_v_meta = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_entity_alias", 0);

  /* "yapic/entity/_entity.pyx":344
 * cpdef bint is_entity_alias(object o):
 *     cdef dict meta
 *     if isinstance(o, EntityType):             # <<<<<<<<<<<<<<
 *         meta = (<EntityType>o).__meta__
 *         return meta.get("is_alias", False) is True
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_o, __pyx_ptype_5yapic_6entity_7_entity_EntityType); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":345
 *     cdef dict meta
 *     if isinstance(o, EntityType):
 *         meta = (<EntityType>o).__meta__             # <<<<<<<<<<<<<<
 *         return meta.get("is_alias", False) is True
 *     return False
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_o, __pyx_n_s_meta); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 345, __pyx_L1_error)
    __pyx_v_meta = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":346
 *     if isinstance(o, EntityType):
 *         meta = (<EntityType>o).__meta__
 *         return meta.get("is_alias", False) is True             # <<<<<<<<<<<<<<
 *     return False
 * 
 */
    if (unlikely(__pyx_v_meta == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
      __PYX_ERR(0, 346, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_meta, __pyx_n_u_is_alias, Py_False); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = (__pyx_t_3 == Py_True);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":344
 * cpdef bint is_entity_alias(object o):
 *     cdef dict meta
 *     if isinstance(o, EntityType):             # <<<<<<<<<<<<<<
 *         meta = (<EntityType>o).__meta__
 *         return meta.get("is_alias", False) is True
 */
  }

  /* "yapic/entity/_entity.pyx":347
 *         meta = (<EntityType>o).__meta__
 *         return meta.get("is_alias", False) is True
 *     return False             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":342
 * 
 * 
 * cpdef bint is_entity_alias(object o):             # <<<<<<<<<<<<<<
 *     cdef dict meta
 *     if isinstance(o, EntityType):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_WriteUnraisable("yapic.entity._entity.is_entity_alias", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_meta);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_1is_entity_alias(PyObject *__pyx_self, PyObject *__pyx_v_o); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_1is_entity_alias(PyObject *__pyx_self, PyObject *__pyx_v_o) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_entity_alias (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_is_entity_alias(__pyx_self, ((PyObject *)__pyx_v_o));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_is_entity_alias(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_o) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_entity_alias", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_5yapic_6entity_7_entity_is_entity_alias(__pyx_v_o, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.is_entity_alias", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":350
 * 
 * 
 * cpdef EntityType get_alias_target(EntityType o):             # <<<<<<<<<<<<<<
 *     cdef tuple mro
 *     if is_entity_alias(o):
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_3get_alias_target(PyObject *__pyx_self, PyObject *__pyx_v_o); /*proto*/
static struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_f_5yapic_6entity_7_entity_get_alias_target(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_o, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_v_mro = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alias_target", 0);

  /* "yapic/entity/_entity.pyx":352
 * cpdef EntityType get_alias_target(EntityType o):
 *     cdef tuple mro
 *     if is_entity_alias(o):             # <<<<<<<<<<<<<<
 *         mro = o.__mro__
 *         return mro[1]
 */
  __pyx_t_1 = (__pyx_f_5yapic_6entity_7_entity_is_entity_alias(((PyObject *)__pyx_v_o), 0) != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":353
 *     cdef tuple mro
 *     if is_entity_alias(o):
 *         mro = o.__mro__             # <<<<<<<<<<<<<<
 *         return mro[1]
 *     else:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_o), __pyx_n_s_mro); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(PyTuple_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 353, __pyx_L1_error)
    __pyx_v_mro = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":354
 *     if is_entity_alias(o):
 *         mro = o.__mro__
 *         return mro[1]             # <<<<<<<<<<<<<<
 *     else:
 *         return o
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    if (unlikely(__pyx_v_mro == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 354, __pyx_L1_error)
    }
    if (!(likely(((PyTuple_GET_ITEM(__pyx_v_mro, 1)) == Py_None) || likely(__Pyx_TypeTest(PyTuple_GET_ITEM(__pyx_v_mro, 1), __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_INCREF(PyTuple_GET_ITEM(__pyx_v_mro, 1));
    __pyx_r = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)PyTuple_GET_ITEM(__pyx_v_mro, 1));
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":352
 * cpdef EntityType get_alias_target(EntityType o):
 *     cdef tuple mro
 *     if is_entity_alias(o):             # <<<<<<<<<<<<<<
 *         mro = o.__mro__
 *         return mro[1]
 */
  }

  /* "yapic/entity/_entity.pyx":356
 *         return mro[1]
 *     else:
 *         return o             # <<<<<<<<<<<<<<
 * 
 * cdef EntityAttribute init_attribute(EntityAttribute by_type, object value):
 */
  /*else*/ {
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_o));
    __pyx_r = __pyx_v_o;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":350
 * 
 * 
 * cpdef EntityType get_alias_target(EntityType o):             # <<<<<<<<<<<<<<
 *     cdef tuple mro
 *     if is_entity_alias(o):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.get_alias_target", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mro);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_3get_alias_target(PyObject *__pyx_self, PyObject *__pyx_v_o); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_3get_alias_target(PyObject *__pyx_self, PyObject *__pyx_v_o) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_alias_target (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_o), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "o", 0))) __PYX_ERR(0, 350, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_2get_alias_target(__pyx_self, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_o));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_2get_alias_target(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_o) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alias_target", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5yapic_6entity_7_entity_get_alias_target(__pyx_v_o, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.get_alias_target", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":358
 *         return o
 * 
 * cdef EntityAttribute init_attribute(EntityAttribute by_type, object value):             # <<<<<<<<<<<<<<
 *     cdef EntityAttribute field
 *     cdef EntityAttributeExt ext
 */

static struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_f_5yapic_6entity_7_entity_init_attribute(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_by_type, PyObject *__pyx_v_value) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_field = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_ext = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init_attribute", 0);

  /* "yapic/entity/_entity.pyx":362
 *     cdef EntityAttributeExt ext
 * 
 *     if isinstance(value, EntityAttribute):             # <<<<<<<<<<<<<<
 *         field = <EntityAttribute>value
 *         field.copy_into(by_type)
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":363
 * 
 *     if isinstance(value, EntityAttribute):
 *         field = <EntityAttribute>value             # <<<<<<<<<<<<<<
 *         field.copy_into(by_type)
 *         return by_type
 */
    __pyx_t_3 = __pyx_v_value;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_field = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":364
 *     if isinstance(value, EntityAttribute):
 *         field = <EntityAttribute>value
 *         field.copy_into(by_type)             # <<<<<<<<<<<<<<
 *         return by_type
 *     elif isinstance(value, EntityAttributeExt):
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_field->__pyx_base.__pyx_vtab)->copy_into(__pyx_v_field, __pyx_v_by_type, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 364, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":365
 *         field = <EntityAttribute>value
 *         field.copy_into(by_type)
 *         return by_type             # <<<<<<<<<<<<<<
 *     elif isinstance(value, EntityAttributeExt):
 *         ext = <EntityAttributeExt>value
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_by_type));
    __pyx_r = __pyx_v_by_type;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":362
 *     cdef EntityAttributeExt ext
 * 
 *     if isinstance(value, EntityAttribute):             # <<<<<<<<<<<<<<
 *         field = <EntityAttribute>value
 *         field.copy_into(by_type)
 */
  }

  /* "yapic/entity/_entity.pyx":366
 *         field.copy_into(by_type)
 *         return by_type
 *     elif isinstance(value, EntityAttributeExt):             # <<<<<<<<<<<<<<
 *         ext = <EntityAttributeExt>value
 * 
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":367
 *         return by_type
 *     elif isinstance(value, EntityAttributeExt):
 *         ext = <EntityAttributeExt>value             # <<<<<<<<<<<<<<
 * 
 *         if ext.attr:
 */
    __pyx_t_3 = __pyx_v_value;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_ext = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":369
 *         ext = <EntityAttributeExt>value
 * 
 *         if ext.attr:             # <<<<<<<<<<<<<<
 *             by_type._exts_.extend(ext.attr._exts_)
 *         else:
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_ext->attr)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 369, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "yapic/entity/_entity.pyx":370
 * 
 *         if ext.attr:
 *             by_type._exts_.extend(ext.attr._exts_)             # <<<<<<<<<<<<<<
 *         else:
 *             by_type._exts_.append(ext)
 */
      if (unlikely(__pyx_v_by_type->_exts_ == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "extend");
        __PYX_ERR(0, 370, __pyx_L1_error)
      }
      __pyx_t_3 = __pyx_v_ext->attr->_exts_;
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyList_Extend(__pyx_v_by_type->_exts_, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 370, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":369
 *         ext = <EntityAttributeExt>value
 * 
 *         if ext.attr:             # <<<<<<<<<<<<<<
 *             by_type._exts_.extend(ext.attr._exts_)
 *         else:
 */
      goto __pyx_L4;
    }

    /* "yapic/entity/_entity.pyx":372
 *             by_type._exts_.extend(ext.attr._exts_)
 *         else:
 *             by_type._exts_.append(ext)             # <<<<<<<<<<<<<<
 *             by_type._exts_.extend(ext._tmp)
 * 
 */
    /*else*/ {
      if (unlikely(__pyx_v_by_type->_exts_ == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 372, __pyx_L1_error)
      }
      __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_by_type->_exts_, ((PyObject *)__pyx_v_ext)); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 372, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":373
 *         else:
 *             by_type._exts_.append(ext)
 *             by_type._exts_.extend(ext._tmp)             # <<<<<<<<<<<<<<
 * 
 *         for ext in by_type._exts_:
 */
      if (unlikely(__pyx_v_by_type->_exts_ == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "extend");
        __PYX_ERR(0, 373, __pyx_L1_error)
      }
      __pyx_t_3 = __pyx_v_ext->_tmp;
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyList_Extend(__pyx_v_by_type->_exts_, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 373, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_L4:;

    /* "yapic/entity/_entity.pyx":375
 *             by_type._exts_.extend(ext._tmp)
 * 
 *         for ext in by_type._exts_:             # <<<<<<<<<<<<<<
 *             ext.attr = by_type
 * 
 */
    if (unlikely(__pyx_v_by_type->_exts_ == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 375, __pyx_L1_error)
    }
    __pyx_t_3 = __pyx_v_by_type->_exts_; __Pyx_INCREF(__pyx_t_3); __pyx_t_5 = 0;
    for (;;) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_3)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_6 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_5); __Pyx_INCREF(__pyx_t_6); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 375, __pyx_L1_error)
      #else
      __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 375, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt))))) __PYX_ERR(0, 375, __pyx_L1_error)
      __Pyx_DECREF_SET(__pyx_v_ext, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_t_6));
      __pyx_t_6 = 0;

      /* "yapic/entity/_entity.pyx":376
 * 
 *         for ext in by_type._exts_:
 *             ext.attr = by_type             # <<<<<<<<<<<<<<
 * 
 *         return by_type
 */
      __Pyx_INCREF(((PyObject *)__pyx_v_by_type));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_by_type));
      __Pyx_GOTREF(__pyx_v_ext->attr);
      __Pyx_DECREF(((PyObject *)__pyx_v_ext->attr));
      __pyx_v_ext->attr = __pyx_v_by_type;

      /* "yapic/entity/_entity.pyx":375
 *             by_type._exts_.extend(ext._tmp)
 * 
 *         for ext in by_type._exts_:             # <<<<<<<<<<<<<<
 *             ext.attr = by_type
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":378
 *             ext.attr = by_type
 * 
 *         return by_type             # <<<<<<<<<<<<<<
 *     else:
 *         if value is not NOTSET:
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_by_type));
    __pyx_r = __pyx_v_by_type;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":366
 *         field.copy_into(by_type)
 *         return by_type
 *     elif isinstance(value, EntityAttributeExt):             # <<<<<<<<<<<<<<
 *         ext = <EntityAttributeExt>value
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":380
 *         return by_type
 *     else:
 *         if value is not NOTSET:             # <<<<<<<<<<<<<<
 *             by_type._default_ = value
 *         return by_type
 */
  /*else*/ {
    __pyx_t_1 = (__pyx_v_value != ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "yapic/entity/_entity.pyx":381
 *     else:
 *         if value is not NOTSET:
 *             by_type._default_ = value             # <<<<<<<<<<<<<<
 *         return by_type
 * 
 */
      __Pyx_INCREF(__pyx_v_value);
      __Pyx_GIVEREF(__pyx_v_value);
      __Pyx_GOTREF(__pyx_v_by_type->_default_);
      __Pyx_DECREF(__pyx_v_by_type->_default_);
      __pyx_v_by_type->_default_ = __pyx_v_value;

      /* "yapic/entity/_entity.pyx":380
 *         return by_type
 *     else:
 *         if value is not NOTSET:             # <<<<<<<<<<<<<<
 *             by_type._default_ = value
 *         return by_type
 */
    }

    /* "yapic/entity/_entity.pyx":382
 *         if value is not NOTSET:
 *             by_type._default_ = value
 *         return by_type             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __Pyx_INCREF(((PyObject *)__pyx_v_by_type));
    __pyx_r = __pyx_v_by_type;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":358
 *         return o
 * 
 * cdef EntityAttribute init_attribute(EntityAttribute by_type, object value):             # <<<<<<<<<<<<<<
 *     cdef EntityAttribute field
 *     cdef EntityAttributeExt ext
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yapic.entity._entity.init_attribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_field);
  __Pyx_XDECREF((PyObject *)__pyx_v_ext);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":389
 * 
 * cdef class EntityAttribute(Expression):
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         global ENTITY_ATTRIBUTE_UID_COUNTER
 *         self._uid_ = ENTITY_ATTRIBUTE_UID_COUNTER
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_impl = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":391
 *     def __cinit__(self, *args, **kwargs):
 *         global ENTITY_ATTRIBUTE_UID_COUNTER
 *         self._uid_ = ENTITY_ATTRIBUTE_UID_COUNTER             # <<<<<<<<<<<<<<
 *         ENTITY_ATTRIBUTE_UID_COUNTER += 1
 * 
 */
  __pyx_v_self->_uid_ = __pyx_v_5yapic_6entity_7_entity_ENTITY_ATTRIBUTE_UID_COUNTER;

  /* "yapic/entity/_entity.pyx":392
 *         global ENTITY_ATTRIBUTE_UID_COUNTER
 *         self._uid_ = ENTITY_ATTRIBUTE_UID_COUNTER
 *         ENTITY_ATTRIBUTE_UID_COUNTER += 1             # <<<<<<<<<<<<<<
 * 
 *         if args:
 */
  __pyx_v_5yapic_6entity_7_entity_ENTITY_ATTRIBUTE_UID_COUNTER = (__pyx_v_5yapic_6entity_7_entity_ENTITY_ATTRIBUTE_UID_COUNTER + 1);

  /* "yapic/entity/_entity.pyx":394
 *         ENTITY_ATTRIBUTE_UID_COUNTER += 1
 * 
 *         if args:             # <<<<<<<<<<<<<<
 *             impl = args[0]
 *             if isinstance(impl, EntityAttributeImpl):
 */
  __pyx_t_1 = (PyTuple_GET_SIZE(__pyx_v_args) != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":395
 * 
 *         if args:
 *             impl = args[0]             # <<<<<<<<<<<<<<
 *             if isinstance(impl, EntityAttributeImpl):
 *                 self._impl_ = impl
 */
    __pyx_t_2 = PyTuple_GET_ITEM(__pyx_v_args, 0);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v_impl = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":396
 *         if args:
 *             impl = args[0]
 *             if isinstance(impl, EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *                 self._impl_ = impl
 *                 self._impl = impl
 */
    __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_impl, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeImpl); 
    __pyx_t_3 = (__pyx_t_1 != 0);
    if (__pyx_t_3) {

      /* "yapic/entity/_entity.pyx":397
 *             impl = args[0]
 *             if isinstance(impl, EntityAttributeImpl):
 *                 self._impl_ = impl             # <<<<<<<<<<<<<<
 *                 self._impl = impl
 *             else:
 */
      if (!(likely(((__pyx_v_impl) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_impl, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeImpl))))) __PYX_ERR(0, 397, __pyx_L1_error)
      __pyx_t_2 = __pyx_v_impl;
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_v_self->_impl_);
      __Pyx_DECREF(((PyObject *)__pyx_v_self->_impl_));
      __pyx_v_self->_impl_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "yapic/entity/_entity.pyx":398
 *             if isinstance(impl, EntityAttributeImpl):
 *                 self._impl_ = impl
 *                 self._impl = impl             # <<<<<<<<<<<<<<
 *             else:
 *                 self._impl_ = None
 */
      __Pyx_INCREF(__pyx_v_impl);
      __Pyx_GIVEREF(__pyx_v_impl);
      __Pyx_GOTREF(__pyx_v_self->_impl);
      __Pyx_DECREF(__pyx_v_self->_impl);
      __pyx_v_self->_impl = __pyx_v_impl;

      /* "yapic/entity/_entity.pyx":396
 *         if args:
 *             impl = args[0]
 *             if isinstance(impl, EntityAttributeImpl):             # <<<<<<<<<<<<<<
 *                 self._impl_ = impl
 *                 self._impl = impl
 */
      goto __pyx_L4;
    }

    /* "yapic/entity/_entity.pyx":400
 *                 self._impl = impl
 *             else:
 *                 self._impl_ = None             # <<<<<<<<<<<<<<
 *                 self._impl = impl
 *         else:
 */
    /*else*/ {
      __Pyx_INCREF(Py_None);
      __Pyx_GIVEREF(Py_None);
      __Pyx_GOTREF(__pyx_v_self->_impl_);
      __Pyx_DECREF(((PyObject *)__pyx_v_self->_impl_));
      __pyx_v_self->_impl_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)Py_None);

      /* "yapic/entity/_entity.pyx":401
 *             else:
 *                 self._impl_ = None
 *                 self._impl = impl             # <<<<<<<<<<<<<<
 *         else:
 *             self._impl = None
 */
      __Pyx_INCREF(__pyx_v_impl);
      __Pyx_GIVEREF(__pyx_v_impl);
      __Pyx_GOTREF(__pyx_v_self->_impl);
      __Pyx_DECREF(__pyx_v_self->_impl);
      __pyx_v_self->_impl = __pyx_v_impl;
    }
    __pyx_L4:;

    /* "yapic/entity/_entity.pyx":394
 *         ENTITY_ATTRIBUTE_UID_COUNTER += 1
 * 
 *         if args:             # <<<<<<<<<<<<<<
 *             impl = args[0]
 *             if isinstance(impl, EntityAttributeImpl):
 */
    goto __pyx_L3;
  }

  /* "yapic/entity/_entity.pyx":403
 *                 self._impl = impl
 *         else:
 *             self._impl = None             # <<<<<<<<<<<<<<
 * 
 *         self._exts_ = []
 */
  /*else*/ {
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->_impl);
    __Pyx_DECREF(__pyx_v_self->_impl);
    __pyx_v_self->_impl = Py_None;
  }
  __pyx_L3:;

  /* "yapic/entity/_entity.pyx":405
 *             self._impl = None
 * 
 *         self._exts_ = []             # <<<<<<<<<<<<<<
 *         self._deps_ = set()
 * 
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_exts_);
  __Pyx_DECREF(__pyx_v_self->_exts_);
  __pyx_v_self->_exts_ = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":406
 * 
 *         self._exts_ = []
 *         self._deps_ = set()             # <<<<<<<<<<<<<<
 * 
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):
 */
  __pyx_t_2 = PySet_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_deps_);
  __Pyx_DECREF(__pyx_v_self->_deps_);
  __pyx_v_self->_deps_ = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":389
 * 
 * cdef class EntityAttribute(Expression):
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         global ENTITY_ATTRIBUTE_UID_COUNTER
 *         self._uid_ = ENTITY_ATTRIBUTE_UID_COUNTER
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_impl);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":408
 *         self._deps_ = set()
 * 
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):             # <<<<<<<<<<<<<<
 *         if other.attr is not None:
 *             if other.attr is not self:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_3__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_3__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__floordiv__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "self", 0))) __PYX_ERR(0, 408, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt, 1, "other", 0))) __PYX_ERR(0, 408, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_2__floordiv__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_2__floordiv__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__floordiv__", 0);

  /* "yapic/entity/_entity.pyx":409
 * 
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):
 *         if other.attr is not None:             # <<<<<<<<<<<<<<
 *             if other.attr is not self:
 *                 raise RuntimeError("Can't rebind entity attribute")
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_other->attr) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":410
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):
 *         if other.attr is not None:
 *             if other.attr is not self:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Can't rebind entity attribute")
 *         else:
 */
    __pyx_t_2 = (__pyx_v_other->attr != __pyx_v_self);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (unlikely(__pyx_t_1)) {

      /* "yapic/entity/_entity.pyx":411
 *         if other.attr is not None:
 *             if other.attr is not self:
 *                 raise RuntimeError("Can't rebind entity attribute")             # <<<<<<<<<<<<<<
 *         else:
 *             other.attr = self
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 411, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(0, 411, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":410
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):
 *         if other.attr is not None:
 *             if other.attr is not self:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Can't rebind entity attribute")
 *         else:
 */
    }

    /* "yapic/entity/_entity.pyx":409
 * 
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):
 *         if other.attr is not None:             # <<<<<<<<<<<<<<
 *             if other.attr is not self:
 *                 raise RuntimeError("Can't rebind entity attribute")
 */
    goto __pyx_L3;
  }

  /* "yapic/entity/_entity.pyx":413
 *                 raise RuntimeError("Can't rebind entity attribute")
 *         else:
 *             other.attr = self             # <<<<<<<<<<<<<<
 *         self._exts_.append(other)
 *         return self
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_other->attr);
    __Pyx_DECREF(((PyObject *)__pyx_v_other->attr));
    __pyx_v_other->attr = __pyx_v_self;
  }
  __pyx_L3:;

  /* "yapic/entity/_entity.pyx":414
 *         else:
 *             other.attr = self
 *         self._exts_.append(other)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  if (unlikely(__pyx_v_self->_exts_ == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 414, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->_exts_, ((PyObject *)__pyx_v_other)); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 414, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":415
 *             other.attr = self
 *         self._exts_.append(other)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __get__(self, instance, owner):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":408
 *         self._deps_ = set()
 * 
 *     def __floordiv__(EntityAttribute self, EntityAttributeExt other):             # <<<<<<<<<<<<<<
 *         if other.attr is not None:
 *             if other.attr is not self:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.__floordiv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":417
 *         return self
 * 
 *     def __get__(self, instance, owner):             # <<<<<<<<<<<<<<
 *         if instance is None:
 *             return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5__get__(PyObject *__pyx_v_self, PyObject *__pyx_v_instance, PyObject *__pyx_v_owner); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5__get__(PyObject *__pyx_v_self, PyObject *__pyx_v_instance, PyObject *__pyx_v_owner) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_4__get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((PyObject *)__pyx_v_instance), ((PyObject *)__pyx_v_owner));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_4__get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_instance, CYTHON_UNUSED PyObject *__pyx_v_owner) {
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "yapic/entity/_entity.pyx":418
 * 
 *     def __get__(self, instance, owner):
 *         if instance is None:             # <<<<<<<<<<<<<<
 *             return self
 *         elif isinstance(instance, EntityBase):
 */
  __pyx_t_1 = (__pyx_v_instance == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":419
 *     def __get__(self, instance, owner):
 *         if instance is None:
 *             return self             # <<<<<<<<<<<<<<
 *         elif isinstance(instance, EntityBase):
 *             res = (<EntityBase>instance).__state__.get_value(self)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_v_self);
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":418
 * 
 *     def __get__(self, instance, owner):
 *         if instance is None:             # <<<<<<<<<<<<<<
 *             return self
 *         elif isinstance(instance, EntityBase):
 */
  }

  /* "yapic/entity/_entity.pyx":420
 *         if instance is None:
 *             return self
 *         elif isinstance(instance, EntityBase):             # <<<<<<<<<<<<<<
 *             res = (<EntityBase>instance).__state__.get_value(self)
 *             if res is NOTSET:
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_instance, __pyx_ptype_5yapic_6entity_7_entity_EntityBase); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (likely(__pyx_t_1)) {

    /* "yapic/entity/_entity.pyx":421
 *             return self
 *         elif isinstance(instance, EntityBase):
 *             res = (<EntityBase>instance).__state__.get_value(self)             # <<<<<<<<<<<<<<
 *             if res is NOTSET:
 *                 return None
 */
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_instance)->__state__, __pyx_v_self); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_res = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":422
 *         elif isinstance(instance, EntityBase):
 *             res = (<EntityBase>instance).__state__.get_value(self)
 *             if res is NOTSET:             # <<<<<<<<<<<<<<
 *                 return None
 *             else:
 */
    __pyx_t_1 = (__pyx_v_res == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "yapic/entity/_entity.pyx":423
 *             res = (<EntityBase>instance).__state__.get_value(self)
 *             if res is NOTSET:
 *                 return None             # <<<<<<<<<<<<<<
 *             else:
 *                 return res
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_r = Py_None; __Pyx_INCREF(Py_None);
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":422
 *         elif isinstance(instance, EntityBase):
 *             res = (<EntityBase>instance).__state__.get_value(self)
 *             if res is NOTSET:             # <<<<<<<<<<<<<<
 *                 return None
 *             else:
 */
    }

    /* "yapic/entity/_entity.pyx":425
 *                 return None
 *             else:
 *                 return res             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Instance must be 'None' or 'EntityBase'")
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_res);
      __pyx_r = __pyx_v_res;
      goto __pyx_L0;
    }

    /* "yapic/entity/_entity.pyx":420
 *         if instance is None:
 *             return self
 *         elif isinstance(instance, EntityBase):             # <<<<<<<<<<<<<<
 *             res = (<EntityBase>instance).__state__.get_value(self)
 *             if res is NOTSET:
 */
  }

  /* "yapic/entity/_entity.pyx":427
 *                 return res
 *         else:
 *             raise TypeError("Instance must be 'None' or 'EntityBase'")             # <<<<<<<<<<<<<<
 * 
 *     def __set__(self, EntityBase instance, value):
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 427, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 427, __pyx_L1_error)
  }

  /* "yapic/entity/_entity.pyx":417
 *         return self
 * 
 *     def __get__(self, instance, owner):             # <<<<<<<<<<<<<<
 *         if instance is None:
 *             return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":429
 *             raise TypeError("Instance must be 'None' or 'EntityBase'")
 * 
 *     def __set__(self, EntityBase instance, value):             # <<<<<<<<<<<<<<
 *         instance.__state__.set_value(self, value)
 * 
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_7__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_instance, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_7__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_instance, PyObject *__pyx_v_value) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_instance), __pyx_ptype_5yapic_6entity_7_entity_EntityBase, 1, "instance", 0))) __PYX_ERR(0, 429, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6__set__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_instance), ((PyObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_instance, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "yapic/entity/_entity.pyx":430
 * 
 *     def __set__(self, EntityBase instance, value):
 *         instance.__state__.set_value(self, value)             # <<<<<<<<<<<<<<
 * 
 *     def __delete__(self, EntityBase instance):
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_11EntityState_set_value(__pyx_v_instance->__state__, __pyx_v_self, __pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 430, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":429
 *             raise TypeError("Instance must be 'None' or 'EntityBase'")
 * 
 *     def __set__(self, EntityBase instance, value):             # <<<<<<<<<<<<<<
 *         instance.__state__.set_value(self, value)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":432
 *         instance.__state__.set_value(self, value)
 * 
 *     def __delete__(self, EntityBase instance):             # <<<<<<<<<<<<<<
 *         instance.__state__.del_value(self)
 * 
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9__delete__(PyObject *__pyx_v_self, PyObject *__pyx_v_instance); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9__delete__(PyObject *__pyx_v_self, PyObject *__pyx_v_instance) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__delete__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_instance), __pyx_ptype_5yapic_6entity_7_entity_EntityBase, 1, "instance", 0))) __PYX_ERR(0, 432, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_8__delete__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_instance));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_8__delete__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_instance) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__delete__", 0);

  /* "yapic/entity/_entity.pyx":433
 * 
 *     def __delete__(self, EntityBase instance):
 *         instance.__state__.del_value(self)             # <<<<<<<<<<<<<<
 * 
 *     cdef object init(self, EntityType entity):
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_11EntityState_del_value(__pyx_v_instance->__state__, __pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":432
 *         instance.__state__.set_value(self, value)
 * 
 *     def __delete__(self, EntityBase instance):             # <<<<<<<<<<<<<<
 *         instance.__state__.del_value(self)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.__delete__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":435
 *         instance.__state__.del_value(self)
 * 
 *     cdef object init(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         if self._entity_ is not None and self._entity_ is not entity:
 *             raise RuntimeError("Can't rebind entity attribute")
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity) {
  PyObject *__pyx_v_ext = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);

  /* "yapic/entity/_entity.pyx":436
 * 
 *     cdef object init(self, EntityType entity):
 *         if self._entity_ is not None and self._entity_ is not entity:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Can't rebind entity attribute")
 *         self._entity_ = entity
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_self->_entity_) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__pyx_v_self->_entity_ != __pyx_v_entity);
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "yapic/entity/_entity.pyx":437
 *     cdef object init(self, EntityType entity):
 *         if self._entity_ is not None and self._entity_ is not entity:
 *             raise RuntimeError("Can't rebind entity attribute")             # <<<<<<<<<<<<<<
 *         self._entity_ = entity
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 437, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":436
 * 
 *     cdef object init(self, EntityType entity):
 *         if self._entity_ is not None and self._entity_ is not entity:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Can't rebind entity attribute")
 *         self._entity_ = entity
 */
  }

  /* "yapic/entity/_entity.pyx":438
 *         if self._entity_ is not None and self._entity_ is not entity:
 *             raise RuntimeError("Can't rebind entity attribute")
 *         self._entity_ = entity             # <<<<<<<<<<<<<<
 * 
 *         for ext in self._exts_:
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_entity));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_entity));
  __Pyx_GOTREF(__pyx_v_self->_entity_);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_entity_));
  __pyx_v_self->_entity_ = __pyx_v_entity;

  /* "yapic/entity/_entity.pyx":440
 *         self._entity_ = entity
 * 
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             ext.init(self)
 * 
 */
  if (unlikely(__pyx_v_self->_exts_ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 440, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_v_self->_exts_; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_6 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_6); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 440, __pyx_L1_error)
    #else
    __pyx_t_6 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 440, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_ext, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":441
 * 
 *         for ext in self._exts_:
 *             ext.init(self)             # <<<<<<<<<<<<<<
 * 
 *     cdef object bind(self):
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ext, __pyx_n_s_init_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, ((PyObject *)__pyx_v_self)) : __Pyx_PyObject_CallOneArg(__pyx_t_7, ((PyObject *)__pyx_v_self));
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":440
 *         self._entity_ = entity
 * 
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             ext.init(self)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yapic/entity/_entity.pyx":435
 *         instance.__state__.del_value(self)
 * 
 *     cdef object init(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         if self._entity_ is not None and self._entity_ is not entity:
 *             raise RuntimeError("Can't rebind entity attribute")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ext);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":443
 *             ext.init(self)
 * 
 *     cdef object bind(self):             # <<<<<<<<<<<<<<
 *         if self._impl_ is None:
 *             if self._impl is None:
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_bind(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  CYTHON_UNUSED PyObject *__pyx_v_e = NULL;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_ext = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bind", 0);

  /* "yapic/entity/_entity.pyx":444
 * 
 *     cdef object bind(self):
 *         if self._impl_ is None:             # <<<<<<<<<<<<<<
 *             if self._impl is None:
 *                 raise TypeError("Missing attribute implementation: %r" % self)
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_self->_impl_) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":445
 *     cdef object bind(self):
 *         if self._impl_ is None:
 *             if self._impl is None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("Missing attribute implementation: %r" % self)
 * 
 */
    __pyx_t_2 = (__pyx_v_self->_impl == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (unlikely(__pyx_t_1)) {

      /* "yapic/entity/_entity.pyx":446
 *         if self._impl_ is None:
 *             if self._impl is None:
 *                 raise TypeError("Missing attribute implementation: %r" % self)             # <<<<<<<<<<<<<<
 * 
 *             if is_forward_decl(self._impl):
 */
      __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_Missing_attribute_implementation, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 446, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 446, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_ERR(0, 446, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":445
 *     cdef object bind(self):
 *         if self._impl_ is None:
 *             if self._impl is None:             # <<<<<<<<<<<<<<
 *                 raise TypeError("Missing attribute implementation: %r" % self)
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":448
 *                 raise TypeError("Missing attribute implementation: %r" % self)
 * 
 *             if is_forward_decl(self._impl):             # <<<<<<<<<<<<<<
 *                 try:
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 */
    __pyx_t_4 = __pyx_v_self->_impl;
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_1 = (__pyx_f_5yapic_6entity_8_factory_is_forward_decl(__pyx_t_4) != 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_1) {

      /* "yapic/entity/_entity.pyx":449
 * 
 *             if is_forward_decl(self._impl):
 *                 try:             # <<<<<<<<<<<<<<
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 *                 except NameError as e:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        /*try:*/ {

          /* "yapic/entity/_entity.pyx":450
 *             if is_forward_decl(self._impl):
 *                 try:
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)             # <<<<<<<<<<<<<<
 *                 except NameError as e:
 *                     return False
 */
          __pyx_t_4 = __pyx_v_self->_impl;
          __Pyx_INCREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_entity_), __pyx_n_s_registry); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 450, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_locals); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 450, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (!(likely(PyDict_CheckExact(__pyx_t_8))||((__pyx_t_8) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_8)->tp_name), 0))) __PYX_ERR(0, 450, __pyx_L6_error)
          __pyx_t_3 = __pyx_f_5yapic_6entity_8_factory_new_instance_from_forward(__pyx_t_4, ((PyObject*)__pyx_t_8)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 450, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeImpl))))) __PYX_ERR(0, 450, __pyx_L6_error)
          __Pyx_GIVEREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_v_self->_impl_);
          __Pyx_DECREF(((PyObject *)__pyx_v_self->_impl_));
          __pyx_v_self->_impl_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_t_3);
          __pyx_t_3 = 0;

          /* "yapic/entity/_entity.pyx":449
 * 
 *             if is_forward_decl(self._impl):
 *                 try:             # <<<<<<<<<<<<<<
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 *                 except NameError as e:
 */
        }
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L11_try_end;
        __pyx_L6_error:;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "yapic/entity/_entity.pyx":451
 *                 try:
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 *                 except NameError as e:             # <<<<<<<<<<<<<<
 *                     return False
 *             else:
 */
        __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_NameError);
        if (__pyx_t_9) {
          __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_8, &__pyx_t_4) < 0) __PYX_ERR(0, 451, __pyx_L8_except_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_8);
          __pyx_v_e = __pyx_t_8;
          /*try:*/ {

            /* "yapic/entity/_entity.pyx":452
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 *                 except NameError as e:
 *                     return False             # <<<<<<<<<<<<<<
 *             else:
 *                 self._impl_ = self._impl
 */
            __Pyx_XDECREF(__pyx_r);
            __Pyx_INCREF(Py_False);
            __pyx_r = Py_False;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            goto __pyx_L16_return;
          }

          /* "yapic/entity/_entity.pyx":451
 *                 try:
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 *                 except NameError as e:             # <<<<<<<<<<<<<<
 *                     return False
 *             else:
 */
          /*finally:*/ {
            __pyx_L16_return: {
              __pyx_t_10 = __pyx_r;
              __pyx_r = 0;
              __Pyx_DECREF(__pyx_v_e);
              __pyx_v_e = NULL;
              __pyx_r = __pyx_t_10;
              __pyx_t_10 = 0;
              goto __pyx_L9_except_return;
            }
          }
        }
        goto __pyx_L8_except_error;
        __pyx_L8_except_error:;

        /* "yapic/entity/_entity.pyx":449
 * 
 *             if is_forward_decl(self._impl):
 *                 try:             # <<<<<<<<<<<<<<
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 *                 except NameError as e:
 */
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
        goto __pyx_L1_error;
        __pyx_L9_except_return:;
        __Pyx_XGIVEREF(__pyx_t_5);
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
        goto __pyx_L0;
        __pyx_L11_try_end:;
      }

      /* "yapic/entity/_entity.pyx":448
 *                 raise TypeError("Missing attribute implementation: %r" % self)
 * 
 *             if is_forward_decl(self._impl):             # <<<<<<<<<<<<<<
 *                 try:
 *                     self._impl_ = new_instance_from_forward(self._impl, self._entity_.__registry__.locals)
 */
      goto __pyx_L5;
    }

    /* "yapic/entity/_entity.pyx":454
 *                     return False
 *             else:
 *                 self._impl_ = self._impl             # <<<<<<<<<<<<<<
 *             self._impl = None
 * 
 */
    /*else*/ {
      if (!(likely(((__pyx_v_self->_impl) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self->_impl, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeImpl))))) __PYX_ERR(0, 454, __pyx_L1_error)
      __pyx_t_4 = __pyx_v_self->_impl;
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_v_self->_impl_);
      __Pyx_DECREF(((PyObject *)__pyx_v_self->_impl_));
      __pyx_v_self->_impl_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_t_4);
      __pyx_t_4 = 0;
    }
    __pyx_L5:;

    /* "yapic/entity/_entity.pyx":455
 *             else:
 *                 self._impl_ = self._impl
 *             self._impl = None             # <<<<<<<<<<<<<<
 * 
 *         if not self._impl_.inited:
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->_impl);
    __Pyx_DECREF(__pyx_v_self->_impl);
    __pyx_v_self->_impl = Py_None;

    /* "yapic/entity/_entity.pyx":444
 * 
 *     cdef object bind(self):
 *         if self._impl_ is None:             # <<<<<<<<<<<<<<
 *             if self._impl is None:
 *                 raise TypeError("Missing attribute implementation: %r" % self)
 */
  }

  /* "yapic/entity/_entity.pyx":457
 *             self._impl = None
 * 
 *         if not self._impl_.inited:             # <<<<<<<<<<<<<<
 *             if self._impl_.init(self) is False:
 *                 return False
 */
  __pyx_t_1 = ((!(__pyx_v_self->_impl_->inited != 0)) != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":458
 * 
 *         if not self._impl_.inited:
 *             if self._impl_.init(self) is False:             # <<<<<<<<<<<<<<
 *                 return False
 *             else:
 */
    __pyx_t_4 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self->_impl_->__pyx_vtab)->init(__pyx_v_self->_impl_, __pyx_v_self, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 458, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = (__pyx_t_4 == Py_False);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "yapic/entity/_entity.pyx":459
 *         if not self._impl_.inited:
 *             if self._impl_.init(self) is False:
 *                 return False             # <<<<<<<<<<<<<<
 *             else:
 *                 self._impl_.inited = True
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":458
 * 
 *         if not self._impl_.inited:
 *             if self._impl_.init(self) is False:             # <<<<<<<<<<<<<<
 *                 return False
 *             else:
 */
    }

    /* "yapic/entity/_entity.pyx":461
 *                 return False
 *             else:
 *                 self._impl_.inited = True             # <<<<<<<<<<<<<<
 * 
 *         cdef EntityAttributeExt ext
 */
    /*else*/ {
      __pyx_v_self->_impl_->inited = 1;
    }

    /* "yapic/entity/_entity.pyx":457
 *             self._impl = None
 * 
 *         if not self._impl_.inited:             # <<<<<<<<<<<<<<
 *             if self._impl_.init(self) is False:
 *                 return False
 */
  }

  /* "yapic/entity/_entity.pyx":464
 * 
 *         cdef EntityAttributeExt ext
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             if not ext.bound and not ext.bind():
 *                 return False
 */
  if (unlikely(__pyx_v_self->_exts_ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 464, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_v_self->_exts_; __Pyx_INCREF(__pyx_t_4); __pyx_t_11 = 0;
  for (;;) {
    if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_11); __Pyx_INCREF(__pyx_t_8); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 464, __pyx_L1_error)
    #else
    __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 464, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    #endif
    if (!(likely(((__pyx_t_8) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_8, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt))))) __PYX_ERR(0, 464, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_ext, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_t_8));
    __pyx_t_8 = 0;

    /* "yapic/entity/_entity.pyx":465
 *         cdef EntityAttributeExt ext
 *         for ext in self._exts_:
 *             if not ext.bound and not ext.bind():             # <<<<<<<<<<<<<<
 *                 return False
 *             ext.bound = True
 */
    __pyx_t_1 = ((!(__pyx_v_ext->bound != 0)) != 0);
    if (__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L24_bool_binop_done;
    }
    __pyx_t_8 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_ext->__pyx_vtab)->bind(__pyx_v_ext, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 465, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_12 = ((!__pyx_t_1) != 0);
    __pyx_t_2 = __pyx_t_12;
    __pyx_L24_bool_binop_done:;
    if (__pyx_t_2) {

      /* "yapic/entity/_entity.pyx":466
 *         for ext in self._exts_:
 *             if not ext.bound and not ext.bind():
 *                 return False             # <<<<<<<<<<<<<<
 *             ext.bound = True
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":465
 *         cdef EntityAttributeExt ext
 *         for ext in self._exts_:
 *             if not ext.bound and not ext.bind():             # <<<<<<<<<<<<<<
 *                 return False
 *             ext.bound = True
 */
    }

    /* "yapic/entity/_entity.pyx":467
 *             if not ext.bound and not ext.bind():
 *                 return False
 *             ext.bound = True             # <<<<<<<<<<<<<<
 * 
 *         return True
 */
    __pyx_v_ext->bound = 1;

    /* "yapic/entity/_entity.pyx":464
 * 
 *         cdef EntityAttributeExt ext
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             if not ext.bound and not ext.bind():
 *                 return False
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yapic/entity/_entity.pyx":469
 *             ext.bound = True
 * 
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     cpdef clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":443
 *             ext.init(self)
 * 
 *     cdef object bind(self):             # <<<<<<<<<<<<<<
 *         if self._impl_ is None:
 *             if self._impl is None:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF((PyObject *)__pyx_v_ext);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":471
 *         return True
 * 
 *     cpdef clone(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_11clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clone); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 471, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_11clone)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 471, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":472
 * 
 *     cpdef clone(self):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     cpdef clone_exts(self, EntityAttribute attr):
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 472, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":471
 *         return True
 * 
 *     cpdef clone(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_11clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_11clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_10clone(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_10clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":474
 *         raise NotImplementedError()
 * 
 *     cpdef clone_exts(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef EntityAttributeExt ext
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_13clone_exts(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone_exts(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, int __pyx_skip_dispatch) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_ext = 0;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone_exts", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clone_exts); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_13clone_exts)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_attr)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_attr));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 474, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":477
 *         cdef EntityAttributeExt ext
 * 
 *         res = []             # <<<<<<<<<<<<<<
 *         for ext in self._exts_:
 *             ext = ext.clone()
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":478
 * 
 *         res = []
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             ext = ext.clone()
 *             ext.attr = attr
 */
  if (unlikely(__pyx_v_self->_exts_ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 478, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->_exts_; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 478, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt))))) __PYX_ERR(0, 478, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_ext, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":479
 *         res = []
 *         for ext in self._exts_:
 *             ext = ext.clone()             # <<<<<<<<<<<<<<
 *             ext.attr = attr
 *             res.append(ext)
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_ext->__pyx_vtab)->clone(__pyx_v_ext, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 479, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt))))) __PYX_ERR(0, 479, __pyx_L1_error)
    __Pyx_DECREF_SET(__pyx_v_ext, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":480
 *         for ext in self._exts_:
 *             ext = ext.clone()
 *             ext.attr = attr             # <<<<<<<<<<<<<<
 *             res.append(ext)
 *         return res
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_attr));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
    __Pyx_GOTREF(__pyx_v_ext->attr);
    __Pyx_DECREF(((PyObject *)__pyx_v_ext->attr));
    __pyx_v_ext->attr = __pyx_v_attr;

    /* "yapic/entity/_entity.pyx":481
 *             ext = ext.clone()
 *             ext.attr = attr
 *             res.append(ext)             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_res, ((PyObject *)__pyx_v_ext)); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 481, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":478
 * 
 *         res = []
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             ext = ext.clone()
 *             ext.attr = attr
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":482
 *             ext.attr = attr
 *             res.append(ext)
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cpdef object get_ext(self, ext_type):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":474
 *         raise NotImplementedError()
 * 
 *     cpdef clone_exts(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef EntityAttributeExt ext
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.clone_exts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ext);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_13clone_exts(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_13clone_exts(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone_exts (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 474, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_12clone_exts(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_12clone_exts(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone_exts", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone_exts(__pyx_v_self, __pyx_v_attr, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.clone_exts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":484
 *         return res
 * 
 *     cpdef object get_ext(self, ext_type):             # <<<<<<<<<<<<<<
 *         for ext in self._exts_:
 *             if isinstance(ext, ext_type):
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_15get_ext(PyObject *__pyx_v_self, PyObject *__pyx_v_ext_type); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_get_ext(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_ext_type, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_ext = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_ext", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_ext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 484, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_15get_ext)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_ext_type) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_ext_type);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":485
 * 
 *     cpdef object get_ext(self, ext_type):
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             if isinstance(ext, ext_type):
 *                 return ext
 */
  if (unlikely(__pyx_v_self->_exts_ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 485, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->_exts_; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 485, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 485, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_ext, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":486
 *     cpdef object get_ext(self, ext_type):
 *         for ext in self._exts_:
 *             if isinstance(ext, ext_type):             # <<<<<<<<<<<<<<
 *                 return ext
 * 
 */
    __pyx_t_6 = PyObject_IsInstance(__pyx_v_ext, __pyx_v_ext_type); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 486, __pyx_L1_error)
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "yapic/entity/_entity.pyx":487
 *         for ext in self._exts_:
 *             if isinstance(ext, ext_type):
 *                 return ext             # <<<<<<<<<<<<<<
 * 
 *     cpdef copy_into(self, EntityAttribute other):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_ext);
      __pyx_r = __pyx_v_ext;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":486
 *     cpdef object get_ext(self, ext_type):
 *         for ext in self._exts_:
 *             if isinstance(ext, ext_type):             # <<<<<<<<<<<<<<
 *                 return ext
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":485
 * 
 *     cpdef object get_ext(self, ext_type):
 *         for ext in self._exts_:             # <<<<<<<<<<<<<<
 *             if isinstance(ext, ext_type):
 *                 return ext
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":484
 *         return res
 * 
 *     cpdef object get_ext(self, ext_type):             # <<<<<<<<<<<<<<
 *         for ext in self._exts_:
 *             if isinstance(ext, ext_type):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.get_ext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ext);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_15get_ext(PyObject *__pyx_v_self, PyObject *__pyx_v_ext_type); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_15get_ext(PyObject *__pyx_v_self, PyObject *__pyx_v_ext_type) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_ext (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_14get_ext(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((PyObject *)__pyx_v_ext_type));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_14get_ext(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, PyObject *__pyx_v_ext_type) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_ext", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_15EntityAttribute_get_ext(__pyx_v_self, __pyx_v_ext_type, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.get_ext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":489
 *                 return ext
 * 
 *     cpdef copy_into(self, EntityAttribute other):             # <<<<<<<<<<<<<<
 *         other._exts_[0:0] = self._exts_
 *         other._deps_ &= self._deps_
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_17copy_into(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_copy_into(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_other, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_into", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_copy_into); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_17copy_into)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_other)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_other));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 489, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":490
 * 
 *     cpdef copy_into(self, EntityAttribute other):
 *         other._exts_[0:0] = self._exts_             # <<<<<<<<<<<<<<
 *         other._deps_ &= self._deps_
 *         other._default_ = self._default_
 */
  __pyx_t_1 = __pyx_v_self->_exts_;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_v_other->_exts_ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 490, __pyx_L1_error)
  }
  if (__Pyx_PyObject_SetSlice(__pyx_v_other->_exts_, __pyx_t_1, 0, 0, NULL, NULL, NULL, 1, 1, 0) < 0) __PYX_ERR(0, 490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":491
 *     cpdef copy_into(self, EntityAttribute other):
 *         other._exts_[0:0] = self._exts_
 *         other._deps_ &= self._deps_             # <<<<<<<<<<<<<<
 *         other._default_ = self._default_
 * 
 */
  __pyx_t_1 = PyNumber_InPlaceAnd(__pyx_v_other->_deps_, __pyx_v_self->_deps_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_other->_deps_);
  __Pyx_DECREF(__pyx_v_other->_deps_);
  __pyx_v_other->_deps_ = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":492
 *         other._exts_[0:0] = self._exts_
 *         other._deps_ &= self._deps_
 *         other._default_ = self._default_             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_v_self->_default_;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_other->_default_);
  __Pyx_DECREF(__pyx_v_other->_default_);
  __pyx_v_other->_default_ = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":489
 *                 return ext
 * 
 *     cpdef copy_into(self, EntityAttribute other):             # <<<<<<<<<<<<<<
 *         other._exts_[0:0] = self._exts_
 *         other._deps_ &= self._deps_
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.copy_into", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_17copy_into(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_17copy_into(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy_into (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "other", 0))) __PYX_ERR(0, 489, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_16copy_into(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_16copy_into(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_into", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_15EntityAttribute_copy_into(__pyx_v_self, __pyx_v_other, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute.copy_into", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":41
 * cdef class EntityAttribute(Expression):
 *     cdef object _impl
 *     cdef readonly str _key_             # <<<<<<<<<<<<<<
 *     cdef readonly int _index_
 *     cdef readonly str _name_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5_key__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5_key__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_5_key____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_5_key____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_key_);
  __pyx_r = __pyx_v_self->_key_;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":42
 *     cdef object _impl
 *     cdef readonly str _key_
 *     cdef readonly int _index_             # <<<<<<<<<<<<<<
 *     cdef readonly str _name_
 *     cdef readonly object _default_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_7_index__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_7_index__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_7_index____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_7_index____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->_index_); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute._index_.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":43
 *     cdef readonly str _key_
 *     cdef readonly int _index_
 *     cdef readonly str _name_             # <<<<<<<<<<<<<<
 *     cdef readonly object _default_
 *     cdef readonly EntityAttributeImpl _impl_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_name__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_name__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_name____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_name____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_name_);
  __pyx_r = __pyx_v_self->_name_;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":44
 *     cdef readonly int _index_
 *     cdef readonly str _name_
 *     cdef readonly object _default_             # <<<<<<<<<<<<<<
 *     cdef readonly EntityAttributeImpl _impl_
 *     cdef readonly EntityType _entity_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9_default__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9_default__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_9_default____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_9_default____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_default_);
  __pyx_r = __pyx_v_self->_default_;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":45
 *     cdef readonly str _name_
 *     cdef readonly object _default_
 *     cdef readonly EntityAttributeImpl _impl_             # <<<<<<<<<<<<<<
 *     cdef readonly EntityType _entity_
 *     cdef readonly list _exts_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_impl__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_impl__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_impl____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_impl____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_impl_));
  __pyx_r = ((PyObject *)__pyx_v_self->_impl_);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":46
 *     cdef readonly object _default_
 *     cdef readonly EntityAttributeImpl _impl_
 *     cdef readonly EntityType _entity_             # <<<<<<<<<<<<<<
 *     cdef readonly list _exts_
 *     cdef readonly set _deps_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_8_entity__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_8_entity__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_8_entity____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_8_entity____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_entity_));
  __pyx_r = ((PyObject *)__pyx_v_self->_entity_);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":47
 *     cdef readonly EntityAttributeImpl _impl_
 *     cdef readonly EntityType _entity_
 *     cdef readonly list _exts_             # <<<<<<<<<<<<<<
 *     cdef readonly set _deps_
 *     cdef readonly bint _virtual_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_exts__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_exts__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_exts____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_exts____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_exts_);
  __pyx_r = __pyx_v_self->_exts_;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":48
 *     cdef readonly EntityType _entity_
 *     cdef readonly list _exts_
 *     cdef readonly set _deps_             # <<<<<<<<<<<<<<
 *     cdef readonly bint _virtual_
 *     cdef readonly int _uid_
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_deps__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_deps__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_deps____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_6_deps____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_deps_);
  __pyx_r = __pyx_v_self->_deps_;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":49
 *     cdef readonly list _exts_
 *     cdef readonly set _deps_
 *     cdef readonly bint _virtual_             # <<<<<<<<<<<<<<
 *     cdef readonly int _uid_
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9_virtual__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9_virtual__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_9_virtual____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_9_virtual____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->_virtual_); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute._virtual_.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":50
 *     cdef readonly set _deps_
 *     cdef readonly bint _virtual_
 *     cdef readonly int _uid_             # <<<<<<<<<<<<<<
 * 
 *     cdef object init(self, EntityType entity)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5_uid__1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5_uid__1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_5_uid____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_15EntityAttribute_5_uid____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->_uid_); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttribute._uid_.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":497
 * cdef class EntityAttributeExt:
 *     @classmethod
 *     def validate_group(self, EntityAttributeExtGroup group):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_1validate_group(PyObject *__pyx_v_self, PyObject *__pyx_v_group); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_1validate_group(PyObject *__pyx_v_self, PyObject *__pyx_v_group) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validate_group (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_group), __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExtGroup, 1, "group", 0))) __PYX_ERR(0, 497, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_validate_group(((PyTypeObject*)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_group));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_validate_group(CYTHON_UNUSED PyTypeObject *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_group) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validate_group", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":500
 *         pass
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._tmp = []
 *         self.bound = False
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_2__cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_2__cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":501
 * 
 *     def __cinit__(self, *args, **kwargs):
 *         self._tmp = []             # <<<<<<<<<<<<<<
 *         self.bound = False
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_tmp);
  __Pyx_DECREF(__pyx_v_self->_tmp);
  __pyx_v_self->_tmp = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":502
 *     def __cinit__(self, *args, **kwargs):
 *         self._tmp = []
 *         self.bound = False             # <<<<<<<<<<<<<<
 * 
 *     def __floordiv__(EntityAttributeExt self, EntityAttributeExt other):
 */
  __pyx_v_self->bound = 0;

  /* "yapic/entity/_entity.pyx":500
 *         pass
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._tmp = []
 *         self.bound = False
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":504
 *         self.bound = False
 * 
 *     def __floordiv__(EntityAttributeExt self, EntityAttributeExt other):             # <<<<<<<<<<<<<<
 *         if not self.attr and other.attr:
 *             self.attr = other.attr
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_5__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_5__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__floordiv__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt, 1, "self", 0))) __PYX_ERR(0, 504, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt, 1, "other", 0))) __PYX_ERR(0, 504, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_4__floordiv__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_4__floordiv__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__floordiv__", 0);

  /* "yapic/entity/_entity.pyx":505
 * 
 *     def __floordiv__(EntityAttributeExt self, EntityAttributeExt other):
 *         if not self.attr and other.attr:             # <<<<<<<<<<<<<<
 *             self.attr = other.attr
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_self->attr)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 505, __pyx_L1_error)
  __pyx_t_3 = ((!__pyx_t_2) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_other->attr)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 505, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":506
 *     def __floordiv__(EntityAttributeExt self, EntityAttributeExt other):
 *         if not self.attr and other.attr:
 *             self.attr = other.attr             # <<<<<<<<<<<<<<
 * 
 *         if self.attr:
 */
    __pyx_t_4 = ((PyObject *)__pyx_v_other->attr);
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->attr);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->attr));
    __pyx_v_self->attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "yapic/entity/_entity.pyx":505
 * 
 *     def __floordiv__(EntityAttributeExt self, EntityAttributeExt other):
 *         if not self.attr and other.attr:             # <<<<<<<<<<<<<<
 *             self.attr = other.attr
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":508
 *             self.attr = other.attr
 * 
 *         if self.attr:             # <<<<<<<<<<<<<<
 *             self.attr._exts_.append(self)
 *             self.attr._exts_.extend(self._tmp)
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_self->attr)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 508, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":509
 * 
 *         if self.attr:
 *             self.attr._exts_.append(self)             # <<<<<<<<<<<<<<
 *             self.attr._exts_.extend(self._tmp)
 *             return self.attr
 */
    if (unlikely(__pyx_v_self->attr->_exts_ == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 509, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_self->attr->_exts_, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 509, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":510
 *         if self.attr:
 *             self.attr._exts_.append(self)
 *             self.attr._exts_.extend(self._tmp)             # <<<<<<<<<<<<<<
 *             return self.attr
 *         else:
 */
    if (unlikely(__pyx_v_self->attr->_exts_ == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "extend");
      __PYX_ERR(0, 510, __pyx_L1_error)
    }
    __pyx_t_4 = __pyx_v_self->_tmp;
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyList_Extend(__pyx_v_self->attr->_exts_, __pyx_t_4); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 510, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yapic/entity/_entity.pyx":511
 *             self.attr._exts_.append(self)
 *             self.attr._exts_.extend(self._tmp)
 *             return self.attr             # <<<<<<<<<<<<<<
 *         else:
 *             self._tmp.append(other)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_self->attr));
    __pyx_r = ((PyObject *)__pyx_v_self->attr);
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":508
 *             self.attr = other.attr
 * 
 *         if self.attr:             # <<<<<<<<<<<<<<
 *             self.attr._exts_.append(self)
 *             self.attr._exts_.extend(self._tmp)
 */
  }

  /* "yapic/entity/_entity.pyx":513
 *             return self.attr
 *         else:
 *             self._tmp.append(other)             # <<<<<<<<<<<<<<
 *             self._tmp.extend(other._tmp)
 *             return self
 */
  /*else*/ {
    if (unlikely(__pyx_v_self->_tmp == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 513, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_self->_tmp, ((PyObject *)__pyx_v_other)); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 513, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":514
 *         else:
 *             self._tmp.append(other)
 *             self._tmp.extend(other._tmp)             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
    if (unlikely(__pyx_v_self->_tmp == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "extend");
      __PYX_ERR(0, 514, __pyx_L1_error)
    }
    __pyx_t_4 = __pyx_v_other->_tmp;
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyList_Extend(__pyx_v_self->_tmp, __pyx_t_4); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 514, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yapic/entity/_entity.pyx":515
 *             self._tmp.append(other)
 *             self._tmp.extend(other._tmp)
 *             return self             # <<<<<<<<<<<<<<
 * 
 *     cpdef object init(self, EntityAttribute attr):
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_v_self);
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":504
 *         self.bound = False
 * 
 *     def __floordiv__(EntityAttributeExt self, EntityAttributeExt other):             # <<<<<<<<<<<<<<
 *         if not self.attr and other.attr:
 *             self.attr = other.attr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.__floordiv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":517
 *             return self
 * 
 *     cpdef object init(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         # TODO: handle error, only if after bind is called
 *         # if self.attr is not None:
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_7init(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 517, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_7init)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_attr)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_attr));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":524
 *         #     else:
 *         #         return
 *         self.attr = attr             # <<<<<<<<<<<<<<
 * 
 *     cpdef object bind(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_attr));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
  __Pyx_GOTREF(__pyx_v_self->attr);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->attr));
  __pyx_v_self->attr = __pyx_v_attr;

  /* "yapic/entity/_entity.pyx":517
 *             return self
 * 
 *     cpdef object init(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         # TODO: handle error, only if after bind is called
 *         # if self.attr is not None:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_7init(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_7init(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 517, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_6init(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_6init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_init(__pyx_v_self, __pyx_v_attr, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":526
 *         self.attr = attr
 * 
 *     cpdef object bind(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_9bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_bind(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bind", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_9bind)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 526, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":527
 * 
 *     cpdef object bind(self):
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     cpdef object clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":526
 *         self.attr = attr
 * 
 *     cpdef object bind(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_9bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_9bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bind (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_8bind(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_8bind(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bind", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_bind(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":529
 *         return True
 * 
 *     cpdef object clone(self):             # <<<<<<<<<<<<<<
 *         return type(self)()
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_11clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clone); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 529, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_11clone)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 529, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":530
 * 
 *     cpdef object clone(self):
 *         return type(self)()             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
  __pyx_t_2 = ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))); __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":529
 *         return True
 * 
 *     cpdef object clone(self):             # <<<<<<<<<<<<<<
 *         return type(self)()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_11clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_11clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_10clone(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_10clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_clone(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":532
 *         return type(self)()
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash(repr(self))
 * 
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_13__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_13__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_12__hash__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_12__hash__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_hash_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "yapic/entity/_entity.pyx":533
 * 
 *     def __hash__(self):
 *         return hash(repr(self))             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __pyx_t_1 = PyObject_Repr(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Hash(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_hash_t)-1))) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":532
 *         return type(self)()
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash(repr(self))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":535
 *         return hash(repr(self))
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) == repr(other)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_15__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_15__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_14__eq__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_14__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "yapic/entity/_entity.pyx":536
 * 
 *     def __eq__(self, other):
 *         return repr(self) == repr(other)             # <<<<<<<<<<<<<<
 * 
 *     def __ne__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Repr(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Repr(__pyx_v_other); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":535
 *         return hash(repr(self))
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) == repr(other)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":538
 *         return repr(self) == repr(other)
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) != repr(other)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_17__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_17__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__ne__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_16__ne__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_16__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__ne__", 0);

  /* "yapic/entity/_entity.pyx":539
 * 
 *     def __ne__(self, other):
 *         return repr(self) != repr(other)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Repr(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Repr(__pyx_v_other); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_t_2, Py_NE)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":538
 *         return repr(self) == repr(other)
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) != repr(other)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.__ne__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":541
 *         return repr(self) != repr(other)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f"@{type(self).__name__}()"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_19__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_19__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_18__repr__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_18__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "yapic/entity/_entity.pyx":542
 * 
 *     def __repr__(self):
 *         return f"@{type(self).__name__}()"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_INCREF(__pyx_kp_u__9);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__9);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u__9);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_name_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u__10);
  __pyx_t_2 += 2;
  __Pyx_GIVEREF(__pyx_kp_u__10);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__10);
  __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":541
 *         return repr(self) != repr(other)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f"@{type(self).__name__}()"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExt.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":63
 * 
 * cdef class EntityAttributeExt:
 *     cdef readonly EntityAttribute attr             # <<<<<<<<<<<<<<
 *     cdef list _tmp
 *     cdef bint bound
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_4attr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_4attr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_4attr___get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_18EntityAttributeExt_4attr___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->attr));
  __pyx_r = ((PyObject *)__pyx_v_self->attr);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":546
 * 
 * cdef class EntityAttributeExtGroup:
 *     def __cinit__(self, str name, object type):             # <<<<<<<<<<<<<<
 *         self.name = name
 *         self.type = type
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_type = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_type,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_type)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 546, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 546, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_name = ((PyObject*)values[0]);
    __pyx_v_type = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 546, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExtGroup.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyUnicode_Type), 1, "name", 1))) __PYX_ERR(0, 546, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self), __pyx_v_name, __pyx_v_type);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_type) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":547
 * cdef class EntityAttributeExtGroup:
 *     def __cinit__(self, str name, object type):
 *         self.name = name             # <<<<<<<<<<<<<<
 *         self.type = type
 * 
 */
  __Pyx_INCREF(__pyx_v_name);
  __Pyx_GIVEREF(__pyx_v_name);
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(__pyx_v_self->name);
  __pyx_v_self->name = __pyx_v_name;

  /* "yapic/entity/_entity.pyx":548
 *     def __cinit__(self, str name, object type):
 *         self.name = name
 *         self.type = type             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_INCREF(__pyx_v_type);
  __Pyx_GIVEREF(__pyx_v_type);
  __Pyx_GOTREF(__pyx_v_self->type);
  __Pyx_DECREF(__pyx_v_self->type);
  __pyx_v_self->type = __pyx_v_type;

  /* "yapic/entity/_entity.pyx":546
 * 
 * cdef class EntityAttributeExtGroup:
 *     def __cinit__(self, str name, object type):             # <<<<<<<<<<<<<<
 *         self.name = name
 *         self.type = type
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":550
 *         self.type = type
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash(repr(self))
 * 
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_3__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_3__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_2__hash__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_2__hash__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_hash_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "yapic/entity/_entity.pyx":551
 * 
 *     def __hash__(self):
 *         return hash(repr(self))             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __pyx_t_1 = PyObject_Repr(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Hash(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_hash_t)-1))) __PYX_ERR(0, 551, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":550
 *         self.type = type
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash(repr(self))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExtGroup.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":553
 *         return hash(repr(self))
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) == repr(other)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4__eq__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "yapic/entity/_entity.pyx":554
 * 
 *     def __eq__(self, other):
 *         return repr(self) == repr(other)             # <<<<<<<<<<<<<<
 * 
 *     def __ne__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Repr(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Repr(__pyx_v_other); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":553
 *         return hash(repr(self))
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) == repr(other)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExtGroup.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":556
 *         return repr(self) == repr(other)
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) != repr(other)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_7__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_7__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__ne__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_6__ne__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_6__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__ne__", 0);

  /* "yapic/entity/_entity.pyx":557
 * 
 *     def __ne__(self, other):
 *         return repr(self) != repr(other)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Repr(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Repr(__pyx_v_other); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_t_2, Py_NE)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":556
 *         return repr(self) == repr(other)
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return repr(self) != repr(other)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExtGroup.__ne__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":559
 *         return repr(self) != repr(other)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "@%s:%s[%s]" % (self.type.__name__, self.name, ", ".join(map(repr, self.items)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_9__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_9__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_8__repr__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_8__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "yapic/entity/_entity.pyx":560
 * 
 *     def __repr__(self):
 *         return "@%s:%s[%s]" % (self.type.__name__, self.name, ", ".join(map(repr, self.items)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_INCREF(__pyx_kp_u__9);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__9);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u__9);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->type, __pyx_n_s_name_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_4), __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__11);
  __pyx_t_5 = __Pyx_PyUnicode_Unicode(__pyx_v_self->name); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u__12);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__12);
  PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_kp_u__12);
  __pyx_t_5 = __Pyx_GetBuiltinName(__pyx_n_s_repr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __Pyx_INCREF(__pyx_v_self->items);
  __Pyx_GIVEREF(__pyx_v_self->items);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_self->items);
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_map, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyUnicode_Join(__pyx_kp_u__13, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__14);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__14);
  PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_kp_u__14);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 7, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":559
 *         return repr(self) != repr(other)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "@%s:%s[%s]" % (self.type.__name__, self.name, ", ".join(map(repr, self.items)))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeExtGroup.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":76
 * 
 * cdef class EntityAttributeExtGroup:
 *     cdef readonly str name             # <<<<<<<<<<<<<<
 *     cdef readonly tuple items
 *     cdef readonly object type
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4name___get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4name___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->name);
  __pyx_r = __pyx_v_self->name;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":77
 * cdef class EntityAttributeExtGroup:
 *     cdef readonly str name
 *     cdef readonly tuple items             # <<<<<<<<<<<<<<
 *     cdef readonly object type
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5items_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5items_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5items___get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5items___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->items);
  __pyx_r = __pyx_v_self->items;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":78
 *     cdef readonly str name
 *     cdef readonly tuple items
 *     cdef readonly object type             # <<<<<<<<<<<<<<
 * 
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4type_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4type___get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4type___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->type);
  __pyx_r = __pyx_v_self->type;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":564
 * 
 * cdef class EntityAttributeImpl:
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self.inited = False
 * 
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":565
 * cdef class EntityAttributeImpl:
 *     def __cinit__(self, *args, **kwargs):
 *         self.inited = False             # <<<<<<<<<<<<<<
 * 
 *     cpdef object init(self, EntityAttribute attr):
 */
  __pyx_v_self->inited = 0;

  /* "yapic/entity/_entity.pyx":564
 * 
 * cdef class EntityAttributeImpl:
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self.inited = False
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":567
 *         self.inited = False
 * 
 *     cpdef object init(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_3init(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_init(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_3init)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_attr)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_attr));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 567, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":568
 * 
 *     cpdef object init(self, EntityAttribute attr):
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     cpdef object clone(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":567
 *         self.inited = False
 * 
 *     cpdef object init(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_3init(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_3init(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 567, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_2init(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_2init(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_init(__pyx_v_self, __pyx_v_attr, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":570
 *         return True
 * 
 *     cpdef object clone(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_5clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_clone(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clone); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 570, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_5clone)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 570, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":571
 * 
 *     cpdef object clone(self):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     cpdef object getattr(self, EntityAttribute attr, object key):
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 571, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":570
 *         return True
 * 
 *     cpdef object clone(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_5clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_5clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_4clone(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_4clone(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_clone(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":573
 *         raise NotImplementedError()
 * 
 *     cpdef object getattr(self, EntityAttribute attr, object key):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_7getattr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getattr(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, CYTHON_UNUSED PyObject *__pyx_v_key, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getattr", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getattr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_7getattr)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, ((PyObject *)__pyx_v_attr), __pyx_v_key};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, ((PyObject *)__pyx_v_attr), __pyx_v_key};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 573, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_attr));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_attr));
          __Pyx_INCREF(__pyx_v_key);
          __Pyx_GIVEREF(__pyx_v_key);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_key);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":574
 * 
 *     cpdef object getattr(self, EntityAttribute attr, object key):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     cpdef object getitem(self, EntityAttribute attr, object index):
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 574, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":573
 *         raise NotImplementedError()
 * 
 *     cpdef object getattr(self, EntityAttribute attr, object key):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.getattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_7getattr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_7getattr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_v_key = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getattr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr,&__pyx_n_s_key,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_attr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getattr", 1, 2, 2, 1); __PYX_ERR(0, 573, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "getattr") < 0)) __PYX_ERR(0, 573, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)values[0]);
    __pyx_v_key = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getattr", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 573, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.getattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 573, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_6getattr(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self), __pyx_v_attr, __pyx_v_key);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_6getattr(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getattr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getattr(__pyx_v_self, __pyx_v_attr, __pyx_v_key, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.getattr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":576
 *         raise NotImplementedError()
 * 
 *     cpdef object getitem(self, EntityAttribute attr, object index):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_9getitem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getitem(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, CYTHON_UNUSED PyObject *__pyx_v_index, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getitem", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getitem); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_9getitem)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, ((PyObject *)__pyx_v_attr), __pyx_v_index};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, ((PyObject *)__pyx_v_attr), __pyx_v_index};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 576, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_attr));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_attr));
          __Pyx_INCREF(__pyx_v_index);
          __Pyx_GIVEREF(__pyx_v_index);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_index);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "yapic/entity/_entity.pyx":577
 * 
 *     cpdef object getitem(self, EntityAttribute attr, object index):
 *         raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     cdef object state_init(self, object initial):
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 577, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":576
 *         raise NotImplementedError()
 * 
 *     cpdef object getitem(self, EntityAttribute attr, object index):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.getitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_9getitem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_9getitem(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_v_index = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getitem (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr,&__pyx_n_s_index,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_attr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_index)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getitem", 1, 2, 2, 1); __PYX_ERR(0, 576, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "getitem") < 0)) __PYX_ERR(0, 576, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)values[0]);
    __pyx_v_index = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getitem", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 576, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.getitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 576, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_8getitem(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self), __pyx_v_attr, __pyx_v_index);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_8getitem(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getitem", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getitem(__pyx_v_self, __pyx_v_attr, __pyx_v_index, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.getitem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":579
 *         raise NotImplementedError()
 * 
 *     cdef object state_init(self, object initial):             # <<<<<<<<<<<<<<
 *         return NOTSET
 * 
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_init(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_initial) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("state_init", 0);

  /* "yapic/entity/_entity.pyx":580
 * 
 *     cdef object state_init(self, object initial):
 *         return NOTSET             # <<<<<<<<<<<<<<
 * 
 *     cdef object state_set(self, object initial, object current, object value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
  __pyx_r = ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":579
 *         raise NotImplementedError()
 * 
 *     cdef object state_init(self, object initial):             # <<<<<<<<<<<<<<
 *         return NOTSET
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":582
 *         return NOTSET
 * 
 *     cdef object state_set(self, object initial, object current, object value):             # <<<<<<<<<<<<<<
 *         return value
 * 
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_set(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_initial, CYTHON_UNUSED PyObject *__pyx_v_current, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("state_set", 0);

  /* "yapic/entity/_entity.pyx":583
 * 
 *     cdef object state_set(self, object initial, object current, object value):
 *         return value             # <<<<<<<<<<<<<<
 * 
 *     cdef object state_get_dirty(self, object initial, object current):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_value);
  __pyx_r = __pyx_v_value;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":582
 *         return NOTSET
 * 
 *     cdef object state_set(self, object initial, object current, object value):             # <<<<<<<<<<<<<<
 *         return value
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":585
 *         return value
 * 
 *     cdef object state_get_dirty(self, object initial, object current):             # <<<<<<<<<<<<<<
 *         if initial != current:
 *             return current
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_get_dirty(CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, PyObject *__pyx_v_initial, PyObject *__pyx_v_current) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("state_get_dirty", 0);

  /* "yapic/entity/_entity.pyx":586
 * 
 *     cdef object state_get_dirty(self, object initial, object current):
 *         if initial != current:             # <<<<<<<<<<<<<<
 *             return current
 *         else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_initial, __pyx_v_current, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 586, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":587
 *     cdef object state_get_dirty(self, object initial, object current):
 *         if initial != current:
 *             return current             # <<<<<<<<<<<<<<
 *         else:
 *             return NOTSET
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_current);
    __pyx_r = __pyx_v_current;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":586
 * 
 *     cdef object state_get_dirty(self, object initial, object current):
 *         if initial != current:             # <<<<<<<<<<<<<<
 *             return current
 *         else:
 */
  }

  /* "yapic/entity/_entity.pyx":589
 *             return current
 *         else:
 *             return NOTSET             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_r = ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET);
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":585
 *         return value
 * 
 *     cdef object state_get_dirty(self, object initial, object current):             # <<<<<<<<<<<<<<
 *         if initial != current:
 *             return current
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.state_get_dirty", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":591
 *             return NOTSET
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return isinstance(self, type(other)) or isinstance(other, type(self))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_11__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_11__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_10__eq__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_10__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "yapic/entity/_entity.pyx":592
 * 
 *     def __eq__(self, other):
 *         return isinstance(self, type(other)) or isinstance(other, type(self))             # <<<<<<<<<<<<<<
 * 
 *     def __ne__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_IsInstance(((PyObject *)__pyx_v_self), ((PyObject *)Py_TYPE(__pyx_v_other))); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 592, __pyx_L1_error)
  if (!__pyx_t_2) {
  } else {
    __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_other, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 592, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":591
 *             return NOTSET
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return isinstance(self, type(other)) or isinstance(other, type(self))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":594
 *         return isinstance(self, type(other)) or isinstance(other, type(self))
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return not isinstance(self, type(other)) and not isinstance(other, type(self))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_13__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_13__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__ne__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_12__ne__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_19EntityAttributeImpl_12__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__ne__", 0);

  /* "yapic/entity/_entity.pyx":595
 * 
 *     def __ne__(self, other):
 *         return not isinstance(self, type(other)) and not isinstance(other, type(self))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_IsInstance(((PyObject *)__pyx_v_self), ((PyObject *)Py_TYPE(__pyx_v_other))); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 595, __pyx_L1_error)
  __pyx_t_3 = (!(__pyx_t_2 != 0));
  if (__pyx_t_3) {
  } else {
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 595, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_3 = PyObject_IsInstance(__pyx_v_other, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self)))); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 595, __pyx_L1_error)
  __pyx_t_2 = (!(__pyx_t_3 != 0));
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":594
 *         return isinstance(self, type(other)) or isinstance(other, type(self))
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return not isinstance(self, type(other)) and not isinstance(other, type(self))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityAttributeImpl.__ne__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":598
 * 
 * 
 * cdef inline state_set_value(PyObject* initial, PyObject* current, EntityAttribute attr, object value):             # <<<<<<<<<<<<<<
 *     cdef int idx = attr._index_
 *     cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 */

static CYTHON_INLINE PyObject *__pyx_f_5yapic_6entity_7_entity_state_set_value(PyObject *__pyx_v_initial, PyObject *__pyx_v_current, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_value) {
  int __pyx_v_idx;
  PyObject *__pyx_v_iv;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_v_nv = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("state_set_value", 0);

  /* "yapic/entity/_entity.pyx":599
 * 
 * cdef inline state_set_value(PyObject* initial, PyObject* current, EntityAttribute attr, object value):
 *     cdef int idx = attr._index_             # <<<<<<<<<<<<<<
 *     cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 *     cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, idx)
 */
  __pyx_t_1 = __pyx_v_attr->_index_;
  __pyx_v_idx = __pyx_t_1;

  /* "yapic/entity/_entity.pyx":600
 * cdef inline state_set_value(PyObject* initial, PyObject* current, EntityAttribute attr, object value):
 *     cdef int idx = attr._index_
 *     cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *     cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, idx)
 * 
 */
  __pyx_v_iv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":601
 *     cdef int idx = attr._index_
 *     cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 *     cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 * 
 *     nv = (<EntityAttributeImpl>attr._impl_).state_set(<object>iv, <object>cv, value)
 */
  __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":603
 *     cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, idx)
 * 
 *     nv = (<EntityAttributeImpl>attr._impl_).state_set(<object>iv, <object>cv, value)             # <<<<<<<<<<<<<<
 *     Py_INCREF(<object>nv)
 *     PyTuple_SET_ITEM(<object>current, idx, <object>nv)
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_)->__pyx_vtab)->state_set(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_), ((PyObject *)__pyx_v_iv), ((PyObject *)__pyx_v_cv), __pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_nv = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":604
 * 
 *     nv = (<EntityAttributeImpl>attr._impl_).state_set(<object>iv, <object>cv, value)
 *     Py_INCREF(<object>nv)             # <<<<<<<<<<<<<<
 *     PyTuple_SET_ITEM(<object>current, idx, <object>nv)
 * 
 */
  Py_INCREF(__pyx_v_nv);

  /* "yapic/entity/_entity.pyx":605
 *     nv = (<EntityAttributeImpl>attr._impl_).state_set(<object>iv, <object>cv, value)
 *     Py_INCREF(<object>nv)
 *     PyTuple_SET_ITEM(<object>current, idx, <object>nv)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  PyTuple_SET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx, __pyx_v_nv);

  /* "yapic/entity/_entity.pyx":598
 * 
 * 
 * cdef inline state_set_value(PyObject* initial, PyObject* current, EntityAttribute attr, object value):             # <<<<<<<<<<<<<<
 *     cdef int idx = attr._index_
 *     cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.state_set_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nv);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":612
 * cdef class EntityState:
 * 
 *     def __cinit__(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         cdef int length = len(entity.__attrs__)
 *         self.entity = entity
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_11EntityState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_11EntityState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_entity,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_entity)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 612, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 612, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_entity), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "entity", 0))) __PYX_ERR(0, 612, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self), __pyx_v_entity);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_11EntityState___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity) {
  int __pyx_v_length;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":613
 * 
 *     def __cinit__(self, EntityType entity):
 *         cdef int length = len(entity.__attrs__)             # <<<<<<<<<<<<<<
 *         self.entity = entity
 *         self.initial = PyTuple_New(length)
 */
  __pyx_t_1 = __pyx_v_entity->__attrs__;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 613, __pyx_L1_error)
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_length = __pyx_t_2;

  /* "yapic/entity/_entity.pyx":614
 *     def __cinit__(self, EntityType entity):
 *         cdef int length = len(entity.__attrs__)
 *         self.entity = entity             # <<<<<<<<<<<<<<
 *         self.initial = PyTuple_New(length)
 *         self.current = PyTuple_New(length)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_entity));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_entity));
  __Pyx_GOTREF(__pyx_v_self->entity);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->entity));
  __pyx_v_self->entity = __pyx_v_entity;

  /* "yapic/entity/_entity.pyx":615
 *         cdef int length = len(entity.__attrs__)
 *         self.entity = entity
 *         self.initial = PyTuple_New(length)             # <<<<<<<<<<<<<<
 *         self.current = PyTuple_New(length)
 *         self.field_count = len(entity.__fields__)
 */
  __pyx_t_1 = PyTuple_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->initial);
  __Pyx_DECREF(__pyx_v_self->initial);
  __pyx_v_self->initial = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":616
 *         self.entity = entity
 *         self.initial = PyTuple_New(length)
 *         self.current = PyTuple_New(length)             # <<<<<<<<<<<<<<
 *         self.field_count = len(entity.__fields__)
 * 
 */
  __pyx_t_1 = PyTuple_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->current);
  __Pyx_DECREF(__pyx_v_self->current);
  __pyx_v_self->current = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":617
 *         self.initial = PyTuple_New(length)
 *         self.current = PyTuple_New(length)
 *         self.field_count = len(entity.__fields__)             # <<<<<<<<<<<<<<
 * 
 *     cdef object init(self):
 */
  __pyx_t_1 = __pyx_v_entity->__fields__;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 617, __pyx_L1_error)
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->field_count = __pyx_t_2;

  /* "yapic/entity/_entity.pyx":612
 * cdef class EntityState:
 * 
 *     def __cinit__(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         cdef int length = len(entity.__attrs__)
 *         self.entity = entity
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":619
 *         self.field_count = len(entity.__fields__)
 * 
 *     cdef object init(self):             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef EntityAttribute attr
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_init(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  int __pyx_v_idx;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_v_iv = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);

  /* "yapic/entity/_entity.pyx":622
 *         cdef int idx
 *         cdef EntityAttribute attr
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":623
 *         cdef EntityAttribute attr
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 *         cdef PyObject* cv
 * 
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":626
 *         cdef PyObject* cv
 * 
 *         for attr in self.entity.__attrs__:             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 * 
 */
  if (unlikely(__pyx_v_self->entity->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 626, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->entity->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 626, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 626, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 626, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":627
 * 
 *         for attr in self.entity.__attrs__:
 *             idx = attr._index_             # <<<<<<<<<<<<<<
 * 
 *             cv = PyTuple_GET_ITEM(<object>initial, idx)
 */
    __pyx_t_4 = __pyx_v_attr->_index_;
    __pyx_v_idx = __pyx_t_4;

    /* "yapic/entity/_entity.pyx":629
 *             idx = attr._index_
 * 
 *             cv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *             if cv is NULL:
 *                 cv = <PyObject*>NOTSET
 */
    __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

    /* "yapic/entity/_entity.pyx":630
 * 
 *             cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is NULL:             # <<<<<<<<<<<<<<
 *                 cv = <PyObject*>NOTSET
 *                 Py_INCREF(<object>cv)
 */
    __pyx_t_5 = ((__pyx_v_cv == NULL) != 0);
    if (__pyx_t_5) {

      /* "yapic/entity/_entity.pyx":631
 *             cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is NULL:
 *                 cv = <PyObject*>NOTSET             # <<<<<<<<<<<<<<
 *                 Py_INCREF(<object>cv)
 *                 PyTuple_SET_ITEM(<object>initial, idx, <object>cv)
 */
      __pyx_v_cv = ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET);

      /* "yapic/entity/_entity.pyx":632
 *             if cv is NULL:
 *                 cv = <PyObject*>NOTSET
 *                 Py_INCREF(<object>cv)             # <<<<<<<<<<<<<<
 *                 PyTuple_SET_ITEM(<object>initial, idx, <object>cv)
 * 
 */
      Py_INCREF(((PyObject *)__pyx_v_cv));

      /* "yapic/entity/_entity.pyx":633
 *                 cv = <PyObject*>NOTSET
 *                 Py_INCREF(<object>cv)
 *                 PyTuple_SET_ITEM(<object>initial, idx, <object>cv)             # <<<<<<<<<<<<<<
 * 
 *             iv = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)
 */
      PyTuple_SET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx, ((PyObject *)__pyx_v_cv));

      /* "yapic/entity/_entity.pyx":630
 * 
 *             cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is NULL:             # <<<<<<<<<<<<<<
 *                 cv = <PyObject*>NOTSET
 *                 Py_INCREF(<object>cv)
 */
    }

    /* "yapic/entity/_entity.pyx":635
 *                 PyTuple_SET_ITEM(<object>initial, idx, <object>cv)
 * 
 *             iv = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)             # <<<<<<<<<<<<<<
 * 
 *             Py_INCREF(<object>iv)
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_)->__pyx_vtab)->state_init(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_), ((PyObject *)__pyx_v_cv)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 635, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_iv, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":637
 *             iv = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)
 * 
 *             Py_INCREF(<object>iv)             # <<<<<<<<<<<<<<
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             Py_XDECREF(cv)
 */
    Py_INCREF(__pyx_v_iv);

    /* "yapic/entity/_entity.pyx":638
 * 
 *             Py_INCREF(<object>iv)
 *             cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *             Py_XDECREF(cv)
 *             PyTuple_SET_ITEM(<object>current, idx, <object>iv)
 */
    __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

    /* "yapic/entity/_entity.pyx":639
 *             Py_INCREF(<object>iv)
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             Py_XDECREF(cv)             # <<<<<<<<<<<<<<
 *             PyTuple_SET_ITEM(<object>current, idx, <object>iv)
 * 
 */
    Py_XDECREF(__pyx_v_cv);

    /* "yapic/entity/_entity.pyx":640
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             Py_XDECREF(cv)
 *             PyTuple_SET_ITEM(<object>current, idx, <object>iv)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    PyTuple_SET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx, __pyx_v_iv);

    /* "yapic/entity/_entity.pyx":626
 *         cdef PyObject* cv
 * 
 *         for attr in self.entity.__attrs__:             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":619
 *         self.field_count = len(entity.__fields__)
 * 
 *     cdef object init(self):             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef EntityAttribute attr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_iv);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":643
 * 
 * 
 *     cpdef object update(self, dict data, bint is_initial = False):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef EntityType entity = self.entity
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_3update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_data, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update *__pyx_optional_args) {
  int __pyx_v_is_initial = ((int)0);
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity = 0;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_is_initial = __pyx_optional_args->is_initial;
    }
  }

  /* "yapic/entity/_entity.pyx":645
 *     cpdef object update(self, dict data, bint is_initial = False):
 *         cdef EntityAttribute attr
 *         cdef EntityType entity = self.entity             # <<<<<<<<<<<<<<
 * 
 *         if is_initial:
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->entity);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":647
 *         cdef EntityType entity = self.entity
 * 
 *         if is_initial:             # <<<<<<<<<<<<<<
 *             for k, v in data.items():
 *                 attr = getattr(entity, k)
 */
  __pyx_t_2 = (__pyx_v_is_initial != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":648
 * 
 *         if is_initial:
 *             for k, v in data.items():             # <<<<<<<<<<<<<<
 *                 attr = getattr(entity, k)
 *                 self.set_initial_value(attr, v)
 */
    __pyx_t_3 = 0;
    if (unlikely(__pyx_v_data == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 648, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_dict_iterator(__pyx_v_data, 1, __pyx_n_s_items, (&__pyx_t_4), (&__pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_6;
    __pyx_t_6 = 0;
    while (1) {
      __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_4, &__pyx_t_3, &__pyx_t_6, &__pyx_t_7, NULL, __pyx_t_5);
      if (unlikely(__pyx_t_8 == 0)) break;
      if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 648, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_6);
      __pyx_t_6 = 0;
      __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "yapic/entity/_entity.pyx":649
 *         if is_initial:
 *             for k, v in data.items():
 *                 attr = getattr(entity, k)             # <<<<<<<<<<<<<<
 *                 self.set_initial_value(attr, v)
 *         else:
 */
      __pyx_t_7 = __Pyx_GetAttr(((PyObject *)__pyx_v_entity), __pyx_v_k); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_7));
      __pyx_t_7 = 0;

      /* "yapic/entity/_entity.pyx":650
 *             for k, v in data.items():
 *                 attr = getattr(entity, k)
 *                 self.set_initial_value(attr, v)             # <<<<<<<<<<<<<<
 *         else:
 *             for k, v in data.items():
 */
      __pyx_t_7 = __pyx_f_5yapic_6entity_7_entity_11EntityState_set_initial_value(__pyx_v_self, __pyx_v_attr, __pyx_v_v); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 650, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":647
 *         cdef EntityType entity = self.entity
 * 
 *         if is_initial:             # <<<<<<<<<<<<<<
 *             for k, v in data.items():
 *                 attr = getattr(entity, k)
 */
    goto __pyx_L3;
  }

  /* "yapic/entity/_entity.pyx":652
 *                 self.set_initial_value(attr, v)
 *         else:
 *             for k, v in data.items():             # <<<<<<<<<<<<<<
 *                 attr = getattr(entity, k)
 *                 self.set_value(attr, v)
 */
  /*else*/ {
    __pyx_t_4 = 0;
    if (unlikely(__pyx_v_data == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 652, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_dict_iterator(__pyx_v_data, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_5)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 652, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_7;
    __pyx_t_7 = 0;
    while (1) {
      __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_4, &__pyx_t_7, &__pyx_t_6, NULL, __pyx_t_5);
      if (unlikely(__pyx_t_8 == 0)) break;
      if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 652, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_7);
      __pyx_t_7 = 0;
      __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "yapic/entity/_entity.pyx":653
 *         else:
 *             for k, v in data.items():
 *                 attr = getattr(entity, k)             # <<<<<<<<<<<<<<
 *                 self.set_value(attr, v)
 * 
 */
      __pyx_t_6 = __Pyx_GetAttr(((PyObject *)__pyx_v_entity), __pyx_v_k); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 653, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 653, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_6));
      __pyx_t_6 = 0;

      /* "yapic/entity/_entity.pyx":654
 *             for k, v in data.items():
 *                 attr = getattr(entity, k)
 *                 self.set_value(attr, v)             # <<<<<<<<<<<<<<
 * 
 *     cdef object set_value(self, EntityAttribute attr, object value):
 */
      __pyx_t_6 = __pyx_f_5yapic_6entity_7_entity_11EntityState_set_value(__pyx_v_self, __pyx_v_attr, __pyx_v_v); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 654, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "yapic/entity/_entity.pyx":643
 * 
 * 
 *     cpdef object update(self, dict data, bint is_initial = False):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef EntityType entity = self.entity
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_3update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_3update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_data = 0;
  int __pyx_v_is_initial;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,&__pyx_n_s_is_initial,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_data)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_is_initial);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) __PYX_ERR(0, 643, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_data = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_is_initial = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_is_initial == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 643, __pyx_L3_error)
    } else {
      __pyx_v_is_initial = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 643, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_data), (&PyDict_Type), 1, "data", 1))) __PYX_ERR(0, 643, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_2update(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self), __pyx_v_data, __pyx_v_is_initial);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_2update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_data, int __pyx_v_is_initial) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.is_initial = __pyx_v_is_initial;
  __pyx_t_1 = __pyx_vtabptr_5yapic_6entity_7_entity_EntityState->update(__pyx_v_self, __pyx_v_data, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":656
 *                 self.set_value(attr, v)
 * 
 *     cdef object set_value(self, EntityAttribute attr, object value):             # <<<<<<<<<<<<<<
 *         state_set_value(<PyObject*>self.initial, <PyObject*>self.current, attr, value)
 * 
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_set_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_value", 0);

  /* "yapic/entity/_entity.pyx":657
 * 
 *     cdef object set_value(self, EntityAttribute attr, object value):
 *         state_set_value(<PyObject*>self.initial, <PyObject*>self.current, attr, value)             # <<<<<<<<<<<<<<
 * 
 *     cdef object set_initial_value(self, EntityAttribute attr, object value):
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_state_set_value(((PyObject *)__pyx_v_self->initial), ((PyObject *)__pyx_v_self->current), __pyx_v_attr, __pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":656
 *                 self.set_value(attr, v)
 * 
 *     cdef object set_value(self, EntityAttribute attr, object value):             # <<<<<<<<<<<<<<
 *         state_set_value(<PyObject*>self.initial, <PyObject*>self.current, attr, value)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.set_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":659
 *         state_set_value(<PyObject*>self.initial, <PyObject*>self.current, attr, value)
 * 
 *     cdef object set_initial_value(self, EntityAttribute attr, object value):             # <<<<<<<<<<<<<<
 *         cdef int idx = attr._index_
 *         cdef PyObject* initial = <PyObject*>self.initial
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_set_initial_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr, PyObject *__pyx_v_value) {
  int __pyx_v_idx;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_iv;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *__pyx_v_impl = 0;
  PyObject *__pyx_v_nv = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_initial_value", 0);

  /* "yapic/entity/_entity.pyx":660
 * 
 *     cdef object set_initial_value(self, EntityAttribute attr, object value):
 *         cdef int idx = attr._index_             # <<<<<<<<<<<<<<
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 */
  __pyx_t_1 = __pyx_v_attr->_index_;
  __pyx_v_idx = __pyx_t_1;

  /* "yapic/entity/_entity.pyx":661
 *     cdef object set_initial_value(self, EntityAttribute attr, object value):
 *         cdef int idx = attr._index_
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         cdef EntityAttributeImpl impl = <EntityAttributeImpl>attr._impl_
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":662
 *         cdef int idx = attr._index_
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *         cdef EntityAttributeImpl impl = <EntityAttributeImpl>attr._impl_
 * 
 */
  __pyx_v_iv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":663
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         cdef EntityAttributeImpl impl = <EntityAttributeImpl>attr._impl_             # <<<<<<<<<<<<<<
 * 
 *         if iv is NULL:
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_attr->_impl_);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_impl = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":665
 *         cdef EntityAttributeImpl impl = <EntityAttributeImpl>attr._impl_
 * 
 *         if iv is NULL:             # <<<<<<<<<<<<<<
 *             iv = <PyObject*>NOTSET
 *             Py_INCREF(<object>iv)
 */
  __pyx_t_3 = ((__pyx_v_iv == NULL) != 0);
  if (__pyx_t_3) {

    /* "yapic/entity/_entity.pyx":666
 * 
 *         if iv is NULL:
 *             iv = <PyObject*>NOTSET             # <<<<<<<<<<<<<<
 *             Py_INCREF(<object>iv)
 * 
 */
    __pyx_v_iv = ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET);

    /* "yapic/entity/_entity.pyx":667
 *         if iv is NULL:
 *             iv = <PyObject*>NOTSET
 *             Py_INCREF(<object>iv)             # <<<<<<<<<<<<<<
 * 
 *         nv = impl.state_set(<object>iv, <object>iv, value)
 */
    Py_INCREF(((PyObject *)__pyx_v_iv));

    /* "yapic/entity/_entity.pyx":665
 *         cdef EntityAttributeImpl impl = <EntityAttributeImpl>attr._impl_
 * 
 *         if iv is NULL:             # <<<<<<<<<<<<<<
 *             iv = <PyObject*>NOTSET
 *             Py_INCREF(<object>iv)
 */
  }

  /* "yapic/entity/_entity.pyx":669
 *             Py_INCREF(<object>iv)
 * 
 *         nv = impl.state_set(<object>iv, <object>iv, value)             # <<<<<<<<<<<<<<
 *         Py_INCREF(<object>nv)
 *         Py_XDECREF(iv)
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_impl->__pyx_vtab)->state_set(__pyx_v_impl, ((PyObject *)__pyx_v_iv), ((PyObject *)__pyx_v_iv), __pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_nv = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":670
 * 
 *         nv = impl.state_set(<object>iv, <object>iv, value)
 *         Py_INCREF(<object>nv)             # <<<<<<<<<<<<<<
 *         Py_XDECREF(iv)
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>nv)
 */
  Py_INCREF(__pyx_v_nv);

  /* "yapic/entity/_entity.pyx":671
 *         nv = impl.state_set(<object>iv, <object>iv, value)
 *         Py_INCREF(<object>nv)
 *         Py_XDECREF(iv)             # <<<<<<<<<<<<<<
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>nv)
 * 
 */
  Py_XDECREF(__pyx_v_iv);

  /* "yapic/entity/_entity.pyx":672
 *         Py_INCREF(<object>nv)
 *         Py_XDECREF(iv)
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>nv)             # <<<<<<<<<<<<<<
 * 
 *     cdef object get_value(self, EntityAttribute attr):
 */
  PyTuple_SET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx, __pyx_v_nv);

  /* "yapic/entity/_entity.pyx":659
 *         state_set_value(<PyObject*>self.initial, <PyObject*>self.current, attr, value)
 * 
 *     cdef object set_initial_value(self, EntityAttribute attr, object value):             # <<<<<<<<<<<<<<
 *         cdef int idx = attr._index_
 *         cdef PyObject* initial = <PyObject*>self.initial
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.set_initial_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_impl);
  __Pyx_XDECREF(__pyx_v_nv);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":674
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>nv)
 * 
 *     cdef object get_value(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_value", 0);

  /* "yapic/entity/_entity.pyx":675
 * 
 *     cdef object get_value(self, EntityAttribute attr):
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":676
 *     cdef object get_value(self, EntityAttribute attr):
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 * 
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":677
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)             # <<<<<<<<<<<<<<
 * 
 *         if cv is <PyObject*>NOTSET:
 */
  __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_attr->_index_);

  /* "yapic/entity/_entity.pyx":679
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 * 
 *         if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *             cv = PyTuple_GET_ITEM(<object>initial, attr._index_)
 * 
 */
  __pyx_t_1 = ((__pyx_v_cv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)) != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":680
 * 
 *         if cv is <PyObject*>NOTSET:
 *             cv = PyTuple_GET_ITEM(<object>initial, attr._index_)             # <<<<<<<<<<<<<<
 * 
 *         return <object>cv
 */
    __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_attr->_index_);

    /* "yapic/entity/_entity.pyx":679
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 * 
 *         if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *             cv = PyTuple_GET_ITEM(<object>initial, attr._index_)
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":682
 *             cv = PyTuple_GET_ITEM(<object>initial, attr._index_)
 * 
 *         return <object>cv             # <<<<<<<<<<<<<<
 * 
 *     cdef object del_value(self, EntityAttribute attr):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_cv));
  __pyx_r = ((PyObject *)__pyx_v_cv);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":674
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>nv)
 * 
 *     cdef object get_value(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":684
 *         return <object>cv
 * 
 *     cdef object del_value(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_del_value(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_v_current;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("del_value", 0);

  /* "yapic/entity/_entity.pyx":685
 * 
 *     cdef object del_value(self, EntityAttribute attr):
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 *         Py_XDECREF(cv)
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":686
 *     cdef object del_value(self, EntityAttribute attr):
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)             # <<<<<<<<<<<<<<
 *         Py_XDECREF(cv)
 *         PyTuple_SET_ITEM(<object>current, attr._index_, <object>NULL)
 */
  __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_attr->_index_);

  /* "yapic/entity/_entity.pyx":687
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 *         Py_XDECREF(cv)             # <<<<<<<<<<<<<<
 *         PyTuple_SET_ITEM(<object>current, attr._index_, <object>NULL)
 * 
 */
  Py_XDECREF(__pyx_v_cv);

  /* "yapic/entity/_entity.pyx":688
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 *         Py_XDECREF(cv)
 *         PyTuple_SET_ITEM(<object>current, attr._index_, <object>NULL)             # <<<<<<<<<<<<<<
 * 
 *     cdef list data_for_insert(self):
 */
  PyTuple_SET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_attr->_index_, ((PyObject *)NULL));

  /* "yapic/entity/_entity.pyx":684
 *         return <object>cv
 * 
 *     cdef object del_value(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv = PyTuple_GET_ITEM(<object>current, attr._index_)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":690
 *         PyTuple_SET_ITEM(<object>current, attr._index_, <object>NULL)
 * 
 *     cdef list data_for_insert(self):             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef list res = []
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_insert(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  int __pyx_v_idx;
  PyObject *__pyx_v_res = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity = 0;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_v_cv;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("data_for_insert", 0);

  /* "yapic/entity/_entity.pyx":692
 *     cdef list data_for_insert(self):
 *         cdef int idx
 *         cdef list res = []             # <<<<<<<<<<<<<<
 *         cdef EntityType entity = self.entity
 *         cdef PyObject* initial = <PyObject*>self.initial
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":693
 *         cdef int idx
 *         cdef list res = []
 *         cdef EntityType entity = self.entity             # <<<<<<<<<<<<<<
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->entity);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":694
 *         cdef list res = []
 *         cdef EntityType entity = self.entity
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* cv
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":695
 *         cdef EntityType entity = self.entity
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 *         cdef PyObject* cv
 *         cdef EntityAttribute attr
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":699
 *         cdef EntityAttribute attr
 * 
 *         for attr in entity.__attrs__:             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 */
  if (unlikely(__pyx_v_entity->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 699, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_entity->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 699, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":700
 * 
 *         for attr in entity.__attrs__:
 *             idx = attr._index_             # <<<<<<<<<<<<<<
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:
 */
    __pyx_t_4 = __pyx_v_attr->_index_;
    __pyx_v_idx = __pyx_t_4;

    /* "yapic/entity/_entity.pyx":701
 *         for attr in entity.__attrs__:
 *             idx = attr._index_
 *             cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *             if cv is <PyObject*>NOTSET:
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 */
    __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

    /* "yapic/entity/_entity.pyx":702
 *             idx = attr._index_
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is <PyObject*>NOTSET:
 */
    __pyx_t_5 = ((__pyx_v_cv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)) != 0);
    if (__pyx_t_5) {

      /* "yapic/entity/_entity.pyx":703
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *             if cv is <PyObject*>NOTSET:
 *                 if not attr.get_ext(PrimaryKey):
 */
      __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

      /* "yapic/entity/_entity.pyx":702
 *             idx = attr._index_
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is <PyObject*>NOTSET:
 */
    }

    /* "yapic/entity/_entity.pyx":704
 *             if cv is <PyObject*>NOTSET:
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                 if not attr.get_ext(PrimaryKey):
 *                     cv = <PyObject*>(attr._default_)
 */
    __pyx_t_5 = ((__pyx_v_cv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)) != 0);
    if (__pyx_t_5) {

      /* "yapic/entity/_entity.pyx":705
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is <PyObject*>NOTSET:
 *                 if not attr.get_ext(PrimaryKey):             # <<<<<<<<<<<<<<
 *                     cv = <PyObject*>(attr._default_)
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):
 */
      __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr->__pyx_base.__pyx_vtab)->get_ext(__pyx_v_attr, ((PyObject *)__pyx_ptype_5yapic_6entity_6_field_PrimaryKey), 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 705, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = ((!__pyx_t_5) != 0);
      if (__pyx_t_6) {

        /* "yapic/entity/_entity.pyx":706
 *             if cv is <PyObject*>NOTSET:
 *                 if not attr.get_ext(PrimaryKey):
 *                     cv = <PyObject*>(attr._default_)             # <<<<<<<<<<<<<<
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):
 *                         res.append((attr, (<object>cv)()))
 */
        __pyx_v_cv = ((PyObject *)__pyx_v_attr->_default_);

        /* "yapic/entity/_entity.pyx":707
 *                 if not attr.get_ext(PrimaryKey):
 *                     cv = <PyObject*>(attr._default_)
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):             # <<<<<<<<<<<<<<
 *                         res.append((attr, (<object>cv)()))
 *                 continue
 */
        __pyx_t_5 = __Pyx_TypeCheck(((PyObject *)__pyx_v_cv), __pyx_ptype_5yapic_6entity_11_expression_Expression); 
        __pyx_t_7 = ((!(__pyx_t_5 != 0)) != 0);
        if (__pyx_t_7) {
        } else {
          __pyx_t_6 = __pyx_t_7;
          goto __pyx_L9_bool_binop_done;
        }
        __pyx_t_7 = __Pyx_PyCallable_Check(((PyObject *)__pyx_v_cv)); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 707, __pyx_L1_error)
        __pyx_t_5 = (__pyx_t_7 != 0);
        __pyx_t_6 = __pyx_t_5;
        __pyx_L9_bool_binop_done:;
        if (__pyx_t_6) {

          /* "yapic/entity/_entity.pyx":708
 *                     cv = <PyObject*>(attr._default_)
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):
 *                         res.append((attr, (<object>cv)()))             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
          __Pyx_INCREF(((PyObject *)__pyx_v_cv));
          __pyx_t_8 = ((PyObject *)__pyx_v_cv); __pyx_t_9 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_9)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_9);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 708, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 708, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_INCREF(((PyObject *)__pyx_v_attr));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
          PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_v_attr));
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_8); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 708, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "yapic/entity/_entity.pyx":707
 *                 if not attr.get_ext(PrimaryKey):
 *                     cv = <PyObject*>(attr._default_)
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):             # <<<<<<<<<<<<<<
 *                         res.append((attr, (<object>cv)()))
 *                 continue
 */
        }

        /* "yapic/entity/_entity.pyx":705
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is <PyObject*>NOTSET:
 *                 if not attr.get_ext(PrimaryKey):             # <<<<<<<<<<<<<<
 *                     cv = <PyObject*>(attr._default_)
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):
 */
      }

      /* "yapic/entity/_entity.pyx":709
 *                     if not isinstance(<object>cv, Expression) and callable(<object>cv):
 *                         res.append((attr, (<object>cv)()))
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             res.append((attr, <object>cv))
 */
      goto __pyx_L3_continue;

      /* "yapic/entity/_entity.pyx":704
 *             if cv is <PyObject*>NOTSET:
 *                 cv = PyTuple_GET_ITEM(<object>initial, idx)
 *             if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                 if not attr.get_ext(PrimaryKey):
 *                     cv = <PyObject*>(attr._default_)
 */
    }

    /* "yapic/entity/_entity.pyx":711
 *                 continue
 * 
 *             res.append((attr, <object>cv))             # <<<<<<<<<<<<<<
 * 
 *         return res
 */
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 711, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(((PyObject *)__pyx_v_attr));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
    PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_v_attr));
    __Pyx_INCREF(((PyObject *)__pyx_v_cv));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_cv));
    PyTuple_SET_ITEM(__pyx_t_8, 1, ((PyObject *)__pyx_v_cv));
    __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_8); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 711, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "yapic/entity/_entity.pyx":699
 *         cdef EntityAttribute attr
 * 
 *         for attr in entity.__attrs__:             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 */
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":713
 *             res.append((attr, <object>cv))
 * 
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cdef list data_for_update(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":690
 *         PyTuple_SET_ITEM(<object>current, attr._index_, <object>NULL)
 * 
 *     cdef list data_for_insert(self):             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef list res = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.data_for_insert", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":715
 *         return res
 * 
 *     cdef list data_for_update(self):             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef list res = []
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_update(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  int __pyx_v_idx;
  PyObject *__pyx_v_res = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity = 0;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_v_iv;
  PyObject *__pyx_v_cv;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_v_nv = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("data_for_update", 0);

  /* "yapic/entity/_entity.pyx":717
 *     cdef list data_for_update(self):
 *         cdef int idx
 *         cdef list res = []             # <<<<<<<<<<<<<<
 *         cdef EntityType entity = self.entity
 *         cdef PyObject* initial = <PyObject*>self.initial
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":718
 *         cdef int idx
 *         cdef list res = []
 *         cdef EntityType entity = self.entity             # <<<<<<<<<<<<<<
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->entity);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":719
 *         cdef list res = []
 *         cdef EntityType entity = self.entity
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 *         cdef PyObject* iv
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":720
 *         cdef EntityType entity = self.entity
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 *         cdef PyObject* iv
 *         cdef PyObject* cv
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":725
 *         cdef EntityAttribute attr
 * 
 *         for attr in entity.__attrs__:             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 * 
 */
  if (unlikely(__pyx_v_entity->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 725, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_entity->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 725, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 725, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 725, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":726
 * 
 *         for attr in entity.__attrs__:
 *             idx = attr._index_             # <<<<<<<<<<<<<<
 * 
 *             iv = PyTuple_GET_ITEM(<object>initial, idx)
 */
    __pyx_t_4 = __pyx_v_attr->_index_;
    __pyx_v_idx = __pyx_t_4;

    /* "yapic/entity/_entity.pyx":728
 *             idx = attr._index_
 * 
 *             iv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)
 */
    __pyx_v_iv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

    /* "yapic/entity/_entity.pyx":729
 * 
 *             iv = PyTuple_GET_ITEM(<object>initial, idx)
 *             cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)
 * 
 */
    __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

    /* "yapic/entity/_entity.pyx":730
 *             iv = PyTuple_GET_ITEM(<object>initial, idx)
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)             # <<<<<<<<<<<<<<
 * 
 *             if nv is NOTSET:
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_)->__pyx_vtab)->state_get_dirty(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_), ((PyObject *)__pyx_v_iv), ((PyObject *)__pyx_v_cv)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_nv, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":732
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)
 * 
 *             if nv is NOTSET:             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
    __pyx_t_5 = (__pyx_v_nv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_t_6 = (__pyx_t_5 != 0);
    if (__pyx_t_6) {

      /* "yapic/entity/_entity.pyx":733
 * 
 *             if nv is NOTSET:
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             res.append((attr, <object>nv))
 */
      goto __pyx_L3_continue;

      /* "yapic/entity/_entity.pyx":732
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)
 * 
 *             if nv is NOTSET:             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":735
 *                 continue
 * 
 *             res.append((attr, <object>nv))             # <<<<<<<<<<<<<<
 * 
 *         return res
 */
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 735, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_v_attr));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_attr));
    __Pyx_INCREF(((PyObject *)__pyx_v_nv));
    __Pyx_GIVEREF(__pyx_v_nv);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_nv);
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_3); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 735, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":725
 *         cdef EntityAttribute attr
 * 
 *         for attr in entity.__attrs__:             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 * 
 */
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":737
 *             res.append((attr, <object>nv))
 * 
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     def changes(self, EntityAttribute attr=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":715
 *         return res
 * 
 *     cdef list data_for_update(self):             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef list res = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.data_for_update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_nv);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":739
 *         return res
 * 
 *     def changes(self, EntityAttribute attr=None):             # <<<<<<<<<<<<<<
 *         if attr is not None:
 *             return self.attr_changes(attr)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_5changes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_5changes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("changes (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_attr);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "changes") < 0)) __PYX_ERR(0, 739, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("changes", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 739, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.changes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 739, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_4changes(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self), __pyx_v_attr);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_4changes(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_v_res = 0;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("changes", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_attr);

  /* "yapic/entity/_entity.pyx":740
 * 
 *     def changes(self, EntityAttribute attr=None):
 *         if attr is not None:             # <<<<<<<<<<<<<<
 *             return self.attr_changes(attr)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_attr) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":741
 *     def changes(self, EntityAttribute attr=None):
 *         if attr is not None:
 *             return self.attr_changes(attr)             # <<<<<<<<<<<<<<
 * 
 *         cdef dict res = {}
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes(__pyx_v_self, __pyx_v_attr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":740
 * 
 *     def changes(self, EntityAttribute attr=None):
 *         if attr is not None:             # <<<<<<<<<<<<<<
 *             return self.attr_changes(attr)
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":743
 *             return self.attr_changes(attr)
 * 
 *         cdef dict res = {}             # <<<<<<<<<<<<<<
 *         for attr, value in self.data_for_update():
 *             res[attr._name_] = value
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_res = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "yapic/entity/_entity.pyx":744
 * 
 *         cdef dict res = {}
 *         for attr, value in self.data_for_update():             # <<<<<<<<<<<<<<
 *             res[attr._name_] = value
 *         return res
 */
  __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_update(__pyx_v_self); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 744, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 744, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
      PyObject* sequence = __pyx_t_3;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 744, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      #else
      __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      #endif
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
      index = 0; __pyx_t_6 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      index = 1; __pyx_t_7 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_7)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 2) < 0) __PYX_ERR(0, 744, __pyx_L1_error)
      __pyx_t_9 = NULL;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 744, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 744, __pyx_L1_error)
    __Pyx_DECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_6));
    __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "yapic/entity/_entity.pyx":745
 *         cdef dict res = {}
 *         for attr, value in self.data_for_update():
 *             res[attr._name_] = value             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    if (unlikely(PyDict_SetItem(__pyx_v_res, __pyx_v_attr->_name_, __pyx_v_value) < 0)) __PYX_ERR(0, 745, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":744
 * 
 *         cdef dict res = {}
 *         for attr, value in self.data_for_update():             # <<<<<<<<<<<<<<
 *             res[attr._name_] = value
 *         return res
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yapic/entity/_entity.pyx":746
 *         for attr, value in self.data_for_update():
 *             res[attr._name_] = value
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     def changes_with_previous(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":739
 *         return res
 * 
 *     def changes(self, EntityAttribute attr=None):             # <<<<<<<<<<<<<<
 *         if attr is not None:
 *             return self.attr_changes(attr)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.changes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":748
 *         return res
 * 
 *     def changes_with_previous(self):             # <<<<<<<<<<<<<<
 *         cdef dict res = {}
 *         cdef int idx
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_7changes_with_previous(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_7changes_with_previous(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("changes_with_previous (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_6changes_with_previous(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_6changes_with_previous(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  PyObject *__pyx_v_res = 0;
  int __pyx_v_idx;
  PyObject *__pyx_v_initial = 0;
  PyObject *__pyx_v_attr = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("changes_with_previous", 0);

  /* "yapic/entity/_entity.pyx":749
 * 
 *     def changes_with_previous(self):
 *         cdef dict res = {}             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef tuple initial = self.initial
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":751
 *         cdef dict res = {}
 *         cdef int idx
 *         cdef tuple initial = self.initial             # <<<<<<<<<<<<<<
 * 
 *         for attr, value in self.data_for_update():
 */
  __pyx_t_1 = __pyx_v_self->initial;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_initial = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":753
 *         cdef tuple initial = self.initial
 * 
 *         for attr, value in self.data_for_update():             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 *             res[attr._name_] = (initial[idx], value)
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_update(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 753, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 753, __pyx_L1_error)
    #else
    __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 753, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_5 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 753, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 753, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 753, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_7 = Py_TYPE(__pyx_t_6)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_7(__pyx_t_6); if (unlikely(!__pyx_t_4)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_5 = __pyx_t_7(__pyx_t_6); if (unlikely(!__pyx_t_5)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_7(__pyx_t_6), 2) < 0) __PYX_ERR(0, 753, __pyx_L1_error)
      __pyx_t_7 = NULL;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 753, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_attr, __pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":754
 * 
 *         for attr, value in self.data_for_update():
 *             idx = attr._index_             # <<<<<<<<<<<<<<
 *             res[attr._name_] = (initial[idx], value)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_attr, __pyx_n_s_index_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 754, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 754, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_idx = __pyx_t_8;

    /* "yapic/entity/_entity.pyx":755
 *         for attr, value in self.data_for_update():
 *             idx = attr._index_
 *             res[attr._name_] = (initial[idx], value)             # <<<<<<<<<<<<<<
 * 
 *         return res
 */
    if (unlikely(__pyx_v_initial == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 755, __pyx_L1_error)
    }
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(PyTuple_GET_ITEM(__pyx_v_initial, __pyx_v_idx));
    __Pyx_GIVEREF(PyTuple_GET_ITEM(__pyx_v_initial, __pyx_v_idx));
    PyTuple_SET_ITEM(__pyx_t_1, 0, PyTuple_GET_ITEM(__pyx_v_initial, __pyx_v_idx));
    __Pyx_INCREF(__pyx_v_value);
    __Pyx_GIVEREF(__pyx_v_value);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_value);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_attr, __pyx_n_s_name_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(PyDict_SetItem(__pyx_v_res, __pyx_t_5, __pyx_t_1) < 0)) __PYX_ERR(0, 755, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":753
 *         cdef tuple initial = self.initial
 * 
 *         for attr, value in self.data_for_update():             # <<<<<<<<<<<<<<
 *             idx = attr._index_
 *             res[attr._name_] = (initial[idx], value)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":757
 *             res[attr._name_] = (initial[idx], value)
 * 
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cdef object attr_changes(self, EntityAttribute attr):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":748
 *         return res
 * 
 *     def changes_with_previous(self):             # <<<<<<<<<<<<<<
 *         cdef dict res = {}
 *         cdef int idx
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.changes_with_previous", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_initial);
  __Pyx_XDECREF(__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":759
 *         return res
 * 
 *     cdef object attr_changes(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef int idx = attr._index_
 *         cdef PyObject* iv
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  int __pyx_v_idx;
  PyObject *__pyx_v_iv;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("attr_changes", 0);

  /* "yapic/entity/_entity.pyx":760
 * 
 *     cdef object attr_changes(self, EntityAttribute attr):
 *         cdef int idx = attr._index_             # <<<<<<<<<<<<<<
 *         cdef PyObject* iv
 *         cdef PyObject* cv
 */
  __pyx_t_1 = __pyx_v_attr->_index_;
  __pyx_v_idx = __pyx_t_1;

  /* "yapic/entity/_entity.pyx":763
 *         cdef PyObject* iv
 *         cdef PyObject* cv
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 * 
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":764
 *         cdef PyObject* cv
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 * 
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":766
 *         cdef PyObject* current = <PyObject*>self.current
 * 
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         return (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)
 */
  __pyx_v_iv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":767
 * 
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *         return (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)
 * 
 */
  __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":768
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         return (<EntityAttributeImpl>attr._impl_).state_get_dirty(<object>iv, <object>cv)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_)->__pyx_vtab)->state_get_dirty(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_), ((PyObject *)__pyx_v_iv), ((PyObject *)__pyx_v_cv)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":759
 *         return res
 * 
 *     cdef object attr_changes(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef int idx = attr._index_
 *         cdef PyObject* iv
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.attr_changes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":771
 * 
 *     @property
 *     def is_dirty(self):             # <<<<<<<<<<<<<<
 *         for attr in self.entity.__attrs__:
 *             if self.attr_changes(attr) is not NOTSET:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_8is_dirty_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_8is_dirty_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_8is_dirty___get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_8is_dirty___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  PyObject *__pyx_v_attr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "yapic/entity/_entity.pyx":772
 *     @property
 *     def is_dirty(self):
 *         for attr in self.entity.__attrs__:             # <<<<<<<<<<<<<<
 *             if self.attr_changes(attr) is not NOTSET:
 *                 return True
 */
  if (unlikely(__pyx_v_self->entity->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 772, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->entity->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 772, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 772, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_attr, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":773
 *     def is_dirty(self):
 *         for attr in self.entity.__attrs__:
 *             if self.attr_changes(attr) is not NOTSET:             # <<<<<<<<<<<<<<
 *                 return True
 *         return False
 */
    if (!(likely(((__pyx_v_attr) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_attr, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 773, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes(__pyx_v_self, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 773, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = (__pyx_t_3 != ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = (__pyx_t_4 != 0);
    if (__pyx_t_5) {

      /* "yapic/entity/_entity.pyx":774
 *         for attr in self.entity.__attrs__:
 *             if self.attr_changes(attr) is not NOTSET:
 *                 return True             # <<<<<<<<<<<<<<
 *         return False
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":773
 *     def is_dirty(self):
 *         for attr in self.entity.__attrs__:
 *             if self.attr_changes(attr) is not NOTSET:             # <<<<<<<<<<<<<<
 *                 return True
 *         return False
 */
    }

    /* "yapic/entity/_entity.pyx":772
 *     @property
 *     def is_dirty(self):
 *         for attr in self.entity.__attrs__:             # <<<<<<<<<<<<<<
 *             if self.attr_changes(attr) is not NOTSET:
 *                 return True
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":775
 *             if self.attr_changes(attr) is not NOTSET:
 *                 return True
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     def reset(self, EntityAttribute attr=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_False);
  __pyx_r = Py_False;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":771
 * 
 *     @property
 *     def is_dirty(self):             # <<<<<<<<<<<<<<
 *         for attr in self.entity.__attrs__:
 *             if self.attr_changes(attr) is not NOTSET:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.is_dirty.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":777
 *         return False
 * 
 *     def reset(self, EntityAttribute attr=None):             # <<<<<<<<<<<<<<
 *         if attr is None:
 *             return self.reset_all()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_9reset(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_9reset(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attr,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_attr);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "reset") < 0)) __PYX_ERR(0, 777, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("reset", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 777, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute, 1, "attr", 0))) __PYX_ERR(0, 777, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_8reset(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self), __pyx_v_attr);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_8reset(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "yapic/entity/_entity.pyx":778
 * 
 *     def reset(self, EntityAttribute attr=None):
 *         if attr is None:             # <<<<<<<<<<<<<<
 *             return self.reset_all()
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_attr) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":779
 *     def reset(self, EntityAttribute attr=None):
 *         if attr is None:
 *             return self.reset_all()             # <<<<<<<<<<<<<<
 *         else:
 *             return self.reset_attr(attr)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_reset_all(__pyx_v_self); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":778
 * 
 *     def reset(self, EntityAttribute attr=None):
 *         if attr is None:             # <<<<<<<<<<<<<<
 *             return self.reset_all()
 *         else:
 */
  }

  /* "yapic/entity/_entity.pyx":781
 *             return self.reset_all()
 *         else:
 *             return self.reset_attr(attr)             # <<<<<<<<<<<<<<
 * 
 *     cdef reset_all(self):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_reset_attr(__pyx_v_self, __pyx_v_attr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":777
 *         return False
 * 
 *     def reset(self, EntityAttribute attr=None):             # <<<<<<<<<<<<<<
 *         if attr is None:
 *             return self.reset_all()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":783
 *             return self.reset_attr(attr)
 * 
 *     cdef reset_all(self):             # <<<<<<<<<<<<<<
 *         cdef int length = len(self.current)
 *         cdef int idx
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_all(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  int __pyx_v_length;
  int __pyx_v_idx;
  PyObject *__pyx_v_iv;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reset_all", 0);

  /* "yapic/entity/_entity.pyx":784
 * 
 *     cdef reset_all(self):
 *         cdef int length = len(self.current)             # <<<<<<<<<<<<<<
 *         cdef int idx
 *         cdef PyObject* iv
 */
  __pyx_t_1 = __pyx_v_self->current;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 784, __pyx_L1_error)
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_length = __pyx_t_2;

  /* "yapic/entity/_entity.pyx":788
 *         cdef PyObject* iv
 *         cdef PyObject* cv
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 * 
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":789
 *         cdef PyObject* cv
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 * 
 *         for idx in range(length):
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":791
 *         cdef PyObject* current = <PyObject*>self.current
 * 
 *         for idx in range(length):             # <<<<<<<<<<<<<<
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:
 */
  __pyx_t_3 = __pyx_v_length;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_idx = __pyx_t_5;

    /* "yapic/entity/_entity.pyx":792
 * 
 *         for idx in range(length):
 *             cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *             if cv is <PyObject*>NOTSET:
 *                 iv = PyTuple_GET_ITEM(<object>initial, idx)
 */
    __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

    /* "yapic/entity/_entity.pyx":793
 *         for idx in range(length):
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                 iv = PyTuple_GET_ITEM(<object>initial, idx)
 * 
 */
    __pyx_t_6 = ((__pyx_v_cv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)) != 0);
    if (__pyx_t_6) {

      /* "yapic/entity/_entity.pyx":794
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:
 *                 iv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 * 
 *                 if iv is not <PyObject*>NOTSET:
 */
      __pyx_v_iv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

      /* "yapic/entity/_entity.pyx":796
 *                 iv = PyTuple_GET_ITEM(<object>initial, idx)
 * 
 *                 if iv is not <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                     Py_INCREF(<object>iv)
 *                     Py_DECREF(<object>cv)
 */
      __pyx_t_6 = ((__pyx_v_iv != ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)) != 0);
      if (__pyx_t_6) {

        /* "yapic/entity/_entity.pyx":797
 * 
 *                 if iv is not <PyObject*>NOTSET:
 *                     Py_INCREF(<object>iv)             # <<<<<<<<<<<<<<
 *                     Py_DECREF(<object>cv)
 *                     PyTuple_SET_ITEM(<object>current, idx, <object>iv)
 */
        Py_INCREF(((PyObject *)__pyx_v_iv));

        /* "yapic/entity/_entity.pyx":798
 *                 if iv is not <PyObject*>NOTSET:
 *                     Py_INCREF(<object>iv)
 *                     Py_DECREF(<object>cv)             # <<<<<<<<<<<<<<
 *                     PyTuple_SET_ITEM(<object>current, idx, <object>iv)
 * 
 */
        Py_DECREF(((PyObject *)__pyx_v_cv));

        /* "yapic/entity/_entity.pyx":799
 *                     Py_INCREF(<object>iv)
 *                     Py_DECREF(<object>cv)
 *                     PyTuple_SET_ITEM(<object>current, idx, <object>iv)             # <<<<<<<<<<<<<<
 * 
 *         self.initial = self.current
 */
        PyTuple_SET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx, ((PyObject *)__pyx_v_iv));

        /* "yapic/entity/_entity.pyx":796
 *                 iv = PyTuple_GET_ITEM(<object>initial, idx)
 * 
 *                 if iv is not <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                     Py_INCREF(<object>iv)
 *                     Py_DECREF(<object>cv)
 */
      }

      /* "yapic/entity/_entity.pyx":793
 *         for idx in range(length):
 *             cv = PyTuple_GET_ITEM(<object>current, idx)
 *             if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *                 iv = PyTuple_GET_ITEM(<object>initial, idx)
 * 
 */
    }
  }

  /* "yapic/entity/_entity.pyx":801
 *                     PyTuple_SET_ITEM(<object>current, idx, <object>iv)
 * 
 *         self.initial = self.current             # <<<<<<<<<<<<<<
 *         self.current = PyTuple_New(length)
 *         self.init()
 */
  __pyx_t_1 = __pyx_v_self->current;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->initial);
  __Pyx_DECREF(__pyx_v_self->initial);
  __pyx_v_self->initial = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":802
 * 
 *         self.initial = self.current
 *         self.current = PyTuple_New(length)             # <<<<<<<<<<<<<<
 *         self.init()
 * 
 */
  __pyx_t_1 = PyTuple_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->current);
  __Pyx_DECREF(__pyx_v_self->current);
  __pyx_v_self->current = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":803
 *         self.initial = self.current
 *         self.current = PyTuple_New(length)
 *         self.init()             # <<<<<<<<<<<<<<
 * 
 *     cdef reset_attr(self, EntityAttribute attr):
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_11EntityState_init(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":783
 *             return self.reset_attr(attr)
 * 
 *     cdef reset_all(self):             # <<<<<<<<<<<<<<
 *         cdef int length = len(self.current)
 *         cdef int idx
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.reset_all", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":805
 *         self.init()
 * 
 *     cdef reset_attr(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef int idx = attr._index_
 *         cdef PyObject* iv
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_attr(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr) {
  int __pyx_v_idx;
  PyObject *__pyx_v_iv;
  PyObject *__pyx_v_cv;
  PyObject *__pyx_v_initial;
  PyObject *__pyx_v_current;
  PyObject *__pyx_v_val = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reset_attr", 0);

  /* "yapic/entity/_entity.pyx":806
 * 
 *     cdef reset_attr(self, EntityAttribute attr):
 *         cdef int idx = attr._index_             # <<<<<<<<<<<<<<
 *         cdef PyObject* iv
 *         cdef PyObject* cv
 */
  __pyx_t_1 = __pyx_v_attr->_index_;
  __pyx_v_idx = __pyx_t_1;

  /* "yapic/entity/_entity.pyx":809
 *         cdef PyObject* iv
 *         cdef PyObject* cv
 *         cdef PyObject* initial = <PyObject*>self.initial             # <<<<<<<<<<<<<<
 *         cdef PyObject* current = <PyObject*>self.current
 * 
 */
  __pyx_v_initial = ((PyObject *)__pyx_v_self->initial);

  /* "yapic/entity/_entity.pyx":810
 *         cdef PyObject* cv
 *         cdef PyObject* initial = <PyObject*>self.initial
 *         cdef PyObject* current = <PyObject*>self.current             # <<<<<<<<<<<<<<
 * 
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 */
  __pyx_v_current = ((PyObject *)__pyx_v_self->current);

  /* "yapic/entity/_entity.pyx":812
 *         cdef PyObject* current = <PyObject*>self.current
 * 
 *         cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *         if cv is <PyObject*>NOTSET:
 *             return
 */
  __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":813
 * 
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_2 = ((__pyx_v_cv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET)) != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":814
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         if cv is <PyObject*>NOTSET:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(<object>cv)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":813
 * 
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         if cv is <PyObject*>NOTSET:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":816
 *             return
 * 
 *         Py_INCREF(<object>cv)             # <<<<<<<<<<<<<<
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         Py_XDECREF(iv)
 */
  Py_INCREF(((PyObject *)__pyx_v_cv));

  /* "yapic/entity/_entity.pyx":817
 * 
 *         Py_INCREF(<object>cv)
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)             # <<<<<<<<<<<<<<
 *         Py_XDECREF(iv)
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>cv)
 */
  __pyx_v_iv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":818
 *         Py_INCREF(<object>cv)
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         Py_XDECREF(iv)             # <<<<<<<<<<<<<<
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>cv)
 * 
 */
  Py_XDECREF(__pyx_v_iv);

  /* "yapic/entity/_entity.pyx":819
 *         iv = PyTuple_GET_ITEM(<object>initial, idx)
 *         Py_XDECREF(iv)
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>cv)             # <<<<<<<<<<<<<<
 * 
 *         val = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)
 */
  PyTuple_SET_ITEM(((PyObject *)__pyx_v_initial), __pyx_v_idx, ((PyObject *)__pyx_v_cv));

  /* "yapic/entity/_entity.pyx":821
 *         PyTuple_SET_ITEM(<object>initial, idx, <object>cv)
 * 
 *         val = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)             # <<<<<<<<<<<<<<
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         Py_XDECREF(cv)
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_)->__pyx_vtab)->state_init(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_), ((PyObject *)__pyx_v_cv)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_val = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "yapic/entity/_entity.pyx":822
 * 
 *         val = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)
 *         cv = PyTuple_GET_ITEM(<object>current, idx)             # <<<<<<<<<<<<<<
 *         Py_XDECREF(cv)
 *         Py_INCREF(<object>val)
 */
  __pyx_v_cv = PyTuple_GET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx);

  /* "yapic/entity/_entity.pyx":823
 *         val = (<EntityAttributeImpl>attr._impl_).state_init(<object>cv)
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         Py_XDECREF(cv)             # <<<<<<<<<<<<<<
 *         Py_INCREF(<object>val)
 *         PyTuple_SET_ITEM(<object>current, idx, <object>val)
 */
  Py_XDECREF(__pyx_v_cv);

  /* "yapic/entity/_entity.pyx":824
 *         cv = PyTuple_GET_ITEM(<object>current, idx)
 *         Py_XDECREF(cv)
 *         Py_INCREF(<object>val)             # <<<<<<<<<<<<<<
 *         PyTuple_SET_ITEM(<object>current, idx, <object>val)
 * 
 */
  Py_INCREF(__pyx_v_val);

  /* "yapic/entity/_entity.pyx":825
 *         Py_XDECREF(cv)
 *         Py_INCREF(<object>val)
 *         PyTuple_SET_ITEM(<object>current, idx, <object>val)             # <<<<<<<<<<<<<<
 * 
 *     def changed_realtions(self):
 */
  PyTuple_SET_ITEM(((PyObject *)__pyx_v_current), __pyx_v_idx, __pyx_v_val);

  /* "yapic/entity/_entity.pyx":805
 *         self.init()
 * 
 *     cdef reset_attr(self, EntityAttribute attr):             # <<<<<<<<<<<<<<
 *         cdef int idx = attr._index_
 *         cdef PyObject* iv
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.reset_attr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_val);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5yapic_6entity_7_entity_11EntityState_12generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "yapic/entity/_entity.pyx":827
 *         PyTuple_SET_ITEM(<object>current, idx, <object>val)
 * 
 *     def changed_realtions(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_11changed_realtions(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_11changed_realtions(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("changed_realtions (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_10changed_realtions(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_10changed_realtions(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("changed_realtions", 0);
  __pyx_cur_scope = (struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *)__pyx_tp_new_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions(__pyx_ptype_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 827, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_5yapic_6entity_7_entity_11EntityState_12generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_changed_realtions, __pyx_n_s_EntityState_changed_realtions, __pyx_n_s_yapic_entity__entity); if (unlikely(!gen)) __PYX_ERR(0, 827, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.changed_realtions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5yapic_6entity_7_entity_11EntityState_12generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *__pyx_cur_scope = ((struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("changed_realtions", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L8_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 827, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":830
 *         cdef EntityAttribute attr
 * 
 *         for i in range(self.field_count, len(self.entity.__attrs__)):             # <<<<<<<<<<<<<<
 *             attr = self.entity.__attrs__[i]
 *             if isinstance(attr, Relation):
 */
  __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->entity->__attrs__;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 830, __pyx_L1_error)
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 830, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = __pyx_cur_scope->__pyx_v_self->field_count; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_cur_scope->__pyx_v_i = __pyx_t_4;

    /* "yapic/entity/_entity.pyx":831
 * 
 *         for i in range(self.field_count, len(self.entity.__attrs__)):
 *             attr = self.entity.__attrs__[i]             # <<<<<<<<<<<<<<
 *             if isinstance(attr, Relation):
 *                 val = self.attr_changes(attr)
 */
    if (unlikely(__pyx_cur_scope->__pyx_v_self->entity->__attrs__ == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 831, __pyx_L1_error)
    }
    if (!(likely(((PyTuple_GET_ITEM(__pyx_cur_scope->__pyx_v_self->entity->__attrs__, __pyx_cur_scope->__pyx_v_i)) == Py_None) || likely(__Pyx_TypeTest(PyTuple_GET_ITEM(__pyx_cur_scope->__pyx_v_self->entity->__attrs__, __pyx_cur_scope->__pyx_v_i), __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 831, __pyx_L1_error)
    __pyx_t_1 = PyTuple_GET_ITEM(__pyx_cur_scope->__pyx_v_self->entity->__attrs__, __pyx_cur_scope->__pyx_v_i);
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XGOTREF(((PyObject *)__pyx_cur_scope->__pyx_v_attr));
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_1));
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":832
 *         for i in range(self.field_count, len(self.entity.__attrs__)):
 *             attr = self.entity.__attrs__[i]
 *             if isinstance(attr, Relation):             # <<<<<<<<<<<<<<
 *                 val = self.attr_changes(attr)
 *                 if val is not NOTSET:
 */
    __pyx_t_5 = __Pyx_TypeCheck(((PyObject *)__pyx_cur_scope->__pyx_v_attr), __pyx_ptype_5yapic_6entity_9_relation_Relation); 
    __pyx_t_6 = (__pyx_t_5 != 0);
    if (__pyx_t_6) {

      /* "yapic/entity/_entity.pyx":833
 *             attr = self.entity.__attrs__[i]
 *             if isinstance(attr, Relation):
 *                 val = self.attr_changes(attr)             # <<<<<<<<<<<<<<
 *                 if val is not NOTSET:
 *                     yield (attr, val)
 */
      __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 833, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_val);
      __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_val, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;

      /* "yapic/entity/_entity.pyx":834
 *             if isinstance(attr, Relation):
 *                 val = self.attr_changes(attr)
 *                 if val is not NOTSET:             # <<<<<<<<<<<<<<
 *                     yield (attr, val)
 * 
 */
      __pyx_t_6 = (__pyx_cur_scope->__pyx_v_val != ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
      __pyx_t_5 = (__pyx_t_6 != 0);
      if (__pyx_t_5) {

        /* "yapic/entity/_entity.pyx":835
 *                 val = self.attr_changes(attr)
 *                 if val is not NOTSET:
 *                     yield (attr, val)             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(EntityState self, other):
 */
        __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 835, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_attr));
        __Pyx_GIVEREF(((PyObject *)__pyx_cur_scope->__pyx_v_attr));
        PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_cur_scope->__pyx_v_attr));
        __Pyx_INCREF(__pyx_cur_scope->__pyx_v_val);
        __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_val);
        PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_cur_scope->__pyx_v_val);
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
        __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
        __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
        __Pyx_XGIVEREF(__pyx_r);
        __Pyx_RefNannyFinishContext();
        __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
        /* return from generator, yielding value */
        __pyx_generator->resume_label = 1;
        return __pyx_r;
        __pyx_L8_resume_from_yield:;
        __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
        __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
        __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
        if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 835, __pyx_L1_error)

        /* "yapic/entity/_entity.pyx":834
 *             if isinstance(attr, Relation):
 *                 val = self.attr_changes(attr)
 *                 if val is not NOTSET:             # <<<<<<<<<<<<<<
 *                     yield (attr, val)
 * 
 */
      }

      /* "yapic/entity/_entity.pyx":832
 *         for i in range(self.field_count, len(self.entity.__attrs__)):
 *             attr = self.entity.__attrs__[i]
 *             if isinstance(attr, Relation):             # <<<<<<<<<<<<<<
 *                 val = self.attr_changes(attr)
 *                 if val is not NOTSET:
 */
    }
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "yapic/entity/_entity.pyx":827
 *         PyTuple_SET_ITEM(<object>current, idx, <object>val)
 * 
 *     def changed_realtions(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 * 
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("changed_realtions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":837
 *                     yield (attr, val)
 * 
 *     def __eq__(EntityState self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, EntityState):
 *             return False
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_14__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_14__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_13__eq__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_13__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_other) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  PyObject *__pyx_v_sv = NULL;
  PyObject *__pyx_v_ov = NULL;
  PyObject *__pyx_v_nv = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "yapic/entity/_entity.pyx":838
 * 
 *     def __eq__(EntityState self, other):
 *         if not isinstance(other, EntityState):             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5yapic_6entity_7_entity_EntityState); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":839
 *     def __eq__(EntityState self, other):
 *         if not isinstance(other, EntityState):
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         if self.entity is not (<EntityState>other).entity:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":838
 * 
 *     def __eq__(EntityState self, other):
 *         if not isinstance(other, EntityState):             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":841
 *             return False
 * 
 *         if self.entity is not (<EntityState>other).entity:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_2 = (__pyx_v_self->entity != ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_other)->entity);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":842
 * 
 *         if self.entity is not (<EntityState>other).entity:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         cdef int idx
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":841
 *             return False
 * 
 *         if self.entity is not (<EntityState>other).entity:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":847
 *         cdef EntityAttribute attr
 * 
 *         for attr in self.entity.__attrs__:             # <<<<<<<<<<<<<<
 *             sv = self.get_value(attr)
 *             ov = (<EntityState>other).get_value(attr)
 */
  if (unlikely(__pyx_v_self->entity->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 847, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_v_self->entity->__attrs__; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
  for (;;) {
    if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_5); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 847, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 847, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":848
 * 
 *         for attr in self.entity.__attrs__:
 *             sv = self.get_value(attr)             # <<<<<<<<<<<<<<
 *             ov = (<EntityState>other).get_value(attr)
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(sv, ov)
 */
    __pyx_t_5 = __pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(__pyx_v_self, __pyx_v_attr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 848, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_sv, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":849
 *         for attr in self.entity.__attrs__:
 *             sv = self.get_value(attr)
 *             ov = (<EntityState>other).get_value(attr)             # <<<<<<<<<<<<<<
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(sv, ov)
 * 
 */
    __pyx_t_5 = __pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_other), __pyx_v_attr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_ov, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":850
 *             sv = self.get_value(attr)
 *             ov = (<EntityState>other).get_value(attr)
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(sv, ov)             # <<<<<<<<<<<<<<
 * 
 *             if nv is NOTSET:
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl *)((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_)->__pyx_vtab)->state_get_dirty(((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)__pyx_v_attr->_impl_), __pyx_v_sv, __pyx_v_ov); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_nv, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":852
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(sv, ov)
 * 
 *             if nv is NOTSET:             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
    __pyx_t_1 = (__pyx_v_nv == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "yapic/entity/_entity.pyx":853
 * 
 *             if nv is NOTSET:
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             return False
 */
      goto __pyx_L5_continue;

      /* "yapic/entity/_entity.pyx":852
 *             nv = (<EntityAttributeImpl>attr._impl_).state_get_dirty(sv, ov)
 * 
 *             if nv is NOTSET:             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":855
 *                 continue
 * 
 *             return False             # <<<<<<<<<<<<<<
 *         return True
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":847
 *         cdef EntityAttribute attr
 * 
 *         for attr in self.entity.__attrs__:             # <<<<<<<<<<<<<<
 *             sv = self.get_value(attr)
 *             ov = (<EntityState>other).get_value(attr)
 */
    __pyx_L5_continue:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "yapic/entity/_entity.pyx":856
 * 
 *             return False
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def __ne__(EntityState self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":837
 *                     yield (attr, val)
 * 
 *     def __eq__(EntityState self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(other, EntityState):
 *             return False
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_sv);
  __Pyx_XDECREF(__pyx_v_ov);
  __Pyx_XDECREF(__pyx_v_nv);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":858
 *         return True
 * 
 *     def __ne__(EntityState self, other):             # <<<<<<<<<<<<<<
 *         return not self.__eq__(other)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_16__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_16__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__ne__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_15__ne__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_15__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__ne__", 0);

  /* "yapic/entity/_entity.pyx":859
 * 
 *     def __ne__(EntityState self, other):
 *         return not self.__eq__(other)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_eq); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_other) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_other);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyBool_FromLong((!__pyx_t_4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":858
 *         return True
 * 
 *     def __ne__(EntityState self, other):             # <<<<<<<<<<<<<<
 *         return not self.__eq__(other)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.__ne__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":103
 *     cdef tuple current
 *     cdef int field_count
 *     cdef readonly bint exists             # <<<<<<<<<<<<<<
 * 
 *     # @staticmethod
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_6exists_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_11EntityState_6exists_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_11EntityState_6exists___get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_11EntityState_6exists___get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->exists); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityState.exists.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":863
 * 
 * cdef class EntityBase:
 *     def __cinit__(self, state=None, **values):             # <<<<<<<<<<<<<<
 *         cdef EntityType model = type(self)
 * 
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_state = 0;
  CYTHON_UNUSED PyObject *__pyx_v_values = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_values = PyDict_New(); if (unlikely(!__pyx_v_values)) return -1;
  __Pyx_GOTREF(__pyx_v_values);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_state,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_state);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_values, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 863, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 863, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_values); __pyx_v_values = 0;
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), __pyx_v_state, __pyx_v_values);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_values);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_state, CYTHON_UNUSED PyObject *__pyx_v_values) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_model = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":864
 * cdef class EntityBase:
 *     def __cinit__(self, state=None, **values):
 *         cdef EntityType model = type(self)             # <<<<<<<<<<<<<<
 * 
 *         if not model.resolve_deferred():
 */
  if (!(likely(__Pyx_TypeTest(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_ptype_5yapic_6entity_7_entity_EntityType)))) __PYX_ERR(0, 864, __pyx_L1_error)
  __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
  __pyx_v_model = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));

  /* "yapic/entity/_entity.pyx":866
 *         cdef EntityType model = type(self)
 * 
 *         if not model.resolve_deferred():             # <<<<<<<<<<<<<<
 *             print(model.__deferred__)
 *             raise RuntimeError("Entity is not resolved...")
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType *)__pyx_v_model->__pyx_vtab)->resolve_deferred(__pyx_v_model); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 866, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = ((!__pyx_t_2) != 0);
  if (unlikely(__pyx_t_3)) {

    /* "yapic/entity/_entity.pyx":867
 * 
 *         if not model.resolve_deferred():
 *             print(model.__deferred__)             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Entity is not resolved...")
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_v_model->__deferred__); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":868
 *         if not model.resolve_deferred():
 *             print(model.__deferred__)
 *             raise RuntimeError("Entity is not resolved...")             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(state, EntityState):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 868, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":866
 *         cdef EntityType model = type(self)
 * 
 *         if not model.resolve_deferred():             # <<<<<<<<<<<<<<
 *             print(model.__deferred__)
 *             raise RuntimeError("Entity is not resolved...")
 */
  }

  /* "yapic/entity/_entity.pyx":870
 *             raise RuntimeError("Entity is not resolved...")
 * 
 *         if isinstance(state, EntityState):             # <<<<<<<<<<<<<<
 *             self.__state__ = state
 *         else:
 */
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_state, __pyx_ptype_5yapic_6entity_7_entity_EntityState); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":871
 * 
 *         if isinstance(state, EntityState):
 *             self.__state__ = state             # <<<<<<<<<<<<<<
 *         else:
 *             self.__state__ = EntityState(model)
 */
    if (!(likely(((__pyx_v_state) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_state, __pyx_ptype_5yapic_6entity_7_entity_EntityState))))) __PYX_ERR(0, 871, __pyx_L1_error)
    __pyx_t_1 = __pyx_v_state;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->__state__);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->__state__));
    __pyx_v_self->__state__ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "yapic/entity/_entity.pyx":870
 *             raise RuntimeError("Entity is not resolved...")
 * 
 *         if isinstance(state, EntityState):             # <<<<<<<<<<<<<<
 *             self.__state__ = state
 *         else:
 */
    goto __pyx_L4;
  }

  /* "yapic/entity/_entity.pyx":873
 *             self.__state__ = state
 *         else:
 *             self.__state__ = EntityState(model)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, data = None, **kw):
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityState), ((PyObject *)__pyx_v_model)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 873, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->__state__);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->__state__));
    __pyx_v_self->__state__ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "yapic/entity/_entity.pyx":863
 * 
 * cdef class EntityBase:
 *     def __cinit__(self, state=None, **values):             # <<<<<<<<<<<<<<
 *         cdef EntityType model = type(self)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_model);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":875
 *             self.__state__ = EntityState(model)
 * 
 *     def __init__(self, data = None, **kw):             # <<<<<<<<<<<<<<
 *         cdef PolymorphMeta poly
 *         cdef EntityType model
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_data = 0;
  PyObject *__pyx_v_kw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return -1;
  __Pyx_GOTREF(__pyx_v_kw);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_data);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kw, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 875, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 875, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_2__init__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), __pyx_v_data, __pyx_v_kw);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase_2__init__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_data, PyObject *__pyx_v_kw) {
  struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_poly = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_model = 0;
  PyObject *__pyx_v_poly_id = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_idf = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "yapic/entity/_entity.pyx":879
 *         cdef EntityType model
 * 
 *         if not isinstance(data, EntityState):             # <<<<<<<<<<<<<<
 *             self.__state__.init()
 * 
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_data, __pyx_ptype_5yapic_6entity_7_entity_EntityState); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":880
 * 
 *         if not isinstance(data, EntityState):
 *             self.__state__.init()             # <<<<<<<<<<<<<<
 * 
 *             if isinstance(data, dict):
 */
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_init(__pyx_v_self->__state__); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 880, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":882
 *             self.__state__.init()
 * 
 *             if isinstance(data, dict):             # <<<<<<<<<<<<<<
 *                 self.__state__.update(data, False)
 *             if len(kw) != 0:
 */
    __pyx_t_2 = PyDict_Check(__pyx_v_data); 
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "yapic/entity/_entity.pyx":883
 * 
 *             if isinstance(data, dict):
 *                 self.__state__.update(data, False)             # <<<<<<<<<<<<<<
 *             if len(kw) != 0:
 *                 self.__state__.update(kw, False)
 */
      if (!(likely(PyDict_CheckExact(__pyx_v_data))||((__pyx_v_data) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_data)->tp_name), 0))) __PYX_ERR(0, 883, __pyx_L1_error)
      __pyx_t_4.__pyx_n = 1;
      __pyx_t_4.is_initial = 0;
      __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_update(__pyx_v_self->__state__, ((PyObject*)__pyx_v_data), 0, &__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 883, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":882
 *             self.__state__.init()
 * 
 *             if isinstance(data, dict):             # <<<<<<<<<<<<<<
 *                 self.__state__.update(data, False)
 *             if len(kw) != 0:
 */
    }

    /* "yapic/entity/_entity.pyx":884
 *             if isinstance(data, dict):
 *                 self.__state__.update(data, False)
 *             if len(kw) != 0:             # <<<<<<<<<<<<<<
 *                 self.__state__.update(kw, False)
 * 
 */
    __pyx_t_5 = PyDict_Size(__pyx_v_kw); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 884, __pyx_L1_error)
    __pyx_t_1 = ((__pyx_t_5 != 0) != 0);
    if (__pyx_t_1) {

      /* "yapic/entity/_entity.pyx":885
 *                 self.__state__.update(data, False)
 *             if len(kw) != 0:
 *                 self.__state__.update(kw, False)             # <<<<<<<<<<<<<<
 * 
 *             model = type(self)
 */
      __pyx_t_4.__pyx_n = 1;
      __pyx_t_4.is_initial = 0;
      __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_update(__pyx_v_self->__state__, __pyx_v_kw, 0, &__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 885, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":884
 *             if isinstance(data, dict):
 *                 self.__state__.update(data, False)
 *             if len(kw) != 0:             # <<<<<<<<<<<<<<
 *                 self.__state__.update(kw, False)
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":887
 *                 self.__state__.update(kw, False)
 * 
 *             model = type(self)             # <<<<<<<<<<<<<<
 *             poly = (<dict>model.__meta__).get("polymorph", None)
 *             if poly is not None:
 */
    if (!(likely(__Pyx_TypeTest(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_ptype_5yapic_6entity_7_entity_EntityType)))) __PYX_ERR(0, 887, __pyx_L1_error)
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __pyx_v_model = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));

    /* "yapic/entity/_entity.pyx":888
 * 
 *             model = type(self)
 *             poly = (<dict>model.__meta__).get("polymorph", None)             # <<<<<<<<<<<<<<
 *             if poly is not None:
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_model), __pyx_n_s_meta); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 888, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(__pyx_t_3 == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
      __PYX_ERR(0, 888, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_PyDict_GetItemDefault(((PyObject*)__pyx_t_3), __pyx_n_u_polymorph, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 888, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5yapic_6entity_7_entity_PolymorphMeta))))) __PYX_ERR(0, 888, __pyx_L1_error)
    __pyx_v_poly = ((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":889
 *             model = type(self)
 *             poly = (<dict>model.__meta__).get("polymorph", None)
 *             if poly is not None:             # <<<<<<<<<<<<<<
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)
 *                 if poly_id is not None:
 */
    __pyx_t_1 = (((PyObject *)__pyx_v_poly) != Py_None);
    __pyx_t_2 = (__pyx_t_1 != 0);
    if (__pyx_t_2) {

      /* "yapic/entity/_entity.pyx":890
 *             poly = (<dict>model.__meta__).get("polymorph", None)
 *             if poly is not None:
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)             # <<<<<<<<<<<<<<
 *                 if poly_id is not None:
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_model), __pyx_n_s_meta); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 890, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(__pyx_t_6 == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
        __PYX_ERR(0, 890, __pyx_L1_error)
      }
      __pyx_t_3 = __Pyx_PyDict_GetItemDefault(((PyObject*)__pyx_t_6), __pyx_n_u_polymorph_id, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 890, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_v_poly_id = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":891
 *             if poly is not None:
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)
 *                 if poly_id is not None:             # <<<<<<<<<<<<<<
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)
 *                     for i, idf in enumerate(poly.id_fields):
 */
      __pyx_t_2 = (__pyx_v_poly_id != Py_None);
      __pyx_t_1 = (__pyx_t_2 != 0);
      if (__pyx_t_1) {

        /* "yapic/entity/_entity.pyx":892
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)
 *                 if poly_id is not None:
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)             # <<<<<<<<<<<<<<
 *                     for i, idf in enumerate(poly.id_fields):
 *                         setattr(self, idf, poly_id[i])
 */
        __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(__pyx_v_poly_id); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 892, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_poly_id, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "yapic/entity/_entity.pyx":893
 *                 if poly_id is not None:
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)
 *                     for i, idf in enumerate(poly.id_fields):             # <<<<<<<<<<<<<<
 *                         setattr(self, idf, poly_id[i])
 *         else:
 */
        __Pyx_INCREF(__pyx_int_0);
        __pyx_t_3 = __pyx_int_0;
        __pyx_t_6 = __pyx_v_poly->id_fields; __Pyx_INCREF(__pyx_t_6); __pyx_t_5 = 0;
        for (;;) {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_5); __Pyx_INCREF(__pyx_t_7); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 893, __pyx_L1_error)
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          #endif
          __Pyx_XDECREF_SET(__pyx_v_idf, __pyx_t_7);
          __pyx_t_7 = 0;
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
          __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3);
          __pyx_t_3 = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "yapic/entity/_entity.pyx":894
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)
 *                     for i, idf in enumerate(poly.id_fields):
 *                         setattr(self, idf, poly_id[i])             # <<<<<<<<<<<<<<
 *         else:
 *             self.__state__.init()
 */
          __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_poly_id, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_v_idf, __pyx_t_7); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "yapic/entity/_entity.pyx":893
 *                 if poly_id is not None:
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)
 *                     for i, idf in enumerate(poly.id_fields):             # <<<<<<<<<<<<<<
 *                         setattr(self, idf, poly_id[i])
 *         else:
 */
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "yapic/entity/_entity.pyx":891
 *             if poly is not None:
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)
 *                 if poly_id is not None:             # <<<<<<<<<<<<<<
 *                     poly_id = PolymorphMeta.normalize_id(poly_id)
 *                     for i, idf in enumerate(poly.id_fields):
 */
      }

      /* "yapic/entity/_entity.pyx":889
 *             model = type(self)
 *             poly = (<dict>model.__meta__).get("polymorph", None)
 *             if poly is not None:             # <<<<<<<<<<<<<<
 *                 poly_id = (<dict>model.__meta__).get("polymorph_id", None)
 *                 if poly_id is not None:
 */
    }

    /* "yapic/entity/_entity.pyx":879
 *         cdef EntityType model
 * 
 *         if not isinstance(data, EntityState):             # <<<<<<<<<<<<<<
 *             self.__state__.init()
 * 
 */
    goto __pyx_L3;
  }

  /* "yapic/entity/_entity.pyx":896
 *                         setattr(self, idf, poly_id[i])
 *         else:
 *             self.__state__.init()             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  /*else*/ {
    __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_11EntityState_init(__pyx_v_self->__state__); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "yapic/entity/_entity.pyx":875
 *             self.__state__ = EntityState(model)
 * 
 *     def __init__(self, data = None, **kw):             # <<<<<<<<<<<<<<
 *         cdef PolymorphMeta poly
 *         cdef EntityType model
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_poly);
  __Pyx_XDECREF((PyObject *)__pyx_v_model);
  __Pyx_XDECREF(__pyx_v_poly_id);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_idf);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":899
 * 
 *     @classmethod
 *     def __init_subclass__(cls, *, str name=None, Registry registry=None, bint _root=False, **meta):             # <<<<<<<<<<<<<<
 *         cdef EntityType ent = cls
 *         cdef EntityType parent_entity
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_5__init_subclass__(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_5__init_subclass__(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  struct __pyx_obj_5yapic_6entity_9_registry_Registry *__pyx_v_registry = 0;
  CYTHON_UNUSED int __pyx_v__root;
  PyObject *__pyx_v_meta = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_subclass__ (wrapper)", 0);
  __pyx_v_meta = PyDict_New(); if (unlikely(!__pyx_v_meta)) return NULL;
  __Pyx_GOTREF(__pyx_v_meta);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_registry_2,&__pyx_n_s_root,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject*)Py_None);
    values[1] = (PyObject *)((struct __pyx_obj_5yapic_6entity_9_registry_Registry *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      if (kw_args > 0 && (kw_args <= 3)) {
        Py_ssize_t index;
        for (index = 0; index < 3 && kw_args > 0; index++) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_meta, values, 0, "__init_subclass__") < 0)) __PYX_ERR(0, 899, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 0) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_name = ((PyObject*)values[0]);
    __pyx_v_registry = ((struct __pyx_obj_5yapic_6entity_9_registry_Registry *)values[1]);
    if (values[2]) {
      __pyx_v__root = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v__root == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 899, __pyx_L3_error)
    } else {
      __pyx_v__root = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_subclass__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 899, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_meta); __pyx_v_meta = 0;
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__init_subclass__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyUnicode_Type), 1, "name", 1))) __PYX_ERR(0, 899, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_registry), __pyx_ptype_5yapic_6entity_9_registry_Registry, 1, "registry", 0))) __PYX_ERR(0, 899, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_4__init_subclass__(((PyTypeObject*)__pyx_v_cls), __pyx_v_name, __pyx_v_registry, __pyx_v__root, __pyx_v_meta);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_meta);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_4__init_subclass__(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_name, struct __pyx_obj_5yapic_6entity_9_registry_Registry *__pyx_v_registry, CYTHON_UNUSED int __pyx_v__root, PyObject *__pyx_v_meta) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_parent_entity = 0;
  int __pyx_v_mro_length;
  PyObject *__pyx_v__registry;
  PyObject *__pyx_v_meta_dict = NULL;
  long __pyx_v_i;
  PyObject *__pyx_v_parent = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  long __pyx_t_5;
  long __pyx_t_6;
  long __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init_subclass__", 0);

  /* "yapic/entity/_entity.pyx":900
 *     @classmethod
 *     def __init_subclass__(cls, *, str name=None, Registry registry=None, bint _root=False, **meta):
 *         cdef EntityType ent = cls             # <<<<<<<<<<<<<<
 *         cdef EntityType parent_entity
 *         cdef int mro_length = len(cls.__mro__)
 */
  if (!(likely(((((PyObject *)__pyx_v_cls)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_v_cls), __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 900, __pyx_L1_error)
  __pyx_t_1 = ((PyObject *)__pyx_v_cls);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_ent = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":902
 *         cdef EntityType ent = cls
 *         cdef EntityType parent_entity
 *         cdef int mro_length = len(cls.__mro__)             # <<<<<<<<<<<<<<
 *         cdef PyObject* _registry
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_mro); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_mro_length = __pyx_t_2;

  /* "yapic/entity/_entity.pyx":905
 *         cdef PyObject* _registry
 * 
 *         if name is not None:             # <<<<<<<<<<<<<<
 *             ent.__name__ = name
 * 
 */
  __pyx_t_3 = (__pyx_v_name != ((PyObject*)Py_None));
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yapic/entity/_entity.pyx":906
 * 
 *         if name is not None:
 *             ent.__name__ = name             # <<<<<<<<<<<<<<
 * 
 *         meta_dict = {}
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_ent), __pyx_n_s_name_2, __pyx_v_name) < 0) __PYX_ERR(0, 906, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":905
 *         cdef PyObject* _registry
 * 
 *         if name is not None:             # <<<<<<<<<<<<<<
 *             ent.__name__ = name
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":908
 *             ent.__name__ = name
 * 
 *         meta_dict = {}             # <<<<<<<<<<<<<<
 *         _registry = <PyObject*>(<object>registry)
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_meta_dict = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":909
 * 
 *         meta_dict = {}
 *         _registry = <PyObject*>(<object>registry)             # <<<<<<<<<<<<<<
 * 
 *         for i in range(1, mro_length - 2):
 */
  __pyx_v__registry = ((PyObject *)((PyObject *)__pyx_v_registry));

  /* "yapic/entity/_entity.pyx":911
 *         _registry = <PyObject*>(<object>registry)
 * 
 *         for i in range(1, mro_length - 2):             # <<<<<<<<<<<<<<
 *             parent = cls.__mro__[i]
 *             if isinstance(parent, EntityType):
 */
  __pyx_t_5 = (__pyx_v_mro_length - 2);
  __pyx_t_6 = __pyx_t_5;
  for (__pyx_t_7 = 1; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
    __pyx_v_i = __pyx_t_7;

    /* "yapic/entity/_entity.pyx":912
 * 
 *         for i in range(1, mro_length - 2):
 *             parent = cls.__mro__[i]             # <<<<<<<<<<<<<<
 *             if isinstance(parent, EntityType):
 *                 parent_entity = <EntityType>parent
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_mro); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 912, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 912, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_parent, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "yapic/entity/_entity.pyx":913
 *         for i in range(1, mro_length - 2):
 *             parent = cls.__mro__[i]
 *             if isinstance(parent, EntityType):             # <<<<<<<<<<<<<<
 *                 parent_entity = <EntityType>parent
 * 
 */
    __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_parent, __pyx_ptype_5yapic_6entity_7_entity_EntityType); 
    __pyx_t_3 = (__pyx_t_4 != 0);
    if (__pyx_t_3) {

      /* "yapic/entity/_entity.pyx":914
 *             parent = cls.__mro__[i]
 *             if isinstance(parent, EntityType):
 *                 parent_entity = <EntityType>parent             # <<<<<<<<<<<<<<
 * 
 *                 if parent_entity.meta is not NULL:
 */
      __pyx_t_8 = __pyx_v_parent;
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_XDECREF_SET(__pyx_v_parent_entity, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_8));
      __pyx_t_8 = 0;

      /* "yapic/entity/_entity.pyx":916
 *                 parent_entity = <EntityType>parent
 * 
 *                 if parent_entity.meta is not NULL:             # <<<<<<<<<<<<<<
 *                     meta_dict.update(<object>parent_entity.meta)
 * 
 */
      __pyx_t_3 = ((__pyx_v_parent_entity->meta != NULL) != 0);
      if (__pyx_t_3) {

        /* "yapic/entity/_entity.pyx":917
 * 
 *                 if parent_entity.meta is not NULL:
 *                     meta_dict.update(<object>parent_entity.meta)             # <<<<<<<<<<<<<<
 * 
 *                 if _registry is <PyObject*>None:
 */
        __pyx_t_8 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_meta_dict, ((PyObject *)__pyx_v_parent_entity->meta)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 917, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "yapic/entity/_entity.pyx":916
 *                 parent_entity = <EntityType>parent
 * 
 *                 if parent_entity.meta is not NULL:             # <<<<<<<<<<<<<<
 *                     meta_dict.update(<object>parent_entity.meta)
 * 
 */
      }

      /* "yapic/entity/_entity.pyx":919
 *                     meta_dict.update(<object>parent_entity.meta)
 * 
 *                 if _registry is <PyObject*>None:             # <<<<<<<<<<<<<<
 *                     _registry = parent_entity.registry
 * 
 */
      __pyx_t_3 = ((__pyx_v__registry == ((PyObject *)Py_None)) != 0);
      if (__pyx_t_3) {

        /* "yapic/entity/_entity.pyx":920
 * 
 *                 if _registry is <PyObject*>None:
 *                     _registry = parent_entity.registry             # <<<<<<<<<<<<<<
 * 
 *         meta_dict.update(meta)
 */
        __pyx_t_9 = __pyx_v_parent_entity->registry;
        __pyx_v__registry = __pyx_t_9;

        /* "yapic/entity/_entity.pyx":919
 *                     meta_dict.update(<object>parent_entity.meta)
 * 
 *                 if _registry is <PyObject*>None:             # <<<<<<<<<<<<<<
 *                     _registry = parent_entity.registry
 * 
 */
      }

      /* "yapic/entity/_entity.pyx":913
 *         for i in range(1, mro_length - 2):
 *             parent = cls.__mro__[i]
 *             if isinstance(parent, EntityType):             # <<<<<<<<<<<<<<
 *                 parent_entity = <EntityType>parent
 * 
 */
    }
  }

  /* "yapic/entity/_entity.pyx":922
 *                     _registry = parent_entity.registry
 * 
 *         meta_dict.update(meta)             # <<<<<<<<<<<<<<
 *         meta_dict.pop("__fields__", None)
 * 
 */
  __pyx_t_8 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_meta_dict, __pyx_v_meta); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "yapic/entity/_entity.pyx":923
 * 
 *         meta_dict.update(meta)
 *         meta_dict.pop("__fields__", None)             # <<<<<<<<<<<<<<
 * 
 *         Py_XDECREF(ent.meta)
 */
  __pyx_t_8 = __Pyx_PyDict_Pop(__pyx_v_meta_dict, __pyx_n_u_fields, Py_None); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 923, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "yapic/entity/_entity.pyx":925
 *         meta_dict.pop("__fields__", None)
 * 
 *         Py_XDECREF(ent.meta)             # <<<<<<<<<<<<<<
 *         ent.meta = <PyObject*>(<object>meta_dict)
 *         Py_XINCREF(ent.meta)
 */
  Py_XDECREF(__pyx_v_ent->meta);

  /* "yapic/entity/_entity.pyx":926
 * 
 *         Py_XDECREF(ent.meta)
 *         ent.meta = <PyObject*>(<object>meta_dict)             # <<<<<<<<<<<<<<
 *         Py_XINCREF(ent.meta)
 * 
 */
  __pyx_v_ent->meta = ((PyObject *)((PyObject *)__pyx_v_meta_dict));

  /* "yapic/entity/_entity.pyx":927
 *         Py_XDECREF(ent.meta)
 *         ent.meta = <PyObject*>(<object>meta_dict)
 *         Py_XINCREF(ent.meta)             # <<<<<<<<<<<<<<
 * 
 *         Py_XDECREF(ent.registry)
 */
  Py_XINCREF(__pyx_v_ent->meta);

  /* "yapic/entity/_entity.pyx":929
 *         Py_XINCREF(ent.meta)
 * 
 *         Py_XDECREF(ent.registry)             # <<<<<<<<<<<<<<
 *         ent.registry = _registry
 *         Py_XINCREF(ent.registry)
 */
  Py_XDECREF(__pyx_v_ent->registry);

  /* "yapic/entity/_entity.pyx":930
 * 
 *         Py_XDECREF(ent.registry)
 *         ent.registry = _registry             # <<<<<<<<<<<<<<
 *         Py_XINCREF(ent.registry)
 * 
 */
  __pyx_v_ent->registry = __pyx_v__registry;

  /* "yapic/entity/_entity.pyx":931
 *         Py_XDECREF(ent.registry)
 *         ent.registry = _registry
 *         Py_XINCREF(ent.registry)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  Py_XINCREF(__pyx_v_ent->registry);

  /* "yapic/entity/_entity.pyx":899
 * 
 *     @classmethod
 *     def __init_subclass__(cls, *, str name=None, Registry registry=None, bint _root=False, **meta):             # <<<<<<<<<<<<<<
 *         cdef EntityType ent = cls
 *         cdef EntityType parent_entity
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__init_subclass__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ent);
  __Pyx_XDECREF((PyObject *)__pyx_v_parent_entity);
  __Pyx_XDECREF(__pyx_v_meta_dict);
  __Pyx_XDECREF(__pyx_v_parent);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":934
 * 
 *     @property
 *     def __pk__(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_6__pk___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_6__pk___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__pk_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__pk_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_state = 0;
  int __pyx_v_length;
  PyObject *__pyx_v_res = 0;
  int __pyx_v_has_pk;
  PyObject *__pyx_v_idx = NULL;
  PyObject *__pyx_v_val = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "yapic/entity/_entity.pyx":936
 *     def __pk__(self):
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)             # <<<<<<<<<<<<<<
 *         cdef EntityState state = self.__state__
 *         cdef int length = len(ent.__pk__)
 */
  if (!(likely(__Pyx_TypeTest(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_ptype_5yapic_6entity_7_entity_EntityType)))) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
  __pyx_v_ent = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));

  /* "yapic/entity/_entity.pyx":937
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)
 *         cdef EntityState state = self.__state__             # <<<<<<<<<<<<<<
 *         cdef int length = len(ent.__pk__)
 *         cdef tuple res = PyTuple_New(length)
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->__state__);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_state = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":938
 *         cdef EntityType ent = type(self)
 *         cdef EntityState state = self.__state__
 *         cdef int length = len(ent.__pk__)             # <<<<<<<<<<<<<<
 *         cdef tuple res = PyTuple_New(length)
 *         cdef bint has_pk = False
 */
  __pyx_t_1 = __pyx_v_ent->__pk__;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 938, __pyx_L1_error)
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_length = __pyx_t_2;

  /* "yapic/entity/_entity.pyx":939
 *         cdef EntityState state = self.__state__
 *         cdef int length = len(ent.__pk__)
 *         cdef tuple res = PyTuple_New(length)             # <<<<<<<<<<<<<<
 *         cdef bint has_pk = False
 * 
 */
  __pyx_t_1 = PyTuple_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":940
 *         cdef int length = len(ent.__pk__)
 *         cdef tuple res = PyTuple_New(length)
 *         cdef bint has_pk = False             # <<<<<<<<<<<<<<
 * 
 *         for idx, attr in enumerate(ent.__pk__):
 */
  __pyx_v_has_pk = 0;

  /* "yapic/entity/_entity.pyx":942
 *         cdef bint has_pk = False
 * 
 *         for idx, attr in enumerate(ent.__pk__):             # <<<<<<<<<<<<<<
 *             val = state.get_value(attr)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_1 = __pyx_int_0;
  __pyx_t_3 = __pyx_v_ent->__pk__; __Pyx_INCREF(__pyx_t_3); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 942, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_4));
    __pyx_t_4 = 0;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_idx, __pyx_t_1);
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "yapic/entity/_entity.pyx":943
 * 
 *         for idx, attr in enumerate(ent.__pk__):
 *             val = state.get_value(attr)             # <<<<<<<<<<<<<<
 * 
 *             if val is NOTSET:
 */
    __pyx_t_4 = __pyx_f_5yapic_6entity_7_entity_11EntityState_get_value(__pyx_v_state, __pyx_v_attr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 943, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF_SET(__pyx_v_val, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "yapic/entity/_entity.pyx":945
 *             val = state.get_value(attr)
 * 
 *             if val is NOTSET:             # <<<<<<<<<<<<<<
 *                 Py_INCREF(<object>None)
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>None)
 */
    __pyx_t_5 = (__pyx_v_val == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_t_6 = (__pyx_t_5 != 0);
    if (__pyx_t_6) {

      /* "yapic/entity/_entity.pyx":946
 * 
 *             if val is NOTSET:
 *                 Py_INCREF(<object>None)             # <<<<<<<<<<<<<<
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>None)
 *             else:
 */
      Py_INCREF(Py_None);

      /* "yapic/entity/_entity.pyx":947
 *             if val is NOTSET:
 *                 Py_INCREF(<object>None)
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>None)             # <<<<<<<<<<<<<<
 *             else:
 *                 has_pk = True
 */
      __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_idx); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L1_error)
      PyTuple_SET_ITEM(__pyx_v_res, __pyx_t_7, Py_None);

      /* "yapic/entity/_entity.pyx":945
 *             val = state.get_value(attr)
 * 
 *             if val is NOTSET:             # <<<<<<<<<<<<<<
 *                 Py_INCREF(<object>None)
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>None)
 */
      goto __pyx_L5;
    }

    /* "yapic/entity/_entity.pyx":949
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>None)
 *             else:
 *                 has_pk = True             # <<<<<<<<<<<<<<
 *                 Py_INCREF(<object>val)
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>val)
 */
    /*else*/ {
      __pyx_v_has_pk = 1;

      /* "yapic/entity/_entity.pyx":950
 *             else:
 *                 has_pk = True
 *                 Py_INCREF(<object>val)             # <<<<<<<<<<<<<<
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>val)
 * 
 */
      Py_INCREF(__pyx_v_val);

      /* "yapic/entity/_entity.pyx":951
 *                 has_pk = True
 *                 Py_INCREF(<object>val)
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>val)             # <<<<<<<<<<<<<<
 * 
 *         if has_pk:
 */
      __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_idx); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 951, __pyx_L1_error)
      PyTuple_SET_ITEM(__pyx_v_res, __pyx_t_7, __pyx_v_val);
    }
    __pyx_L5:;

    /* "yapic/entity/_entity.pyx":942
 *         cdef bint has_pk = False
 * 
 *         for idx, attr in enumerate(ent.__pk__):             # <<<<<<<<<<<<<<
 *             val = state.get_value(attr)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":953
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>val)
 * 
 *         if has_pk:             # <<<<<<<<<<<<<<
 *             return res
 *         else:
 */
  __pyx_t_6 = (__pyx_v_has_pk != 0);
  if (__pyx_t_6) {

    /* "yapic/entity/_entity.pyx":954
 * 
 *         if has_pk:
 *             return res             # <<<<<<<<<<<<<<
 *         else:
 *             return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_res);
    __pyx_r = __pyx_v_res;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":953
 *                 PyTuple_SET_ITEM(<object>res, idx, <object>val)
 * 
 *         if has_pk:             # <<<<<<<<<<<<<<
 *             return res
 *         else:
 */
  }

  /* "yapic/entity/_entity.pyx":956
 *             return res
 *         else:
 *             return ()             # <<<<<<<<<<<<<<
 * 
 *     @__pk__.setter
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":934
 * 
 *     @property
 *     def __pk__(self):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__pk__.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF((PyObject *)__pyx_v_ent);
  __Pyx_XDECREF((PyObject *)__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_XDECREF(__pyx_v_val);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":959
 * 
 *     @__pk__.setter
 *     def __pk__(self, val):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_6__pk___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_6__pk___3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__pk___2__set__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__pk___2__set__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_val) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_v_state = 0;
  PyObject *__pyx_v_pk = 0;
  PyObject *__pyx_v_i = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "yapic/entity/_entity.pyx":961
 *     def __pk__(self, val):
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)             # <<<<<<<<<<<<<<
 *         cdef EntityState state = self.__state__
 *         cdef tuple pk = (<tuple>val) if isinstance(val, tuple) else (val,)
 */
  if (!(likely(__Pyx_TypeTest(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_ptype_5yapic_6entity_7_entity_EntityType)))) __PYX_ERR(0, 961, __pyx_L1_error)
  __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
  __pyx_v_ent = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));

  /* "yapic/entity/_entity.pyx":962
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)
 *         cdef EntityState state = self.__state__             # <<<<<<<<<<<<<<
 *         cdef tuple pk = (<tuple>val) if isinstance(val, tuple) else (val,)
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->__state__);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_state = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":963
 *         cdef EntityType ent = type(self)
 *         cdef EntityState state = self.__state__
 *         cdef tuple pk = (<tuple>val) if isinstance(val, tuple) else (val,)             # <<<<<<<<<<<<<<
 * 
 *         for i, attr in enumerate(ent.__pk__):
 */
  __pyx_t_2 = PyTuple_Check(__pyx_v_val); 
  if ((__pyx_t_2 != 0)) {
    __Pyx_INCREF(((PyObject*)__pyx_v_val));
    __pyx_t_1 = __pyx_v_val;
  } else {
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_val);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __pyx_v_pk = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":965
 *         cdef tuple pk = (<tuple>val) if isinstance(val, tuple) else (val,)
 * 
 *         for i, attr in enumerate(ent.__pk__):             # <<<<<<<<<<<<<<
 *             state.set_value(attr, pk[i])
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_1 = __pyx_int_0;
  __pyx_t_3 = __pyx_v_ent->__pk__; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
  for (;;) {
    if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_5); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 965, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_5));
    __pyx_t_5 = 0;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":966
 * 
 *         for i, attr in enumerate(ent.__pk__):
 *             state.set_value(attr, pk[i])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    if (unlikely(__pyx_v_pk == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 966, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_pk, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __pyx_f_5yapic_6entity_7_entity_11EntityState_set_value(__pyx_v_state, __pyx_v_attr, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":965
 *         cdef tuple pk = (<tuple>val) if isinstance(val, tuple) else (val,)
 * 
 *         for i, attr in enumerate(ent.__pk__):             # <<<<<<<<<<<<<<
 *             state.set_value(attr, pk[i])
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":959
 * 
 *     @__pk__.setter
 *     def __pk__(self, val):             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef EntityType ent = type(self)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__pk__.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF((PyObject *)__pyx_v_ent);
  __Pyx_XDECREF((PyObject *)__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_pk);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":969
 * 
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash(type(self).__qname__) ^ hash(self.__pk__)
 * 
 */

/* Python wrapper */
static Py_hash_t __pyx_pw_5yapic_6entity_7_entity_10EntityBase_7__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_5yapic_6entity_7_entity_10EntityBase_7__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__hash__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_hash_t __pyx_pf_5yapic_6entity_7_entity_10EntityBase_6__hash__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_hash_t __pyx_t_2;
  Py_hash_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "yapic/entity/_entity.pyx":970
 * 
 *     def __hash__(self):
 *         return hash(type(self).__qname__) ^ hash(self.__pk__)             # <<<<<<<<<<<<<<
 * 
 *     def __eq__(self, other):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_qname); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Hash(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_hash_t)-1))) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pk); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_Hash(__pyx_t_1); if (unlikely(__pyx_t_3 == ((Py_hash_t)-1))) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = (__pyx_t_2 ^ __pyx_t_3);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":969
 * 
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return hash(type(self).__qname__) ^ hash(self.__pk__)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":972
 *         return hash(type(self).__qname__) ^ hash(self.__pk__)
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return isinstance(other, EntityBase) and self.__pk__ == other.__pk__
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_9__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_9__eq__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__eq__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_8__eq__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_8__eq__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__eq__", 0);

  /* "yapic/entity/_entity.pyx":973
 * 
 *     def __eq__(self, other):
 *         return isinstance(other, EntityBase) and self.__pk__ == other.__pk__             # <<<<<<<<<<<<<<
 * 
 *     def __ne__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5yapic_6entity_7_entity_EntityBase); 
  if (__pyx_t_2) {
  } else {
    __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 973, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pk); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_pk); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 973, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_t_5);
  __pyx_t_1 = __pyx_t_5;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":972
 *         return hash(type(self).__qname__) ^ hash(self.__pk__)
 * 
 *     def __eq__(self, other):             # <<<<<<<<<<<<<<
 *         return isinstance(other, EntityBase) and self.__pk__ == other.__pk__
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__eq__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":975
 *         return isinstance(other, EntityBase) and self.__pk__ == other.__pk__
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return not isinstance(other, EntityBase) or self.__pk__ != other.__pk__
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_11__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_11__ne__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__ne__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_10__ne__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_10__ne__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__ne__", 0);

  /* "yapic/entity/_entity.pyx":976
 * 
 *     def __ne__(self, other):
 *         return not isinstance(other, EntityBase) or self.__pk__ != other.__pk__             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5yapic_6entity_7_entity_EntityBase); 
  __pyx_t_3 = (!(__pyx_t_2 != 0));
  if (!__pyx_t_3) {
  } else {
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pk); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_pk); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_4, __pyx_t_5, Py_NE); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 976, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_t_6);
  __pyx_t_1 = __pyx_t_6;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":975
 *         return isinstance(other, EntityBase) and self.__pk__ == other.__pk__
 * 
 *     def __ne__(self, other):             # <<<<<<<<<<<<<<
 *         return not isinstance(other, EntityBase) or self.__pk__ != other.__pk__
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__ne__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":978
 *         return not isinstance(other, EntityBase) or self.__pk__ != other.__pk__
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.iter_index = 0
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_13__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_13__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_12__iter__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_12__iter__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__", 0);

  /* "yapic/entity/_entity.pyx":979
 * 
 *     def __iter__(self):
 *         self.iter_index = 0             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_v_self->iter_index = 0;

  /* "yapic/entity/_entity.pyx":980
 *     def __iter__(self):
 *         self.iter_index = 0
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":978
 *         return not isinstance(other, EntityBase) or self.__pk__ != other.__pk__
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.iter_index = 0
 *         return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":982
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef EntityType ent = type(self)
 *         cdef EntityAttribute attr
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_15__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_15__next__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__next__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_14__next__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_14__next__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent = 0;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  int __pyx_v_idx;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__next__", 0);

  /* "yapic/entity/_entity.pyx":983
 * 
 *     def __next__(self):
 *         cdef EntityType ent = type(self)             # <<<<<<<<<<<<<<
 *         cdef EntityAttribute attr
 *         cdef int idx = self.iter_index
 */
  if (!(likely(__Pyx_TypeTest(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_ptype_5yapic_6entity_7_entity_EntityType)))) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
  __pyx_v_ent = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));

  /* "yapic/entity/_entity.pyx":985
 *         cdef EntityType ent = type(self)
 *         cdef EntityAttribute attr
 *         cdef int idx = self.iter_index             # <<<<<<<<<<<<<<
 * 
 *         if idx < len(ent.__attrs__):
 */
  __pyx_t_1 = __pyx_v_self->iter_index;
  __pyx_v_idx = __pyx_t_1;

  /* "yapic/entity/_entity.pyx":987
 *         cdef int idx = self.iter_index
 * 
 *         if idx < len(ent.__attrs__):             # <<<<<<<<<<<<<<
 *             self.iter_index += 1
 * 
 */
  __pyx_t_2 = __pyx_v_ent->__attrs__;
  __Pyx_INCREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 987, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 987, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((__pyx_v_idx < __pyx_t_3) != 0);
  if (likely(__pyx_t_4)) {

    /* "yapic/entity/_entity.pyx":988
 * 
 *         if idx < len(ent.__attrs__):
 *             self.iter_index += 1             # <<<<<<<<<<<<<<
 * 
 *             attr = <EntityAttribute>(<tuple>(ent.__attrs__)[idx])
 */
    __pyx_v_self->iter_index = (__pyx_v_self->iter_index + 1);

    /* "yapic/entity/_entity.pyx":990
 *             self.iter_index += 1
 * 
 *             attr = <EntityAttribute>(<tuple>(ent.__attrs__)[idx])             # <<<<<<<<<<<<<<
 *             if attr._key_ is None:
 *                 return self.__next__()
 */
    if (unlikely(__pyx_v_ent->__attrs__ == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 990, __pyx_L1_error)
    }
    __pyx_t_2 = PyTuple_GET_ITEM(__pyx_v_ent->__attrs__, __pyx_v_idx);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v_attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "yapic/entity/_entity.pyx":991
 * 
 *             attr = <EntityAttribute>(<tuple>(ent.__attrs__)[idx])
 *             if attr._key_ is None:             # <<<<<<<<<<<<<<
 *                 return self.__next__()
 * 
 */
    __pyx_t_4 = (__pyx_v_attr->_key_ == ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_4 != 0);
    if (__pyx_t_5) {

      /* "yapic/entity/_entity.pyx":992
 *             attr = <EntityAttribute>(<tuple>(ent.__attrs__)[idx])
 *             if attr._key_ is None:
 *                 return self.__next__()             # <<<<<<<<<<<<<<
 * 
 *             value = getattr(self, attr._key_)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_next); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 992, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 992, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":991
 * 
 *             attr = <EntityAttribute>(<tuple>(ent.__attrs__)[idx])
 *             if attr._key_ is None:             # <<<<<<<<<<<<<<
 *                 return self.__next__()
 * 
 */
    }

    /* "yapic/entity/_entity.pyx":994
 *                 return self.__next__()
 * 
 *             value = getattr(self, attr._key_)             # <<<<<<<<<<<<<<
 *             # value = self.__state__.get_value(attr)
 * 
 */
    __pyx_t_2 = __pyx_v_attr->_key_;
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_GetAttr(((PyObject *)__pyx_v_self), __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 994, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_value = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":997
 *             # value = self.__state__.get_value(attr)
 * 
 *             if value is NOTSET:             # <<<<<<<<<<<<<<
 *                 return self.__next__()
 *             else:
 */
    __pyx_t_5 = (__pyx_v_value == ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_NOTSET));
    __pyx_t_4 = (__pyx_t_5 != 0);
    if (__pyx_t_4) {

      /* "yapic/entity/_entity.pyx":998
 * 
 *             if value is NOTSET:
 *                 return self.__next__()             # <<<<<<<<<<<<<<
 *             else:
 *                 return (attr, value)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_next); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 998, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 998, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_6;
      __pyx_t_6 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":997
 *             # value = self.__state__.get_value(attr)
 * 
 *             if value is NOTSET:             # <<<<<<<<<<<<<<
 *                 return self.__next__()
 *             else:
 */
    }

    /* "yapic/entity/_entity.pyx":1000
 *                 return self.__next__()
 *             else:
 *                 return (attr, value)             # <<<<<<<<<<<<<<
 *         else:
 *             raise StopIteration()
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1000, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(((PyObject *)__pyx_v_attr));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_attr));
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_attr));
      __Pyx_INCREF(__pyx_v_value);
      __Pyx_GIVEREF(__pyx_v_value);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_value);
      __pyx_r = __pyx_t_6;
      __pyx_t_6 = 0;
      goto __pyx_L0;
    }

    /* "yapic/entity/_entity.pyx":987
 *         cdef int idx = self.iter_index
 * 
 *         if idx < len(ent.__attrs__):             # <<<<<<<<<<<<<<
 *             self.iter_index += 1
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":1002
 *                 return (attr, value)
 *         else:
 *             raise StopIteration()             # <<<<<<<<<<<<<<
 * 
 *     def __json__(self):
 */
  /*else*/ {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_builtin_StopIteration); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(0, 1002, __pyx_L1_error)
  }

  /* "yapic/entity/_entity.pyx":982
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef EntityType ent = type(self)
 *         cdef EntityAttribute attr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__next__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ent);
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1004
 *             raise StopIteration()
 * 
 *     def __json__(self):             # <<<<<<<<<<<<<<
 *         ctx = SerializerCtx()
 *         return EntitySerializer(self, ctx)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_17__json__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_17__json__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__json__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_16__json__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_16__json__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  PyObject *__pyx_v_ctx = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__json__", 0);

  /* "yapic/entity/_entity.pyx":1005
 * 
 *     def __json__(self):
 *         ctx = SerializerCtx()             # <<<<<<<<<<<<<<
 *         return EntitySerializer(self, ctx)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SerializerCtx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1005, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1005, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_ctx = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1006
 *     def __json__(self):
 *         ctx = SerializerCtx()
 *         return EntitySerializer(self, ctx)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, key):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_EntitySerializer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1006, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_v_self), __pyx_v_ctx};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_v_self), __pyx_v_ctx};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 2+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, ((PyObject *)__pyx_v_self));
    __Pyx_INCREF(__pyx_v_ctx);
    __Pyx_GIVEREF(__pyx_v_ctx);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_ctx);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1004
 *             raise StopIteration()
 * 
 *     def __json__(self):             # <<<<<<<<<<<<<<
 *         ctx = SerializerCtx()
 *         return EntitySerializer(self, ctx)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__json__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctx);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1008
 *         return EntitySerializer(self, ctx)
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance(key, str):
 *             return getattr(self, key)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_19__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_19__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_18__getitem__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), ((PyObject *)__pyx_v_key));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_18__getitem__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "yapic/entity/_entity.pyx":1009
 * 
 *     def __getitem__(self, key):
 *         if isinstance(key, str):             # <<<<<<<<<<<<<<
 *             return getattr(self, key)
 *         elif isinstance(key, int):
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":1010
 *     def __getitem__(self, key):
 *         if isinstance(key, str):
 *             return getattr(self, key)             # <<<<<<<<<<<<<<
 *         elif isinstance(key, int):
 *             return getattr(self, type(self).__fields__[key]._key_)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_GetAttr(((PyObject *)__pyx_v_self), __pyx_v_key); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1010, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":1009
 * 
 *     def __getitem__(self, key):
 *         if isinstance(key, str):             # <<<<<<<<<<<<<<
 *             return getattr(self, key)
 *         elif isinstance(key, int):
 */
  }

  /* "yapic/entity/_entity.pyx":1011
 *         if isinstance(key, str):
 *             return getattr(self, key)
 *         elif isinstance(key, int):             # <<<<<<<<<<<<<<
 *             return getattr(self, type(self).__fields__[key]._key_)
 *         else:
 */
  __pyx_t_2 = PyInt_Check(__pyx_v_key); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (likely(__pyx_t_1)) {

    /* "yapic/entity/_entity.pyx":1012
 *             return getattr(self, key)
 *         elif isinstance(key, int):
 *             return getattr(self, type(self).__fields__[key]._key_)             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Unsupported key type: %r" % type(key))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_fields); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_v_key); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_key_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetAttr(((PyObject *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":1011
 *         if isinstance(key, str):
 *             return getattr(self, key)
 *         elif isinstance(key, int):             # <<<<<<<<<<<<<<
 *             return getattr(self, type(self).__fields__[key]._key_)
 *         else:
 */
  }

  /* "yapic/entity/_entity.pyx":1014
 *             return getattr(self, type(self).__fields__[key]._key_)
 *         else:
 *             raise TypeError("Unsupported key type: %r" % type(key))             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, key, value):
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Unsupported_key_type_r, ((PyObject *)Py_TYPE(__pyx_v_key))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1014, __pyx_L1_error)
  }

  /* "yapic/entity/_entity.pyx":1008
 *         return EntitySerializer(self, ctx)
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<<
 *         if isinstance(key, str):
 *             return getattr(self, key)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1016
 *             raise TypeError("Unsupported key type: %r" % type(key))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance(key, str):
 *             setattr(self, key, value)
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_21__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_10EntityBase_21__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_20__setitem__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), ((PyObject *)__pyx_v_key), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_10EntityBase_20__setitem__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "yapic/entity/_entity.pyx":1017
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance(key, str):             # <<<<<<<<<<<<<<
 *             setattr(self, key, value)
 *         elif isinstance(key, int):
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_key); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":1018
 *     def __setitem__(self, key, value):
 *         if isinstance(key, str):
 *             setattr(self, key, value)             # <<<<<<<<<<<<<<
 *         elif isinstance(key, int):
 *             setattr(self, type(self).__fields__[key]._key_, value)
 */
    __pyx_t_3 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_v_key, __pyx_v_value); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 1018, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":1017
 * 
 *     def __setitem__(self, key, value):
 *         if isinstance(key, str):             # <<<<<<<<<<<<<<
 *             setattr(self, key, value)
 *         elif isinstance(key, int):
 */
    goto __pyx_L3;
  }

  /* "yapic/entity/_entity.pyx":1019
 *         if isinstance(key, str):
 *             setattr(self, key, value)
 *         elif isinstance(key, int):             # <<<<<<<<<<<<<<
 *             setattr(self, type(self).__fields__[key]._key_, value)
 *         else:
 */
  __pyx_t_2 = PyInt_Check(__pyx_v_key); 
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (likely(__pyx_t_1)) {

    /* "yapic/entity/_entity.pyx":1020
 *             setattr(self, key, value)
 *         elif isinstance(key, int):
 *             setattr(self, type(self).__fields__[key]._key_, value)             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError("Unsupported key type: %r" % type(key))
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_fields); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1020, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_v_key); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1020, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_key_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1020, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_3 = PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_t_4, __pyx_v_value); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 1020, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yapic/entity/_entity.pyx":1019
 *         if isinstance(key, str):
 *             setattr(self, key, value)
 *         elif isinstance(key, int):             # <<<<<<<<<<<<<<
 *             setattr(self, type(self).__fields__[key]._key_, value)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "yapic/entity/_entity.pyx":1022
 *             setattr(self, type(self).__fields__[key]._key_, value)
 *         else:
 *             raise TypeError("Unsupported key type: %r" % type(key))             # <<<<<<<<<<<<<<
 * 
 *     def serialize(self, ctx=None):
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Unsupported_key_type_r, ((PyObject *)Py_TYPE(__pyx_v_key))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1022, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1022, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_ERR(0, 1022, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "yapic/entity/_entity.pyx":1016
 *             raise TypeError("Unsupported key type: %r" % type(key))
 * 
 *     def __setitem__(self, key, value):             # <<<<<<<<<<<<<<
 *         if isinstance(key, str):
 *             setattr(self, key, value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1024
 *             raise TypeError("Unsupported key type: %r" % type(key))
 * 
 *     def serialize(self, ctx=None):             # <<<<<<<<<<<<<<
 *         if ctx is None:
 *             ctx = SerializerCtx()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_23serialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_23serialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ctx = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("serialize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ctx,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ctx);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "serialize") < 0)) __PYX_ERR(0, 1024, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ctx = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("serialize", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1024, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.serialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_22serialize(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self), __pyx_v_ctx);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_22serialize(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self, PyObject *__pyx_v_ctx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("serialize", 0);
  __Pyx_INCREF(__pyx_v_ctx);

  /* "yapic/entity/_entity.pyx":1025
 * 
 *     def serialize(self, ctx=None):
 *         if ctx is None:             # <<<<<<<<<<<<<<
 *             ctx = SerializerCtx()
 *         return EntitySerializer(self, ctx)
 */
  __pyx_t_1 = (__pyx_v_ctx == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":1026
 *     def serialize(self, ctx=None):
 *         if ctx is None:
 *             ctx = SerializerCtx()             # <<<<<<<<<<<<<<
 *         return EntitySerializer(self, ctx)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_SerializerCtx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_ctx, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":1025
 * 
 *     def serialize(self, ctx=None):
 *         if ctx is None:             # <<<<<<<<<<<<<<
 *             ctx = SerializerCtx()
 *         return EntitySerializer(self, ctx)
 */
  }

  /* "yapic/entity/_entity.pyx":1027
 *         if ctx is None:
 *             ctx = SerializerCtx()
 *         return EntitySerializer(self, ctx)             # <<<<<<<<<<<<<<
 * 
 *     def as_dict(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_EntitySerializer); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, ((PyObject *)__pyx_v_self), __pyx_v_ctx};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1027, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, ((PyObject *)__pyx_v_self), __pyx_v_ctx};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1027, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_3);
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1027, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, ((PyObject *)__pyx_v_self));
    __Pyx_INCREF(__pyx_v_ctx);
    __Pyx_GIVEREF(__pyx_v_ctx);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v_ctx);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1027, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1024
 *             raise TypeError("Unsupported key type: %r" % type(key))
 * 
 *     def serialize(self, ctx=None):             # <<<<<<<<<<<<<<
 *         if ctx is None:
 *             ctx = SerializerCtx()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.serialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctx);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1029
 *         return EntitySerializer(self, ctx)
 * 
 *     def as_dict(self):             # <<<<<<<<<<<<<<
 *         cdef dict res = {}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_25as_dict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_25as_dict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_dict (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_24as_dict(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_24as_dict(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  PyObject *__pyx_v_res = 0;
  PyObject *__pyx_v_attr = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_7genexpr__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("as_dict", 0);

  /* "yapic/entity/_entity.pyx":1030
 * 
 *     def as_dict(self):
 *         cdef dict res = {}             # <<<<<<<<<<<<<<
 * 
 *         for attr, value in self:
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1032
 *         cdef dict res = {}
 * 
 *         for attr, value in self:             # <<<<<<<<<<<<<<
 *             if isinstance(value, EntityBase):
 *                 res[attr._key_] = value.as_dict()
 */
  if (likely(PyList_CheckExact(((PyObject *)__pyx_v_self))) || PyTuple_CheckExact(((PyObject *)__pyx_v_self))) {
    __pyx_t_1 = ((PyObject *)__pyx_v_self); __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1032, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1032, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1032, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1032, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1032, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1032, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1032, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1032, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1032, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1032, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1032, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) __PYX_ERR(0, 1032, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1032, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_attr, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":1033
 * 
 *         for attr, value in self:
 *             if isinstance(value, EntityBase):             # <<<<<<<<<<<<<<
 *                 res[attr._key_] = value.as_dict()
 *             elif isinstance(value, list):
 */
    __pyx_t_9 = __Pyx_TypeCheck(__pyx_v_value, __pyx_ptype_5yapic_6entity_7_entity_EntityBase); 
    __pyx_t_10 = (__pyx_t_9 != 0);
    if (__pyx_t_10) {

      /* "yapic/entity/_entity.pyx":1034
 *         for attr, value in self:
 *             if isinstance(value, EntityBase):
 *                 res[attr._key_] = value.as_dict()             # <<<<<<<<<<<<<<
 *             elif isinstance(value, list):
 *                 res[attr._key_] = [v.as_dict() for v in value]
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_as_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_attr, __pyx_n_s_key_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(PyDict_SetItem(__pyx_v_res, __pyx_t_6, __pyx_t_4) < 0)) __PYX_ERR(0, 1034, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "yapic/entity/_entity.pyx":1033
 * 
 *         for attr, value in self:
 *             if isinstance(value, EntityBase):             # <<<<<<<<<<<<<<
 *                 res[attr._key_] = value.as_dict()
 *             elif isinstance(value, list):
 */
      goto __pyx_L7;
    }

    /* "yapic/entity/_entity.pyx":1035
 *             if isinstance(value, EntityBase):
 *                 res[attr._key_] = value.as_dict()
 *             elif isinstance(value, list):             # <<<<<<<<<<<<<<
 *                 res[attr._key_] = [v.as_dict() for v in value]
 *             else:
 */
    __pyx_t_10 = PyList_Check(__pyx_v_value); 
    __pyx_t_9 = (__pyx_t_10 != 0);
    if (__pyx_t_9) {

      /* "yapic/entity/_entity.pyx":1036
 *                 res[attr._key_] = value.as_dict()
 *             elif isinstance(value, list):
 *                 res[attr._key_] = [v.as_dict() for v in value]             # <<<<<<<<<<<<<<
 *             else:
 *                 res[attr._key_] = value
 */
      { /* enter inner scope */
        __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1036, __pyx_L10_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (likely(PyList_CheckExact(__pyx_v_value)) || PyTuple_CheckExact(__pyx_v_value)) {
          __pyx_t_6 = __pyx_v_value; __Pyx_INCREF(__pyx_t_6); __pyx_t_11 = 0;
          __pyx_t_12 = NULL;
        } else {
          __pyx_t_11 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v_value); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1036, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_12 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1036, __pyx_L10_error)
        }
        for (;;) {
          if (likely(!__pyx_t_12)) {
            if (likely(PyList_CheckExact(__pyx_t_6))) {
              if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_6)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_11); __Pyx_INCREF(__pyx_t_5); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1036, __pyx_L10_error)
              #else
              __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1036, __pyx_L10_error)
              __Pyx_GOTREF(__pyx_t_5);
              #endif
            } else {
              if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_11); __Pyx_INCREF(__pyx_t_5); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1036, __pyx_L10_error)
              #else
              __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1036, __pyx_L10_error)
              __Pyx_GOTREF(__pyx_t_5);
              #endif
            }
          } else {
            __pyx_t_5 = __pyx_t_12(__pyx_t_6);
            if (unlikely(!__pyx_t_5)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 1036, __pyx_L10_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_5);
          }
          __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_v, __pyx_t_5);
          __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_7genexpr__pyx_v_v, __pyx_n_s_as_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1036, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_13) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1036, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1036, __pyx_L10_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_7genexpr__pyx_v_v); __pyx_7genexpr__pyx_v_v = 0;
        goto __pyx_L13_exit_scope;
        __pyx_L10_error:;
        __Pyx_XDECREF(__pyx_7genexpr__pyx_v_v); __pyx_7genexpr__pyx_v_v = 0;
        goto __pyx_L1_error;
        __pyx_L13_exit_scope:;
      } /* exit inner scope */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_attr, __pyx_n_s_key_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1036, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(PyDict_SetItem(__pyx_v_res, __pyx_t_6, __pyx_t_4) < 0)) __PYX_ERR(0, 1036, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "yapic/entity/_entity.pyx":1035
 *             if isinstance(value, EntityBase):
 *                 res[attr._key_] = value.as_dict()
 *             elif isinstance(value, list):             # <<<<<<<<<<<<<<
 *                 res[attr._key_] = [v.as_dict() for v in value]
 *             else:
 */
      goto __pyx_L7;
    }

    /* "yapic/entity/_entity.pyx":1038
 *                 res[attr._key_] = [v.as_dict() for v in value]
 *             else:
 *                 res[attr._key_] = value             # <<<<<<<<<<<<<<
 * 
 *         return res
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_attr, __pyx_n_s_key_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1038, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(PyDict_SetItem(__pyx_v_res, __pyx_t_4, __pyx_v_value) < 0)) __PYX_ERR(0, 1038, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_L7:;

    /* "yapic/entity/_entity.pyx":1032
 *         cdef dict res = {}
 * 
 *         for attr, value in self:             # <<<<<<<<<<<<<<
 *             if isinstance(value, EntityBase):
 *                 res[attr._key_] = value.as_dict()
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1040
 *                 res[attr._key_] = value
 * 
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1029
 *         return EntitySerializer(self, ctx)
 * 
 *     def as_dict(self):             # <<<<<<<<<<<<<<
 *         cdef dict res = {}
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.as_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_attr);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1042
 *         return res
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         is_type = (type(self).__meta__.get("is_type", False))
 *         if is_type is True:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_27__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_27__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_26__repr__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_26__repr__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  PyObject *__pyx_v_is_type = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "yapic/entity/_entity.pyx":1043
 * 
 *     def __repr__(self):
 *         is_type = (type(self).__meta__.get("is_type", False))             # <<<<<<<<<<<<<<
 *         if is_type is True:
 *             return "<%s %r>" % (type(self).__qname__, self.as_dict())
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_meta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_is_type = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1044
 *     def __repr__(self):
 *         is_type = (type(self).__meta__.get("is_type", False))
 *         if is_type is True:             # <<<<<<<<<<<<<<
 *             return "<%s %r>" % (type(self).__qname__, self.as_dict())
 *         else:
 */
  __pyx_t_3 = (__pyx_v_is_type == Py_True);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yapic/entity/_entity.pyx":1045
 *         is_type = (type(self).__meta__.get("is_type", False))
 *         if is_type is True:
 *             return "<%s %r>" % (type(self).__qname__, self.as_dict())             # <<<<<<<<<<<<<<
 *         else:
 *             return "<%s %r>" % (type(self).__qname__, self.__pk__)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyTuple_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = 0;
    __pyx_t_6 = 127;
    __Pyx_INCREF(__pyx_kp_u__17);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__17);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u__17);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_qname); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_2), __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_kp_u__18);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__18);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__18);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_as_dict); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Repr(__pyx_t_7), __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_kp_u__5);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__5);
    PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_kp_u__5);
    __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_1, 5, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "yapic/entity/_entity.pyx":1044
 *     def __repr__(self):
 *         is_type = (type(self).__meta__.get("is_type", False))
 *         if is_type is True:             # <<<<<<<<<<<<<<
 *             return "<%s %r>" % (type(self).__qname__, self.as_dict())
 *         else:
 */
  }

  /* "yapic/entity/_entity.pyx":1047
 *             return "<%s %r>" % (type(self).__qname__, self.as_dict())
 *         else:
 *             return "<%s %r>" % (type(self).__qname__, self.__pk__)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyTuple_New(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = 0;
    __pyx_t_6 = 127;
    __Pyx_INCREF(__pyx_kp_u__17);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__17);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u__17);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_qname); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_1), __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_kp_u__18);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__18);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u__18);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pk); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Repr(__pyx_t_7), __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_6;
    __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_kp_u__5);
    __pyx_t_5 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__5);
    PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u__5);
    __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_2, 5, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "yapic/entity/_entity.pyx":1042
 *         return res
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         is_type = (type(self).__meta__.get("is_type", False))
 *         if is_type is True:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.EntityBase.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_is_type);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":35
 * 
 * cdef class EntityBase:
 *     cdef readonly EntityState __state__             # <<<<<<<<<<<<<<
 *     cdef int iter_index
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_9__state___1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_10EntityBase_9__state___1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_10EntityBase_9__state_____get__(((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_10EntityBase_9__state_____get__(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__state__));
  __pyx_r = ((PyObject *)__pyx_v_self->__state__);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1056
 * @cython.final
 * cdef class DependencyList:
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.items = []
 *         self.circular = {}
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_14DependencyList_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_14DependencyList_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_14DependencyList___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_14DependencyList___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":1057
 * cdef class DependencyList:
 *     def __cinit__(self):
 *         self.items = []             # <<<<<<<<<<<<<<
 *         self.circular = {}
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1058
 *     def __cinit__(self):
 *         self.items = []
 *         self.circular = {}             # <<<<<<<<<<<<<<
 * 
 *     cpdef add(self, EntityType item):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->circular);
  __Pyx_DECREF(__pyx_v_self->circular);
  __pyx_v_self->circular = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1056
 * @cython.final
 * cdef class DependencyList:
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.items = []
 *         self.circular = {}
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1060
 *         self.circular = {}
 * 
 *     cpdef add(self, EntityType item):             # <<<<<<<<<<<<<<
 *         cdef set cd = set()
 *         cd.add(item)
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_14DependencyList_3add(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList_add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_v_cd = 0;
  PyObject *__pyx_v_dep = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add", 0);

  /* "yapic/entity/_entity.pyx":1061
 * 
 *     cpdef add(self, EntityType item):
 *         cdef set cd = set()             # <<<<<<<<<<<<<<
 *         cd.add(item)
 * 
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_cd = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1062
 *     cpdef add(self, EntityType item):
 *         cdef set cd = set()
 *         cd.add(item)             # <<<<<<<<<<<<<<
 * 
 *         if item not in self:
 */
  __pyx_t_2 = PySet_Add(__pyx_v_cd, ((PyObject *)__pyx_v_item)); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 1062, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":1064
 *         cd.add(item)
 * 
 *         if item not in self:             # <<<<<<<<<<<<<<
 *             self.items.append(item)
 * 
 */
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(((PyObject *)__pyx_v_item), ((PyObject *)__pyx_v_self), Py_NE)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1064, __pyx_L1_error)
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yapic/entity/_entity.pyx":1065
 * 
 *         if item not in self:
 *             self.items.append(item)             # <<<<<<<<<<<<<<
 * 
 *         for dep in sorted(item.__deps__, key=attrgetter("__name__")):
 */
    if (unlikely(__pyx_v_self->items == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 1065, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyList_Append(__pyx_v_self->items, ((PyObject *)__pyx_v_item)); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 1065, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":1064
 *         cd.add(item)
 * 
 *         if item not in self:             # <<<<<<<<<<<<<<
 *             self.items.append(item)
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":1067
 *             self.items.append(item)
 * 
 *         for dep in sorted(item.__deps__, key=attrgetter("__name__")):             # <<<<<<<<<<<<<<
 *             self._add(item, dep, cd)
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_item->__deps__);
  __Pyx_GIVEREF(__pyx_v_item->__deps__);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_item->__deps__);
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_attrgetter); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_n_u_name_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_n_u_name_2);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_key, __pyx_t_6) < 0) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
    __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1067, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_5))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1067, __pyx_L1_error)
        #else
        __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1067, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1067, __pyx_L1_error)
        #else
        __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1067, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        #endif
      }
    } else {
      __pyx_t_6 = __pyx_t_10(__pyx_t_5);
      if (unlikely(!__pyx_t_6)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1067, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_6);
    }
    __Pyx_XDECREF_SET(__pyx_v_dep, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":1068
 * 
 *         for dep in sorted(item.__deps__, key=attrgetter("__name__")):
 *             self._add(item, dep, cd)             # <<<<<<<<<<<<<<
 * 
 *     cpdef index(self, EntityType item):
 */
    if (!(likely(((__pyx_v_dep) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_dep, __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 1068, __pyx_L1_error)
    __pyx_t_6 = __pyx_f_5yapic_6entity_7_entity_14DependencyList__add(__pyx_v_self, __pyx_v_item, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_dep), __pyx_v_cd); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1068, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":1067
 *             self.items.append(item)
 * 
 *         for dep in sorted(item.__deps__, key=attrgetter("__name__")):             # <<<<<<<<<<<<<<
 *             self._add(item, dep, cd)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "yapic/entity/_entity.pyx":1060
 *         self.circular = {}
 * 
 *     cpdef add(self, EntityType item):             # <<<<<<<<<<<<<<
 *         cdef set cd = set()
 *         cd.add(item)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cd);
  __Pyx_XDECREF(__pyx_v_dep);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_14DependencyList_3add(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_14DependencyList_3add(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_item), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "item", 0))) __PYX_ERR(0, 1060, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_14DependencyList_2add(((struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_item));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_14DependencyList_2add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_14DependencyList_add(__pyx_v_self, __pyx_v_item, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1070
 *             self._add(item, dep, cd)
 * 
 *     cpdef index(self, EntityType item):             # <<<<<<<<<<<<<<
 *         return (<list>self.items).index(item)
 * 
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_14DependencyList_5index(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList_index(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("index", 0);

  /* "yapic/entity/_entity.pyx":1071
 * 
 *     cpdef index(self, EntityType item):
 *         return (<list>self.items).index(item)             # <<<<<<<<<<<<<<
 * 
 *     cdef _add(self, EntityType entity, EntityType dep, set cd):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->items, __pyx_n_s_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, ((PyObject *)__pyx_v_item)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_item));
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1070
 *             self._add(item, dep, cd)
 * 
 *     cpdef index(self, EntityType item):             # <<<<<<<<<<<<<<
 *         return (<list>self.items).index(item)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList.index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_14DependencyList_5index(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_14DependencyList_5index(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("index (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_item), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "item", 0))) __PYX_ERR(0, 1070, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_14DependencyList_4index(((struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_item));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_14DependencyList_4index(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("index", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_14DependencyList_index(__pyx_v_self, __pyx_v_item, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList.index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1073
 *         return (<list>self.items).index(item)
 * 
 *     cdef _add(self, EntityType entity, EntityType dep, set cd):             # <<<<<<<<<<<<<<
 *         cdef int index
 *         cdef int dindex
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList__add(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_dep, PyObject *__pyx_v_cd) {
  int __pyx_v_index;
  int __pyx_v_dindex;
  int __pyx_v_all_deps_in_list;
  PyObject *__pyx_v_dd = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *(*__pyx_t_15)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_add", 0);

  /* "yapic/entity/_entity.pyx":1077
 *         cdef int dindex
 * 
 *         if dep in cd:             # <<<<<<<<<<<<<<
 *             if entity not in self.circular:
 *                 self._resolve_circular(entity, dep, cd)
 */
  if (unlikely(__pyx_v_cd == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 1077, __pyx_L1_error)
  }
  __pyx_t_1 = (__Pyx_PySet_ContainsTF(((PyObject *)__pyx_v_dep), __pyx_v_cd, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1077, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":1078
 * 
 *         if dep in cd:
 *             if entity not in self.circular:             # <<<<<<<<<<<<<<
 *                 self._resolve_circular(entity, dep, cd)
 *                 self._add(entity, dep, set())
 */
    if (unlikely(__pyx_v_self->circular == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 1078, __pyx_L1_error)
    }
    __pyx_t_2 = (__Pyx_PyDict_ContainsTF(((PyObject *)__pyx_v_entity), __pyx_v_self->circular, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1078, __pyx_L1_error)
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "yapic/entity/_entity.pyx":1079
 *         if dep in cd:
 *             if entity not in self.circular:
 *                 self._resolve_circular(entity, dep, cd)             # <<<<<<<<<<<<<<
 *                 self._add(entity, dep, set())
 *                 return
 */
      __pyx_t_3 = __pyx_f_5yapic_6entity_7_entity_14DependencyList__resolve_circular(__pyx_v_self, __pyx_v_entity, __pyx_v_dep, __pyx_v_cd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1079, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":1080
 *             if entity not in self.circular:
 *                 self._resolve_circular(entity, dep, cd)
 *                 self._add(entity, dep, set())             # <<<<<<<<<<<<<<
 *                 return
 * 
 */
      __pyx_t_3 = PySet_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1080, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __pyx_f_5yapic_6entity_7_entity_14DependencyList__add(__pyx_v_self, __pyx_v_entity, __pyx_v_dep, ((PyObject*)__pyx_t_3)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1080, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "yapic/entity/_entity.pyx":1081
 *                 self._resolve_circular(entity, dep, cd)
 *                 self._add(entity, dep, set())
 *                 return             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_r = Py_None; __Pyx_INCREF(Py_None);
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":1078
 * 
 *         if dep in cd:
 *             if entity not in self.circular:             # <<<<<<<<<<<<<<
 *                 self._resolve_circular(entity, dep, cd)
 *                 self._add(entity, dep, set())
 */
    }

    /* "yapic/entity/_entity.pyx":1077
 *         cdef int dindex
 * 
 *         if dep in cd:             # <<<<<<<<<<<<<<
 *             if entity not in self.circular:
 *                 self._resolve_circular(entity, dep, cd)
 */
  }

  /* "yapic/entity/_entity.pyx":1083
 *                 return
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             index = self.items.index(entity)
 *         except ValueError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "yapic/entity/_entity.pyx":1084
 * 
 *         try:
 *             index = self.items.index(entity)             # <<<<<<<<<<<<<<
 *         except ValueError:
 *             index = len(self)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->items, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1084, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, ((PyObject *)__pyx_v_entity)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_entity));
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1084, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_index = __pyx_t_9;

      /* "yapic/entity/_entity.pyx":1083
 *                 return
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             index = self.items.index(entity)
 *         except ValueError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L10_try_end;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "yapic/entity/_entity.pyx":1085
 *         try:
 *             index = self.items.index(entity)
 *         except ValueError:             # <<<<<<<<<<<<<<
 *             index = len(self)
 *             self.items.append(entity)
 */
    __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_9) {
      __Pyx_AddTraceback("yapic.entity._entity.DependencyList._add", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_3, &__pyx_t_8) < 0) __PYX_ERR(0, 1085, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_8);

      /* "yapic/entity/_entity.pyx":1086
 *             index = self.items.index(entity)
 *         except ValueError:
 *             index = len(self)             # <<<<<<<<<<<<<<
 *             self.items.append(entity)
 * 
 */
      __pyx_t_10 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1086, __pyx_L7_except_error)
      __pyx_v_index = __pyx_t_10;

      /* "yapic/entity/_entity.pyx":1087
 *         except ValueError:
 *             index = len(self)
 *             self.items.append(entity)             # <<<<<<<<<<<<<<
 * 
 *         cd.add(dep)
 */
      if (unlikely(__pyx_v_self->items == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 1087, __pyx_L7_except_error)
      }
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_self->items, ((PyObject *)__pyx_v_entity)); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 1087, __pyx_L7_except_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L6_exception_handled;
    }
    goto __pyx_L7_except_error;
    __pyx_L7_except_error:;

    /* "yapic/entity/_entity.pyx":1083
 *                 return
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             index = self.items.index(entity)
 *         except ValueError:
 */
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L6_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L10_try_end:;
  }

  /* "yapic/entity/_entity.pyx":1089
 *             self.items.append(entity)
 * 
 *         cd.add(dep)             # <<<<<<<<<<<<<<
 * 
 *         all_deps_in_list = False
 */
  if (unlikely(__pyx_v_cd == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "add");
    __PYX_ERR(0, 1089, __pyx_L1_error)
  }
  __pyx_t_11 = PySet_Add(__pyx_v_cd, ((PyObject *)__pyx_v_dep)); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 1089, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":1091
 *         cd.add(dep)
 * 
 *         all_deps_in_list = False             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  __pyx_v_all_deps_in_list = 0;

  /* "yapic/entity/_entity.pyx":1093
 *         all_deps_in_list = False
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             dindex = self.items.index(dep)
 *         except ValueError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_6, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "yapic/entity/_entity.pyx":1094
 * 
 *         try:
 *             dindex = self.items.index(dep)             # <<<<<<<<<<<<<<
 *         except ValueError:
 *             self.items.insert(index, dep)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->items, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1094, __pyx_L13_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_dep)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_dep));
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1094, __pyx_L13_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L13_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_v_dindex = __pyx_t_9;

      /* "yapic/entity/_entity.pyx":1093
 *         all_deps_in_list = False
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             dindex = self.items.index(dep)
 *         except ValueError:
 */
    }

    /* "yapic/entity/_entity.pyx":1098
 *             self.items.insert(index, dep)
 *         else:
 *             all_deps_in_list = True             # <<<<<<<<<<<<<<
 *             if entity not in self.circular or dep in self.circular[entity]:
 *                 if dindex > index:
 */
    /*else:*/ {
      __pyx_v_all_deps_in_list = 1;

      /* "yapic/entity/_entity.pyx":1099
 *         else:
 *             all_deps_in_list = True
 *             if entity not in self.circular or dep in self.circular[entity]:             # <<<<<<<<<<<<<<
 *                 if dindex > index:
 *                     self.items.pop(dindex)
 */
      if (unlikely(__pyx_v_self->circular == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
        __PYX_ERR(0, 1099, __pyx_L15_except_error)
      }
      __pyx_t_2 = (__Pyx_PyDict_ContainsTF(((PyObject *)__pyx_v_entity), __pyx_v_self->circular, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1099, __pyx_L15_except_error)
      __pyx_t_12 = (__pyx_t_2 != 0);
      if (!__pyx_t_12) {
      } else {
        __pyx_t_1 = __pyx_t_12;
        goto __pyx_L20_bool_binop_done;
      }
      if (unlikely(__pyx_v_self->circular == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1099, __pyx_L15_except_error)
      }
      __pyx_t_8 = __Pyx_PyDict_GetItem(__pyx_v_self->circular, ((PyObject *)__pyx_v_entity)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L15_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_12 = (__Pyx_PySequence_ContainsTF(((PyObject *)__pyx_v_dep), __pyx_t_8, Py_EQ)); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 1099, __pyx_L15_except_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_2 = (__pyx_t_12 != 0);
      __pyx_t_1 = __pyx_t_2;
      __pyx_L20_bool_binop_done:;
      if (__pyx_t_1) {

        /* "yapic/entity/_entity.pyx":1100
 *             all_deps_in_list = True
 *             if entity not in self.circular or dep in self.circular[entity]:
 *                 if dindex > index:             # <<<<<<<<<<<<<<
 *                     self.items.pop(dindex)
 *                     self.items.insert(index, dep)
 */
        __pyx_t_1 = ((__pyx_v_dindex > __pyx_v_index) != 0);
        if (__pyx_t_1) {

          /* "yapic/entity/_entity.pyx":1101
 *             if entity not in self.circular or dep in self.circular[entity]:
 *                 if dindex > index:
 *                     self.items.pop(dindex)             # <<<<<<<<<<<<<<
 *                     self.items.insert(index, dep)
 *                     all_deps_in_list = False
 */
          if (unlikely(__pyx_v_self->items == Py_None)) {
            PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "pop");
            __PYX_ERR(0, 1101, __pyx_L15_except_error)
          }
          __pyx_t_8 = __Pyx_PyList_PopIndex(__pyx_v_self->items, Py_None, __pyx_v_dindex, 1, int, __Pyx_PyInt_From_int); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1101, __pyx_L15_except_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "yapic/entity/_entity.pyx":1102
 *                 if dindex > index:
 *                     self.items.pop(dindex)
 *                     self.items.insert(index, dep)             # <<<<<<<<<<<<<<
 *                     all_deps_in_list = False
 * 
 */
          if (unlikely(__pyx_v_self->items == Py_None)) {
            PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "insert");
            __PYX_ERR(0, 1102, __pyx_L15_except_error)
          }
          __pyx_t_11 = PyList_Insert(__pyx_v_self->items, __pyx_v_index, ((PyObject *)__pyx_v_dep)); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 1102, __pyx_L15_except_error)

          /* "yapic/entity/_entity.pyx":1103
 *                     self.items.pop(dindex)
 *                     self.items.insert(index, dep)
 *                     all_deps_in_list = False             # <<<<<<<<<<<<<<
 * 
 *         if not all_deps_in_list:
 */
          __pyx_v_all_deps_in_list = 0;

          /* "yapic/entity/_entity.pyx":1100
 *             all_deps_in_list = True
 *             if entity not in self.circular or dep in self.circular[entity]:
 *                 if dindex > index:             # <<<<<<<<<<<<<<
 *                     self.items.pop(dindex)
 *                     self.items.insert(index, dep)
 */
        }

        /* "yapic/entity/_entity.pyx":1099
 *         else:
 *             all_deps_in_list = True
 *             if entity not in self.circular or dep in self.circular[entity]:             # <<<<<<<<<<<<<<
 *                 if dindex > index:
 *                     self.items.pop(dindex)
 */
      }
    }
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L18_try_end;
    __pyx_L13_error:;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "yapic/entity/_entity.pyx":1095
 *         try:
 *             dindex = self.items.index(dep)
 *         except ValueError:             # <<<<<<<<<<<<<<
 *             self.items.insert(index, dep)
 *         else:
 */
    __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_9) {
      __Pyx_AddTraceback("yapic.entity._entity.DependencyList._add", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_3, &__pyx_t_4) < 0) __PYX_ERR(0, 1095, __pyx_L15_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_4);

      /* "yapic/entity/_entity.pyx":1096
 *             dindex = self.items.index(dep)
 *         except ValueError:
 *             self.items.insert(index, dep)             # <<<<<<<<<<<<<<
 *         else:
 *             all_deps_in_list = True
 */
      if (unlikely(__pyx_v_self->items == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "insert");
        __PYX_ERR(0, 1096, __pyx_L15_except_error)
      }
      __pyx_t_11 = PyList_Insert(__pyx_v_self->items, __pyx_v_index, ((PyObject *)__pyx_v_dep)); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 1096, __pyx_L15_except_error)
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L14_exception_handled;
    }
    goto __pyx_L15_except_error;
    __pyx_L15_except_error:;

    /* "yapic/entity/_entity.pyx":1093
 *         all_deps_in_list = False
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             dindex = self.items.index(dep)
 *         except ValueError:
 */
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_6, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L14_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_6, __pyx_t_5);
    __pyx_L18_try_end:;
  }

  /* "yapic/entity/_entity.pyx":1105
 *                     all_deps_in_list = False
 * 
 *         if not all_deps_in_list:             # <<<<<<<<<<<<<<
 *             for dd in sorted(dep.__deps__, key=attrgetter("__name__")):
 *                 self._add(dep, dd, cd)
 */
  __pyx_t_1 = ((!(__pyx_v_all_deps_in_list != 0)) != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":1106
 * 
 *         if not all_deps_in_list:
 *             for dd in sorted(dep.__deps__, key=attrgetter("__name__")):             # <<<<<<<<<<<<<<
 *                 self._add(dep, dd, cd)
 * 
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_dep->__deps__);
    __Pyx_GIVEREF(__pyx_v_dep->__deps__);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_dep->__deps__);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_attrgetter); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_14)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
      }
    }
    __pyx_t_8 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_n_u_name_2) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_n_u_name_2);
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_key, __pyx_t_8) < 0) __PYX_ERR(0, 1106, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1106, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
      __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_10 = 0;
      __pyx_t_15 = NULL;
    } else {
      __pyx_t_10 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1106, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_15 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1106, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    for (;;) {
      if (likely(!__pyx_t_15)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_10); __Pyx_INCREF(__pyx_t_8); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 1106, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1106, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        } else {
          if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_10); __Pyx_INCREF(__pyx_t_8); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 1106, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1106, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        }
      } else {
        __pyx_t_8 = __pyx_t_15(__pyx_t_3);
        if (unlikely(!__pyx_t_8)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1106, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_8);
      }
      __Pyx_XDECREF_SET(__pyx_v_dd, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "yapic/entity/_entity.pyx":1107
 *         if not all_deps_in_list:
 *             for dd in sorted(dep.__deps__, key=attrgetter("__name__")):
 *                 self._add(dep, dd, cd)             # <<<<<<<<<<<<<<
 * 
 *         cd.discard(dep)
 */
      if (!(likely(((__pyx_v_dd) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_dd, __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 1107, __pyx_L1_error)
      __pyx_t_8 = __pyx_f_5yapic_6entity_7_entity_14DependencyList__add(__pyx_v_self, __pyx_v_dep, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_dd), __pyx_v_cd); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "yapic/entity/_entity.pyx":1106
 * 
 *         if not all_deps_in_list:
 *             for dd in sorted(dep.__deps__, key=attrgetter("__name__")):             # <<<<<<<<<<<<<<
 *                 self._add(dep, dd, cd)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":1105
 *                     all_deps_in_list = False
 * 
 *         if not all_deps_in_list:             # <<<<<<<<<<<<<<
 *             for dd in sorted(dep.__deps__, key=attrgetter("__name__")):
 *                 self._add(dep, dd, cd)
 */
  }

  /* "yapic/entity/_entity.pyx":1109
 *                 self._add(dep, dd, cd)
 * 
 *         cd.discard(dep)             # <<<<<<<<<<<<<<
 * 
 *     cdef _resolve_circular(self, EntityType entity, EntityType dep, set cd):
 */
  if (unlikely(__pyx_v_cd == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "discard");
    __PYX_ERR(0, 1109, __pyx_L1_error)
  }
  __pyx_t_11 = __Pyx_PySet_Discard(__pyx_v_cd, ((PyObject *)__pyx_v_dep)); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 1109, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":1073
 *         return (<list>self.items).index(item)
 * 
 *     cdef _add(self, EntityType entity, EntityType dep, set cd):             # <<<<<<<<<<<<<<
 *         cdef int index
 *         cdef int dindex
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList._add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1111
 *         cd.discard(dep)
 * 
 *     cdef _resolve_circular(self, EntityType entity, EntityType dep, set cd):             # <<<<<<<<<<<<<<
 *         # print("_resolve_circular", entity, dep, cd)
 * 
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_14DependencyList__resolve_circular(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_dep, CYTHON_UNUSED PyObject *__pyx_v_cd) {
  int __pyx_v_entity_dep;
  int __pyx_v_dep_entity;
  PyObject *__pyx_v_cdeps = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_resolve_circular", 0);

  /* "yapic/entity/_entity.pyx":1114
 *         # print("_resolve_circular", entity, dep, cd)
 * 
 *         entity_dep = _is_dependency(entity, dep)             # <<<<<<<<<<<<<<
 *         dep_entity = _is_dependency(dep, entity)
 * 
 */
  __pyx_v_entity_dep = __pyx_f_5yapic_6entity_7_entity__is_dependency(__pyx_v_entity, __pyx_v_dep);

  /* "yapic/entity/_entity.pyx":1115
 * 
 *         entity_dep = _is_dependency(entity, dep)
 *         dep_entity = _is_dependency(dep, entity)             # <<<<<<<<<<<<<<
 * 
 *         if entity_dep and dep_entity:
 */
  __pyx_v_dep_entity = __pyx_f_5yapic_6entity_7_entity__is_dependency(__pyx_v_dep, __pyx_v_entity);

  /* "yapic/entity/_entity.pyx":1117
 *         dep_entity = _is_dependency(dep, entity)
 * 
 *         if entity_dep and dep_entity:             # <<<<<<<<<<<<<<
 *             raise ValueError("Can't resolve circular reference")
 * 
 */
  __pyx_t_2 = (__pyx_v_entity_dep != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_dep_entity != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "yapic/entity/_entity.pyx":1118
 * 
 *         if entity_dep and dep_entity:
 *             raise ValueError("Can't resolve circular reference")             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1118, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":1117
 *         dep_entity = _is_dependency(dep, entity)
 * 
 *         if entity_dep and dep_entity:             # <<<<<<<<<<<<<<
 *             raise ValueError("Can't resolve circular reference")
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":1120
 *             raise ValueError("Can't resolve circular reference")
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[entity]
 *         except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {

      /* "yapic/entity/_entity.pyx":1121
 * 
 *         try:
 *             cdeps = self.circular[entity]             # <<<<<<<<<<<<<<
 *         except KeyError:
 *             cdeps = self.circular[entity] = set()
 */
      if (unlikely(__pyx_v_self->circular == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1121, __pyx_L6_error)
      }
      __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_self->circular, ((PyObject *)__pyx_v_entity)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1121, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_v_cdeps = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "yapic/entity/_entity.pyx":1120
 *             raise ValueError("Can't resolve circular reference")
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[entity]
 *         except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L11_try_end;
    __pyx_L6_error:;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":1122
 *         try:
 *             cdeps = self.circular[entity]
 *         except KeyError:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[entity] = set()
 * 
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("yapic.entity._entity.DependencyList._resolve_circular", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_8, &__pyx_t_9) < 0) __PYX_ERR(0, 1122, __pyx_L8_except_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_9);

      /* "yapic/entity/_entity.pyx":1123
 *             cdeps = self.circular[entity]
 *         except KeyError:
 *             cdeps = self.circular[entity] = set()             # <<<<<<<<<<<<<<
 * 
 *         if entity_dep:
 */
      __pyx_t_10 = PySet_New(0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1123, __pyx_L8_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_XDECREF_SET(__pyx_v_cdeps, __pyx_t_10);
      if (unlikely(__pyx_v_self->circular == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1123, __pyx_L8_except_error)
      }
      if (unlikely(PyDict_SetItem(__pyx_v_self->circular, ((PyObject *)__pyx_v_entity), __pyx_t_10) < 0)) __PYX_ERR(0, 1123, __pyx_L8_except_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L7_exception_handled;
    }
    goto __pyx_L8_except_error;
    __pyx_L8_except_error:;

    /* "yapic/entity/_entity.pyx":1120
 *             raise ValueError("Can't resolve circular reference")
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[entity]
 *         except KeyError:
 */
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L7_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    __pyx_L11_try_end:;
  }

  /* "yapic/entity/_entity.pyx":1125
 *             cdeps = self.circular[entity] = set()
 * 
 *         if entity_dep:             # <<<<<<<<<<<<<<
 *             cdeps.add(dep)
 * 
 */
  __pyx_t_1 = (__pyx_v_entity_dep != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":1126
 * 
 *         if entity_dep:
 *             cdeps.add(dep)             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_cdeps, __pyx_n_s_add); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_9 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, ((PyObject *)__pyx_v_dep)) : __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_dep));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "yapic/entity/_entity.pyx":1125
 *             cdeps = self.circular[entity] = set()
 * 
 *         if entity_dep:             # <<<<<<<<<<<<<<
 *             cdeps.add(dep)
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":1128
 *             cdeps.add(dep)
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[dep]
 *         except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "yapic/entity/_entity.pyx":1129
 * 
 *         try:
 *             cdeps = self.circular[dep]             # <<<<<<<<<<<<<<
 *         except KeyError:
 *             cdeps = self.circular[dep] = set()
 */
      if (unlikely(__pyx_v_self->circular == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1129, __pyx_L15_error)
      }
      __pyx_t_9 = __Pyx_PyDict_GetItem(__pyx_v_self->circular, ((PyObject *)__pyx_v_dep)); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1129, __pyx_L15_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF_SET(__pyx_v_cdeps, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "yapic/entity/_entity.pyx":1128
 *             cdeps.add(dep)
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[dep]
 *         except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L20_try_end;
    __pyx_L15_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "yapic/entity/_entity.pyx":1130
 *         try:
 *             cdeps = self.circular[dep]
 *         except KeyError:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[dep] = set()
 * 
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("yapic.entity._entity.DependencyList._resolve_circular", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_9, &__pyx_t_8, &__pyx_t_3) < 0) __PYX_ERR(0, 1130, __pyx_L17_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_3);

      /* "yapic/entity/_entity.pyx":1131
 *             cdeps = self.circular[dep]
 *         except KeyError:
 *             cdeps = self.circular[dep] = set()             # <<<<<<<<<<<<<<
 * 
 *         if dep_entity:
 */
      __pyx_t_10 = PySet_New(0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1131, __pyx_L17_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_DECREF_SET(__pyx_v_cdeps, __pyx_t_10);
      if (unlikely(__pyx_v_self->circular == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1131, __pyx_L17_except_error)
      }
      if (unlikely(PyDict_SetItem(__pyx_v_self->circular, ((PyObject *)__pyx_v_dep), __pyx_t_10) < 0)) __PYX_ERR(0, 1131, __pyx_L17_except_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L16_exception_handled;
    }
    goto __pyx_L17_except_error;
    __pyx_L17_except_error:;

    /* "yapic/entity/_entity.pyx":1128
 *             cdeps.add(dep)
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             cdeps = self.circular[dep]
 *         except KeyError:
 */
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L16_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_4);
    __pyx_L20_try_end:;
  }

  /* "yapic/entity/_entity.pyx":1133
 *             cdeps = self.circular[dep] = set()
 * 
 *         if dep_entity:             # <<<<<<<<<<<<<<
 *             cdeps.add(entity)
 * 
 */
  __pyx_t_1 = (__pyx_v_dep_entity != 0);
  if (__pyx_t_1) {

    /* "yapic/entity/_entity.pyx":1134
 * 
 *         if dep_entity:
 *             cdeps.add(entity)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_cdeps, __pyx_n_s_add); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_3 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, ((PyObject *)__pyx_v_entity)) : __Pyx_PyObject_CallOneArg(__pyx_t_8, ((PyObject *)__pyx_v_entity));
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":1133
 *             cdeps = self.circular[dep] = set()
 * 
 *         if dep_entity:             # <<<<<<<<<<<<<<
 *             cdeps.add(entity)
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":1111
 *         cd.discard(dep)
 * 
 *     cdef _resolve_circular(self, EntityType entity, EntityType dep, set cd):             # <<<<<<<<<<<<<<
 *         # print("_resolve_circular", entity, dep, cd)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yapic.entity._entity.DependencyList._resolve_circular", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cdeps);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1137
 * 
 * 
 * cdef bint _is_dependency(EntityType a, EntityType b):             # <<<<<<<<<<<<<<
 *     cdef EntityAttribute attr
 *     cdef ForeignKey fk
 */

static int __pyx_f_5yapic_6entity_7_entity__is_dependency(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_a, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_b) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *__pyx_v_attr = 0;
  struct __pyx_obj_5yapic_6entity_6_field_ForeignKey *__pyx_v_fk = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_is_dependency", 0);

  /* "yapic/entity/_entity.pyx":1141
 *     cdef ForeignKey fk
 * 
 *     for attr in a.__attrs__:             # <<<<<<<<<<<<<<
 *         fk = attr.get_ext(ForeignKey)
 *         if fk and fk.ref._entity_ is b:
 */
  if (unlikely(__pyx_v_a->__attrs__ == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 1141, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_a->__attrs__; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1141, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute))))) __PYX_ERR(0, 1141, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_attr, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":1142
 * 
 *     for attr in a.__attrs__:
 *         fk = attr.get_ext(ForeignKey)             # <<<<<<<<<<<<<<
 *         if fk and fk.ref._entity_ is b:
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute *)__pyx_v_attr->__pyx_base.__pyx_vtab)->get_ext(__pyx_v_attr, ((PyObject *)__pyx_ptype_5yapic_6entity_6_field_ForeignKey), 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1142, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5yapic_6entity_6_field_ForeignKey))))) __PYX_ERR(0, 1142, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fk, ((struct __pyx_obj_5yapic_6entity_6_field_ForeignKey *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "yapic/entity/_entity.pyx":1143
 *     for attr in a.__attrs__:
 *         fk = attr.get_ext(ForeignKey)
 *         if fk and fk.ref._entity_ is b:             # <<<<<<<<<<<<<<
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:
 *                 return True
 */
    __pyx_t_5 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_fk)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1143, __pyx_L1_error)
    if (__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_fk->ref->__pyx_base._entity_ == __pyx_v_b);
    __pyx_t_6 = (__pyx_t_5 != 0);
    __pyx_t_4 = __pyx_t_6;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_4) {

      /* "yapic/entity/_entity.pyx":1144
 *         fk = attr.get_ext(ForeignKey)
 *         if fk and fk.ref._entity_ is b:
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:             # <<<<<<<<<<<<<<
 *                 return True
 *     return False
 */
      __pyx_t_6 = __Pyx_TypeCheck(((PyObject *)__pyx_v_attr), __pyx_ptype_5yapic_6entity_6_field_Field); 
      __pyx_t_5 = (__pyx_t_6 != 0);
      if (__pyx_t_5) {
      } else {
        __pyx_t_4 = __pyx_t_5;
        goto __pyx_L9_bool_binop_done;
      }
      __pyx_t_5 = __Pyx_PyObject_IsTrue(((struct __pyx_obj_5yapic_6entity_6_field_Field *)__pyx_v_attr)->nullable); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1144, __pyx_L1_error)
      __pyx_t_6 = ((!__pyx_t_5) != 0);
      __pyx_t_4 = __pyx_t_6;
      __pyx_L9_bool_binop_done:;
      if (__pyx_t_4) {

        /* "yapic/entity/_entity.pyx":1145
 *         if fk and fk.ref._entity_ is b:
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:
 *                 return True             # <<<<<<<<<<<<<<
 *     return False
 * 
 */
        __pyx_r = 1;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;

        /* "yapic/entity/_entity.pyx":1144
 *         fk = attr.get_ext(ForeignKey)
 *         if fk and fk.ref._entity_ is b:
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:             # <<<<<<<<<<<<<<
 *                 return True
 *     return False
 */
      }

      /* "yapic/entity/_entity.pyx":1143
 *     for attr in a.__attrs__:
 *         fk = attr.get_ext(ForeignKey)
 *         if fk and fk.ref._entity_ is b:             # <<<<<<<<<<<<<<
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:
 *                 return True
 */
    }

    /* "yapic/entity/_entity.pyx":1141
 *     cdef ForeignKey fk
 * 
 *     for attr in a.__attrs__:             # <<<<<<<<<<<<<<
 *         fk = attr.get_ext(ForeignKey)
 *         if fk and fk.ref._entity_ is b:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1146
 *             if isinstance(attr, Field) and not (<Field>attr).nullable:
 *                 return True
 *     return False             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1137
 * 
 * 
 * cdef bint _is_dependency(EntityType a, EntityType b):             # <<<<<<<<<<<<<<
 *     cdef EntityAttribute attr
 *     cdef ForeignKey fk
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_WriteUnraisable("yapic.entity._entity._is_dependency", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_attr);
  __Pyx_XDECREF((PyObject *)__pyx_v_fk);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1151
 * @cython.final
 * cdef class PolymorphMeta:
 *     def __cinit__(self, EntityType ent, object id):             # <<<<<<<<<<<<<<
 *         self.id_fields = PolymorphMeta.normalize_id(id)
 *         self.entities = {}
 */

/* Python wrapper */
static int __pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent = 0;
  PyObject *__pyx_v_id = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ent,&__pyx_n_s_id,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ent)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_id)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 1151, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1151, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ent = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)values[0]);
    __pyx_v_id = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1151, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ent), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "ent", 0))) __PYX_ERR(0, 1151, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta___cinit__(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self), __pyx_v_ent, __pyx_v_id);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta___cinit__(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_ent, PyObject *__pyx_v_id) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yapic/entity/_entity.pyx":1152
 * cdef class PolymorphMeta:
 *     def __cinit__(self, EntityType ent, object id):
 *         self.id_fields = PolymorphMeta.normalize_id(id)             # <<<<<<<<<<<<<<
 *         self.entities = {}
 * 
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(__pyx_v_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->id_fields);
  __Pyx_DECREF(__pyx_v_self->id_fields);
  __pyx_v_self->id_fields = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1153
 *     def __cinit__(self, EntityType ent, object id):
 *         self.id_fields = PolymorphMeta.normalize_id(id)
 *         self.entities = {}             # <<<<<<<<<<<<<<
 * 
 *     def get_entity(self, poly_id):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->entities);
  __Pyx_DECREF(__pyx_v_self->entities);
  __pyx_v_self->entities = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1151
 * @cython.final
 * cdef class PolymorphMeta:
 *     def __cinit__(self, EntityType ent, object id):             # <<<<<<<<<<<<<<
 *         self.id_fields = PolymorphMeta.normalize_id(id)
 *         self.entities = {}
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1155
 *         self.entities = {}
 * 
 *     def get_entity(self, poly_id):             # <<<<<<<<<<<<<<
 *         poly_id = PolymorphMeta.normalize_id(poly_id)
 *         cdef EntityType entity = None
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_3get_entity(PyObject *__pyx_v_self, PyObject *__pyx_v_poly_id); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_3get_entity(PyObject *__pyx_v_self, PyObject *__pyx_v_poly_id) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_entity (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_2get_entity(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self), ((PyObject *)__pyx_v_poly_id));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_2get_entity(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, PyObject *__pyx_v_poly_id) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity = 0;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_id = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_rel = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_entity", 0);
  __Pyx_INCREF(__pyx_v_poly_id);

  /* "yapic/entity/_entity.pyx":1156
 * 
 *     def get_entity(self, poly_id):
 *         poly_id = PolymorphMeta.normalize_id(poly_id)             # <<<<<<<<<<<<<<
 *         cdef EntityType entity = None
 * 
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(__pyx_v_poly_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_poly_id, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1157
 *     def get_entity(self, poly_id):
 *         poly_id = PolymorphMeta.normalize_id(poly_id)
 *         cdef EntityType entity = None             # <<<<<<<<<<<<<<
 * 
 *         for entity, v in self.entities.items():
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)Py_None);

  /* "yapic/entity/_entity.pyx":1159
 *         cdef EntityType entity = None
 * 
 *         for entity, v in self.entities.items():             # <<<<<<<<<<<<<<
 *             id, rel = <tuple>v
 *             if id == poly_id:
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->entities == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 1159, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_self->entities, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 1159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 1159, __pyx_L1_error)
    __Pyx_DECREF_SET(__pyx_v_entity, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_5));
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "yapic/entity/_entity.pyx":1160
 * 
 *         for entity, v in self.entities.items():
 *             id, rel = <tuple>v             # <<<<<<<<<<<<<<
 *             if id == poly_id:
 *                 return entity
 */
    __pyx_t_6 = __pyx_v_v;
    __Pyx_INCREF(__pyx_t_6);
    if (likely(__pyx_t_6 != Py_None)) {
      PyObject* sequence = __pyx_t_6;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1160, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_8 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_8);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1160, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1160, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      #endif
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(0, 1160, __pyx_L1_error)
    }
    __Pyx_XDECREF_SET(__pyx_v_id, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_rel, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "yapic/entity/_entity.pyx":1161
 *         for entity, v in self.entities.items():
 *             id, rel = <tuple>v
 *             if id == poly_id:             # <<<<<<<<<<<<<<
 *                 return entity
 * 
 */
    __pyx_t_6 = PyObject_RichCompare(__pyx_v_id, __pyx_v_poly_id, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "yapic/entity/_entity.pyx":1162
 *             id, rel = <tuple>v
 *             if id == poly_id:
 *                 return entity             # <<<<<<<<<<<<<<
 * 
 *         raise ValueError("Unexpected value for polymorph id: %r" % poly_id)
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(((PyObject *)__pyx_v_entity));
      __pyx_r = ((PyObject *)__pyx_v_entity);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":1161
 *         for entity, v in self.entities.items():
 *             id, rel = <tuple>v
 *             if id == poly_id:             # <<<<<<<<<<<<<<
 *                 return entity
 * 
 */
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1164
 *                 return entity
 * 
 *         raise ValueError("Unexpected value for polymorph id: %r" % poly_id)             # <<<<<<<<<<<<<<
 * 
 *     def new_entity(self, poly_id):
 */
  __pyx_t_1 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Unexpected_value_for_polymorph_i, __pyx_v_poly_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_Raise(__pyx_t_6, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __PYX_ERR(0, 1164, __pyx_L1_error)

  /* "yapic/entity/_entity.pyx":1155
 *         self.entities = {}
 * 
 *     def get_entity(self, poly_id):             # <<<<<<<<<<<<<<
 *         poly_id = PolymorphMeta.normalize_id(poly_id)
 *         cdef EntityType entity = None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.get_entity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_id);
  __Pyx_XDECREF(__pyx_v_rel);
  __Pyx_XDECREF(__pyx_v_poly_id);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1166
 *         raise ValueError("Unexpected value for polymorph id: %r" % poly_id)
 * 
 *     def new_entity(self, poly_id):             # <<<<<<<<<<<<<<
 *         cdef EntityType entity = self.get_entity(poly_id)
 *         return entity()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_5new_entity(PyObject *__pyx_v_self, PyObject *__pyx_v_poly_id); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_5new_entity(PyObject *__pyx_v_self, PyObject *__pyx_v_poly_id) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("new_entity (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_4new_entity(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self), ((PyObject *)__pyx_v_poly_id));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_4new_entity(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, PyObject *__pyx_v_poly_id) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("new_entity", 0);

  /* "yapic/entity/_entity.pyx":1167
 * 
 *     def new_entity(self, poly_id):
 *         cdef EntityType entity = self.get_entity(poly_id)             # <<<<<<<<<<<<<<
 *         return entity()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_entity); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_poly_id) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_poly_id);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 1167, __pyx_L1_error)
  __pyx_v_entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1168
 *     def new_entity(self, poly_id):
 *         cdef EntityType entity = self.get_entity(poly_id)
 *         return entity()             # <<<<<<<<<<<<<<
 * 
 *     cdef object add(self, object id, EntityType entity, object relation):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_entity));
  __pyx_t_2 = ((PyObject *)__pyx_v_entity); __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1166
 *         raise ValueError("Unexpected value for polymorph id: %r" % poly_id)
 * 
 *     def new_entity(self, poly_id):             # <<<<<<<<<<<<<<
 *         cdef EntityType entity = self.get_entity(poly_id)
 *         return entity()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.new_entity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1170
 *         return entity()
 * 
 *     cdef object add(self, object id, EntityType entity, object relation):             # <<<<<<<<<<<<<<
 *         if not isinstance(relation, Relation):
 *             raise TypeError("Relation expected, but got: %r" % relation)
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_add(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, PyObject *__pyx_v_id, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, PyObject *__pyx_v_relation) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add", 0);
  __Pyx_INCREF(__pyx_v_id);

  /* "yapic/entity/_entity.pyx":1171
 * 
 *     cdef object add(self, object id, EntityType entity, object relation):
 *         if not isinstance(relation, Relation):             # <<<<<<<<<<<<<<
 *             raise TypeError("Relation expected, but got: %r" % relation)
 * 
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_relation, __pyx_ptype_5yapic_6entity_9_relation_Relation); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "yapic/entity/_entity.pyx":1172
 *     cdef object add(self, object id, EntityType entity, object relation):
 *         if not isinstance(relation, Relation):
 *             raise TypeError("Relation expected, but got: %r" % relation)             # <<<<<<<<<<<<<<
 * 
 *         id = PolymorphMeta.normalize_id(id)
 */
    __pyx_t_3 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Relation_expected_but_got_r, __pyx_v_relation); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 1172, __pyx_L1_error)

    /* "yapic/entity/_entity.pyx":1171
 * 
 *     cdef object add(self, object id, EntityType entity, object relation):
 *         if not isinstance(relation, Relation):             # <<<<<<<<<<<<<<
 *             raise TypeError("Relation expected, but got: %r" % relation)
 * 
 */
  }

  /* "yapic/entity/_entity.pyx":1174
 *             raise TypeError("Relation expected, but got: %r" % relation)
 * 
 *         id = PolymorphMeta.normalize_id(id)             # <<<<<<<<<<<<<<
 *         self.entities[entity] = (id, relation)
 * 
 */
  __pyx_t_4 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(__pyx_v_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF_SET(__pyx_v_id, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "yapic/entity/_entity.pyx":1175
 * 
 *         id = PolymorphMeta.normalize_id(id)
 *         self.entities[entity] = (id, relation)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_id);
  __Pyx_GIVEREF(__pyx_v_id);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_id);
  __Pyx_INCREF(__pyx_v_relation);
  __Pyx_GIVEREF(__pyx_v_relation);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_relation);
  if (unlikely(__pyx_v_self->entities == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 1175, __pyx_L1_error)
  }
  if (unlikely(PyDict_SetItem(__pyx_v_self->entities, ((PyObject *)__pyx_v_entity), __pyx_t_4) < 0)) __PYX_ERR(0, 1175, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yapic/entity/_entity.pyx":1170
 *         return entity()
 * 
 *     cdef object add(self, object id, EntityType entity, object relation):             # <<<<<<<<<<<<<<
 *         if not isinstance(relation, Relation):
 *             raise TypeError("Relation expected, but got: %r" % relation)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_id);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1178
 * 
 *     @staticmethod
 *     cdef tuple normalize_id(object id):             # <<<<<<<<<<<<<<
 *         if not isinstance(id, tuple):
 *             if isinstance(id, list):
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id(PyObject *__pyx_v_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("normalize_id", 0);

  /* "yapic/entity/_entity.pyx":1179
 *     @staticmethod
 *     cdef tuple normalize_id(object id):
 *         if not isinstance(id, tuple):             # <<<<<<<<<<<<<<
 *             if isinstance(id, list):
 *                 return tuple(id)
 */
  __pyx_t_1 = PyTuple_Check(__pyx_v_id); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "yapic/entity/_entity.pyx":1180
 *     cdef tuple normalize_id(object id):
 *         if not isinstance(id, tuple):
 *             if isinstance(id, list):             # <<<<<<<<<<<<<<
 *                 return tuple(id)
 *             else:
 */
    __pyx_t_2 = PyList_Check(__pyx_v_id); 
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "yapic/entity/_entity.pyx":1181
 *         if not isinstance(id, tuple):
 *             if isinstance(id, list):
 *                 return tuple(id)             # <<<<<<<<<<<<<<
 *             else:
 *                 return (id,)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __Pyx_PySequence_Tuple(__pyx_v_id); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1181, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_r = ((PyObject*)__pyx_t_3);
      __pyx_t_3 = 0;
      goto __pyx_L0;

      /* "yapic/entity/_entity.pyx":1180
 *     cdef tuple normalize_id(object id):
 *         if not isinstance(id, tuple):
 *             if isinstance(id, list):             # <<<<<<<<<<<<<<
 *                 return tuple(id)
 *             else:
 */
    }

    /* "yapic/entity/_entity.pyx":1183
 *                 return tuple(id)
 *             else:
 *                 return (id,)             # <<<<<<<<<<<<<<
 *         return id
 * 
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_id);
      __Pyx_GIVEREF(__pyx_v_id);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_id);
      __pyx_r = ((PyObject*)__pyx_t_3);
      __pyx_t_3 = 0;
      goto __pyx_L0;
    }

    /* "yapic/entity/_entity.pyx":1179
 *     @staticmethod
 *     cdef tuple normalize_id(object id):
 *         if not isinstance(id, tuple):             # <<<<<<<<<<<<<<
 *             if isinstance(id, list):
 *                 return tuple(id)
 */
  }

  /* "yapic/entity/_entity.pyx":1184
 *             else:
 *                 return (id,)
 *         return id             # <<<<<<<<<<<<<<
 * 
 *     cpdef list parents(self, EntityType entity):
 */
  __Pyx_XDECREF(__pyx_r);
  if (!(likely(PyTuple_CheckExact(__pyx_v_id))||((__pyx_v_id) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v_id)->tp_name), 0))) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_INCREF(__pyx_v_id);
  __pyx_r = ((PyObject*)__pyx_v_id);
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1178
 * 
 *     @staticmethod
 *     cdef tuple normalize_id(object id):             # <<<<<<<<<<<<<<
 *         if not isinstance(id, tuple):
 *             if isinstance(id, list):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.normalize_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1186
 *         return id
 * 
 *     cpdef list parents(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         entity = get_alias_target(entity)
 *         cdef list result = []
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_7parents(PyObject *__pyx_v_self, PyObject *__pyx_v_entity); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parents", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_entity);

  /* "yapic/entity/_entity.pyx":1187
 * 
 *     cpdef list parents(self, EntityType entity):
 *         entity = get_alias_target(entity)             # <<<<<<<<<<<<<<
 *         cdef list result = []
 *         self._parents(entity, result)
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_5yapic_6entity_7_entity_get_alias_target(__pyx_v_entity, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_entity, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1188
 *     cpdef list parents(self, EntityType entity):
 *         entity = get_alias_target(entity)
 *         cdef list result = []             # <<<<<<<<<<<<<<
 *         self._parents(entity, result)
 *         return result
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1189
 *         entity = get_alias_target(entity)
 *         cdef list result = []
 *         self._parents(entity, result)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta__parents(__pyx_v_self, __pyx_v_entity, __pyx_v_result); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1190
 *         cdef list result = []
 *         self._parents(entity, result)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cdef object _parents(self, EntityType entity, list result):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1186
 *         return id
 * 
 *     cpdef list parents(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         entity = get_alias_target(entity)
 *         cdef list result = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.parents", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_7parents(PyObject *__pyx_v_self, PyObject *__pyx_v_entity); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_7parents(PyObject *__pyx_v_self, PyObject *__pyx_v_entity) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parents (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_entity), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "entity", 0))) __PYX_ERR(0, 1186, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_6parents(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_entity));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_6parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parents", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_parents(__pyx_v_self, __pyx_v_entity, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.parents", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1192
 *         return result
 * 
 *     cdef object _parents(self, EntityType entity, list result):             # <<<<<<<<<<<<<<
 *         cdef Relation relation
 * 
 */

static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta__parents(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, PyObject *__pyx_v_result) {
  struct __pyx_obj_5yapic_6entity_9_relation_Relation *__pyx_v_relation = 0;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_parents", 0);

  /* "yapic/entity/_entity.pyx":1195
 *         cdef Relation relation
 * 
 *         for x in self.entities.values():             # <<<<<<<<<<<<<<
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._entity_ is entity:
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->entities == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1195, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_self->entities, 1, __pyx_n_s_values, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_6 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, NULL, &__pyx_t_5, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_6 == 0)) break;
    if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":1196
 * 
 *         for x in self.entities.values():
 *             relation = <Relation>((<tuple>x)[1])             # <<<<<<<<<<<<<<
 *             if relation._entity_ is entity:
 *                 result.append(relation)
 */
    if (unlikely(__pyx_v_x == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 1196, __pyx_L1_error)
    }
    __pyx_t_5 = PyTuple_GET_ITEM(((PyObject*)__pyx_v_x), 1);
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_relation, ((struct __pyx_obj_5yapic_6entity_9_relation_Relation *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":1197
 *         for x in self.entities.values():
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._entity_ is entity:             # <<<<<<<<<<<<<<
 *                 result.append(relation)
 *                 self._parents(relation._impl_._joined, result)
 */
    __pyx_t_7 = (__pyx_v_relation->__pyx_base._entity_ == __pyx_v_entity);
    __pyx_t_8 = (__pyx_t_7 != 0);
    if (__pyx_t_8) {

      /* "yapic/entity/_entity.pyx":1198
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._entity_ is entity:
 *                 result.append(relation)             # <<<<<<<<<<<<<<
 *                 self._parents(relation._impl_._joined, result)
 * 
 */
      if (unlikely(__pyx_v_result == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 1198, __pyx_L1_error)
      }
      __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_result, ((PyObject *)__pyx_v_relation)); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1198, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":1199
 *             if relation._entity_ is entity:
 *                 result.append(relation)
 *                 self._parents(relation._impl_._joined, result)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_relation->__pyx_base._impl_), __pyx_n_s_joined); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1199, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5yapic_6entity_7_entity_EntityType))))) __PYX_ERR(0, 1199, __pyx_L1_error)
      __pyx_t_10 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta__parents(__pyx_v_self, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_5), __pyx_v_result); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1199, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "yapic/entity/_entity.pyx":1197
 *         for x in self.entities.values():
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._entity_ is entity:             # <<<<<<<<<<<<<<
 *                 result.append(relation)
 *                 self._parents(relation._impl_._joined, result)
 */
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1192
 *         return result
 * 
 *     cdef object _parents(self, EntityType entity, list result):             # <<<<<<<<<<<<<<
 *         cdef Relation relation
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta._parents", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_relation);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pyx":1202
 * 
 * 
 *     cpdef list children(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         cdef Relation relation
 *         entity = get_alias_target(entity)
 */

static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9children(PyObject *__pyx_v_self, PyObject *__pyx_v_entity); /*proto*/
static PyObject *__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_children(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5yapic_6entity_9_relation_Relation *__pyx_v_relation = 0;
  PyObject *__pyx_v_result = 0;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("children", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_entity);

  /* "yapic/entity/_entity.pyx":1204
 *     cpdef list children(self, EntityType entity):
 *         cdef Relation relation
 *         entity = get_alias_target(entity)             # <<<<<<<<<<<<<<
 *         cdef list result = []
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_5yapic_6entity_7_entity_get_alias_target(__pyx_v_entity, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_entity, ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_t_1));
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1205
 *         cdef Relation relation
 *         entity = get_alias_target(entity)
 *         cdef list result = []             # <<<<<<<<<<<<<<
 * 
 *         for x in self.entities.values():
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1207
 *         cdef list result = []
 * 
 *         for x in self.entities.values():             # <<<<<<<<<<<<<<
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._impl_._joined is entity:
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->entities == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1207, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_self->entities, 1, __pyx_n_s_values, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_6 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, NULL, &__pyx_t_5, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_6 == 0)) break;
    if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":1208
 * 
 *         for x in self.entities.values():
 *             relation = <Relation>((<tuple>x)[1])             # <<<<<<<<<<<<<<
 *             if relation._impl_._joined is entity:
 *                 result.append(relation)
 */
    if (unlikely(__pyx_v_x == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 1208, __pyx_L1_error)
    }
    __pyx_t_5 = PyTuple_GET_ITEM(((PyObject*)__pyx_v_x), 1);
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_relation, ((struct __pyx_obj_5yapic_6entity_9_relation_Relation *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "yapic/entity/_entity.pyx":1209
 *         for x in self.entities.values():
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._impl_._joined is entity:             # <<<<<<<<<<<<<<
 *                 result.append(relation)
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_relation->__pyx_base._impl_), __pyx_n_s_joined); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = (__pyx_t_5 == ((PyObject *)__pyx_v_entity));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = (__pyx_t_7 != 0);
    if (__pyx_t_8) {

      /* "yapic/entity/_entity.pyx":1210
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._impl_._joined is entity:
 *                 result.append(relation)             # <<<<<<<<<<<<<<
 * 
 *         return result
 */
      __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_result, ((PyObject *)__pyx_v_relation)); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1210, __pyx_L1_error)

      /* "yapic/entity/_entity.pyx":1209
 *         for x in self.entities.values():
 *             relation = <Relation>((<tuple>x)[1])
 *             if relation._impl_._joined is entity:             # <<<<<<<<<<<<<<
 *                 result.append(relation)
 * 
 */
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1212
 *                 result.append(relation)
 * 
 *         return result             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "yapic/entity/_entity.pyx":1202
 * 
 * 
 *     cpdef list children(self, EntityType entity):             # <<<<<<<<<<<<<<
 *         cdef Relation relation
 *         entity = get_alias_target(entity)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.children", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_relation);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF((PyObject *)__pyx_v_entity);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9children(PyObject *__pyx_v_self, PyObject *__pyx_v_entity); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9children(PyObject *__pyx_v_self, PyObject *__pyx_v_entity) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("children (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_entity), __pyx_ptype_5yapic_6entity_7_entity_EntityType, 1, "entity", 0))) __PYX_ERR(0, 1202, __pyx_L1_error)
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_8children(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self), ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)__pyx_v_entity));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_8children(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *__pyx_v_entity) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("children", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_children(__pyx_v_self, __pyx_v_entity, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yapic.entity._entity.PolymorphMeta.children", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":142
 * @cython.final
 * cdef class PolymorphMeta:
 *     cdef readonly tuple id_fields             # <<<<<<<<<<<<<<
 *     cdef readonly dict entities
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9id_fields_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9id_fields_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_9id_fields___get__(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_9id_fields___get__(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->id_fields);
  __pyx_r = __pyx_v_self->id_fields;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yapic/entity/_entity.pxd":143
 * cdef class PolymorphMeta:
 *     cdef readonly tuple id_fields
 *     cdef readonly dict entities             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */

/* Python wrapper */
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_8entities_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_8entities_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_8entities___get__(((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5yapic_6entity_7_entity_13PolymorphMeta_8entities___get__(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->entities);
  __pyx_r = __pyx_v_self->entities;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "_field.pxd":17
 * 
 * 
 * cdef inline bint field_eq(Field a, Field b):             # <<<<<<<<<<<<<<
 *     return a._uid_ is b._uid_
 *     # return get_alias_target(a._entity_) is get_alias_target(b._entity_) \
 */

static CYTHON_INLINE int __pyx_f_5yapic_6entity_6_field_field_eq(struct __pyx_obj_5yapic_6entity_6_field_Field *__pyx_v_a, struct __pyx_obj_5yapic_6entity_6_field_Field *__pyx_v_b) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("field_eq", 0);

  /* "_field.pxd":18
 * 
 * cdef inline bint field_eq(Field a, Field b):
 *     return a._uid_ is b._uid_             # <<<<<<<<<<<<<<
 *     # return get_alias_target(a._entity_) is get_alias_target(b._entity_) \
 *     #     and a._name_ == b._name_
 */
  __pyx_r = (__pyx_v_a->__pyx_base._uid_ == __pyx_v_b->__pyx_base._uid_);
  goto __pyx_L0;

  /* "_field.pxd":17
 * 
 * 
 * cdef inline bint field_eq(Field a, Field b):             # <<<<<<<<<<<<<<
 *     return a._uid_ is b._uid_
 *     # return get_alias_target(a._entity_) is get_alias_target(b._entity_) \
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_NOTSET(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_NOTSET(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_NOTSET = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.NOTSET", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_NOTSET), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_NOTSET, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_NOTSET, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityType __pyx_vtable_5yapic_6entity_7_entity_EntityType;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityType(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *p;
  PyObject *o = (&PyType_Type)->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)o);
  p->__pyx_vtab = __pyx_vtabptr_5yapic_6entity_7_entity_EntityType;
  p->__attrs__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__fields__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__props__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__pk__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__deferred__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__fix_entries__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__triggers__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__extgroups__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->__deps__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_10EntityType_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityType(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_5yapic_6entity_7_entity_10EntityType_11__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  if (p->__weakref__) PyObject_ClearWeakRefs(o);
  Py_CLEAR(p->__attrs__);
  Py_CLEAR(p->__fields__);
  Py_CLEAR(p->__props__);
  Py_CLEAR(p->__pk__);
  Py_CLEAR(p->__deferred__);
  Py_CLEAR(p->__fix_entries__);
  Py_CLEAR(p->__triggers__);
  Py_CLEAR(p->__extgroups__);
  Py_CLEAR(p->__deps__);
  PyObject_GC_Track(o);
  (&PyType_Type)->tp_dealloc(o);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_EntityType(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)o;
  if (!(&PyType_Type)->tp_traverse); else { e = (&PyType_Type)->tp_traverse(o,v,a); if (e) return e; }
  if (p->__attrs__) {
    e = (*v)(p->__attrs__, a); if (e) return e;
  }
  if (p->__fields__) {
    e = (*v)(p->__fields__, a); if (e) return e;
  }
  if (p->__props__) {
    e = (*v)(p->__props__, a); if (e) return e;
  }
  if (p->__pk__) {
    e = (*v)(p->__pk__, a); if (e) return e;
  }
  if (p->__deferred__) {
    e = (*v)(p->__deferred__, a); if (e) return e;
  }
  if (p->__fix_entries__) {
    e = (*v)(p->__fix_entries__, a); if (e) return e;
  }
  if (p->__triggers__) {
    e = (*v)(p->__triggers__, a); if (e) return e;
  }
  if (p->__extgroups__) {
    e = (*v)(p->__extgroups__, a); if (e) return e;
  }
  if (p->__deps__) {
    e = (*v)(p->__deps__, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_EntityType(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityType *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)o;
  if (!(&PyType_Type)->tp_clear); else (&PyType_Type)->tp_clear(o);
  tmp = ((PyObject*)p->__attrs__);
  p->__attrs__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__fields__);
  p->__fields__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__props__);
  p->__props__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pk__);
  p->__pk__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__deferred__);
  p->__deferred__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__fix_entries__);
  p->__fix_entries__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__triggers__);
  p->__triggers__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__extgroups__);
  p->__extgroups__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__deps__);
  p->__deps__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___meta__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_8__meta___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___registry__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__registry___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___qname__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_9__qname___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___attrs__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_9__attrs___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___fields__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_10__fields___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___props__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_9__props___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___pk__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_6__pk___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___deferred__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__deferred___1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___fix_entries__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___1__get__(o);
}

static int __pyx_setprop_5yapic_6entity_7_entity_10EntityType___fix_entries__(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___3__set__(o, v);
  }
  else {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityType_15__fix_entries___5__del__(o);
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___triggers__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___1__get__(o);
}

static int __pyx_setprop_5yapic_6entity_7_entity_10EntityType___triggers__(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___3__set__(o, v);
  }
  else {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityType_12__triggers___5__del__(o);
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___extgroups__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___1__get__(o);
}

static int __pyx_setprop_5yapic_6entity_7_entity_10EntityType___extgroups__(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___3__set__(o, v);
  }
  else {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityType_13__extgroups___5__del__(o);
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityType___deps__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityType_8__deps___1__get__(o);
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityType[] = {
  {"__prepare__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_10EntityType_5__prepare__, METH_VARARGS|METH_KEYWORDS, 0},
  {"alias", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_10EntityType_9alias, METH_VARARGS|METH_KEYWORDS, 0},
  {"__entity_ready__", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_10EntityType_13__entity_ready__, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_EntityType[] = {
  {(char *)"__meta__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___meta__, 0, (char *)0, 0},
  {(char *)"__registry__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___registry__, 0, (char *)0, 0},
  {(char *)"__qname__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___qname__, 0, (char *)0, 0},
  {(char *)"__attrs__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___attrs__, 0, (char *)0, 0},
  {(char *)"__fields__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___fields__, 0, (char *)0, 0},
  {(char *)"__props__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___props__, 0, (char *)0, 0},
  {(char *)"__pk__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___pk__, 0, (char *)0, 0},
  {(char *)"__deferred__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___deferred__, 0, (char *)0, 0},
  {(char *)"__fix_entries__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___fix_entries__, __pyx_setprop_5yapic_6entity_7_entity_10EntityType___fix_entries__, (char *)0, 0},
  {(char *)"__triggers__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___triggers__, __pyx_setprop_5yapic_6entity_7_entity_10EntityType___triggers__, (char *)0, 0},
  {(char *)"__extgroups__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___extgroups__, __pyx_setprop_5yapic_6entity_7_entity_10EntityType___extgroups__, (char *)0, 0},
  {(char *)"__deps__", __pyx_getprop_5yapic_6entity_7_entity_10EntityType___deps__, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityType = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityType", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityType), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityType, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5yapic_6entity_7_entity_10EntityType_7__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_EntityType, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_EntityType, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityType, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_EntityType, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5yapic_6entity_7_entity_10EntityType_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityType, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityBase(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)o);
  p->__state__ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_10EntityBase_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityBase(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__state__);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_EntityBase(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)o;
  if (p->__state__) {
    e = (*v)(((PyObject *)p->__state__), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_EntityBase(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityBase *)o;
  tmp = ((PyObject*)p->__state__);
  p->__state__ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_5yapic_6entity_7_entity_EntityBase(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_5yapic_6entity_7_entity_EntityBase(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_21__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_tp_richcompare_5yapic_6entity_7_entity_EntityBase(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_9__eq__(o1, o2);
    }
    case Py_NE: {
      return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_11__ne__(o1, o2);
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityBase___pk__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_6__pk___1__get__(o);
}

static int __pyx_setprop_5yapic_6entity_7_entity_10EntityBase___pk__(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_6__pk___3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_10EntityBase___state__(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_9__state___1__get__(o);
}

static PyObject *__pyx_specialmethod___pyx_pw_5yapic_6entity_7_entity_10EntityBase_15__next__(PyObject *self, CYTHON_UNUSED PyObject *arg) {return __pyx_pw_5yapic_6entity_7_entity_10EntityBase_15__next__(self);}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityBase[] = {
  {"__init_subclass__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_10EntityBase_5__init_subclass__, METH_VARARGS|METH_KEYWORDS, 0},
  {"__next__", (PyCFunction)__pyx_specialmethod___pyx_pw_5yapic_6entity_7_entity_10EntityBase_15__next__, METH_NOARGS|METH_COEXIST, 0},
  {"__json__", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_10EntityBase_17__json__, METH_NOARGS, 0},
  {"serialize", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_10EntityBase_23serialize, METH_VARARGS|METH_KEYWORDS, 0},
  {"as_dict", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_10EntityBase_25as_dict, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_EntityBase[] = {
  {(char *)"__pk__", __pyx_getprop_5yapic_6entity_7_entity_10EntityBase___pk__, __pyx_setprop_5yapic_6entity_7_entity_10EntityBase___pk__, (char *)0, 0},
  {(char *)"__state__", __pyx_getprop_5yapic_6entity_7_entity_10EntityBase___state__, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_EntityBase = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_5yapic_6entity_7_entity_EntityBase, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_EntityBase = {
  0, /*mp_length*/
  __pyx_pw_5yapic_6entity_7_entity_10EntityBase_19__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_5yapic_6entity_7_entity_EntityBase, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityBase = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityBase", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityBase), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityBase, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5yapic_6entity_7_entity_10EntityBase_27__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_EntityBase, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_EntityBase, /*tp_as_mapping*/
  __pyx_pw_5yapic_6entity_7_entity_10EntityBase_7__hash__, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_EntityBase, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_EntityBase, /*tp_clear*/
  __pyx_tp_richcompare_5yapic_6entity_7_entity_EntityBase, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_5yapic_6entity_7_entity_10EntityBase_13__iter__, /*tp_iter*/
  __pyx_pw_5yapic_6entity_7_entity_10EntityBase_15__next__, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityBase, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_EntityBase, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5yapic_6entity_7_entity_10EntityBase_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttribute __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttribute(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *p;
  PyObject *o = __pyx_ptype_5yapic_6entity_11_expression_Expression->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression*)__pyx_vtabptr_5yapic_6entity_7_entity_EntityAttribute;
  p->_impl = Py_None; Py_INCREF(Py_None);
  p->_key_ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_name_ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_default_ = Py_None; Py_INCREF(Py_None);
  p->_impl_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)Py_None); Py_INCREF(Py_None);
  p->_entity_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)Py_None); Py_INCREF(Py_None);
  p->_exts_ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_deps_ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttribute(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_impl);
  Py_CLEAR(p->_key_);
  Py_CLEAR(p->_name_);
  Py_CLEAR(p->_default_);
  Py_CLEAR(p->_impl_);
  Py_CLEAR(p->_entity_);
  Py_CLEAR(p->_exts_);
  Py_CLEAR(p->_deps_);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_5yapic_6entity_11_expression_Expression)) __pyx_ptype_5yapic_6entity_11_expression_Expression->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttribute);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttribute(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)o;
  e = ((likely(__pyx_ptype_5yapic_6entity_11_expression_Expression)) ? ((__pyx_ptype_5yapic_6entity_11_expression_Expression->tp_traverse) ? __pyx_ptype_5yapic_6entity_11_expression_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttribute)); if (e) return e;
  if (p->_impl) {
    e = (*v)(p->_impl, a); if (e) return e;
  }
  if (p->_default_) {
    e = (*v)(p->_default_, a); if (e) return e;
  }
  if (p->_impl_) {
    e = (*v)(((PyObject *)p->_impl_), a); if (e) return e;
  }
  if (p->_entity_) {
    e = (*v)(((PyObject *)p->_entity_), a); if (e) return e;
  }
  if (p->_exts_) {
    e = (*v)(p->_exts_, a); if (e) return e;
  }
  if (p->_deps_) {
    e = (*v)(p->_deps_, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttribute(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)o;
  if (likely(__pyx_ptype_5yapic_6entity_11_expression_Expression)) { if (__pyx_ptype_5yapic_6entity_11_expression_Expression->tp_clear) __pyx_ptype_5yapic_6entity_11_expression_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttribute);
  tmp = ((PyObject*)p->_impl);
  p->_impl = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_default_);
  p->_default_ = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_impl_);
  p->_impl_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_entity_);
  p->_entity_ = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_exts_);
  p->_exts_ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_deps_);
  p->_deps_ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_descr_get_5yapic_6entity_7_entity_EntityAttribute(PyObject *o, PyObject *i, PyObject *c) {
  PyObject *r = 0;
  if (!i) i = Py_None;
  if (!c) c = Py_None;
  r = __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5__get__(o, i, c);
  return r;
}

static int __pyx_tp_descr_set_5yapic_6entity_7_entity_EntityAttribute(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_7__set__(o, i, v);
  }
  else {
    return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9__delete__(o, i);
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__key_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5_key__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__index_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_7_index__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__name_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_name__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__default_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9_default__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__impl_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_impl__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__entity_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_8_entity__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__exts_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_exts__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__deps_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_6_deps__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__virtual_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_9_virtual__1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__uid_(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_5_uid__1__get__(o);
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityAttribute[] = {
  {"clone", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_11clone, METH_NOARGS, 0},
  {"clone_exts", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_13clone_exts, METH_O, 0},
  {"get_ext", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_15get_ext, METH_O, 0},
  {"copy_into", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_17copy_into, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_EntityAttribute[] = {
  {(char *)"_key_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__key_, 0, (char *)0, 0},
  {(char *)"_index_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__index_, 0, (char *)0, 0},
  {(char *)"_name_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__name_, 0, (char *)0, 0},
  {(char *)"_default_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__default_, 0, (char *)0, 0},
  {(char *)"_impl_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__impl_, 0, (char *)0, 0},
  {(char *)"_entity_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__entity_, 0, (char *)0, 0},
  {(char *)"_exts_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__exts_, 0, (char *)0, 0},
  {(char *)"_deps_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__deps_, 0, (char *)0, 0},
  {(char *)"_virtual_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__virtual_, 0, (char *)0, 0},
  {(char *)"_uid_", __pyx_getprop_5yapic_6entity_7_entity_15EntityAttribute__uid_, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_EntityAttribute = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  __pyx_pw_5yapic_6entity_7_entity_15EntityAttribute_3__floordiv__, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityAttribute = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityAttribute", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttribute, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_EntityAttribute, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttribute, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttribute, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityAttribute, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_EntityAttribute, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  __pyx_tp_descr_get_5yapic_6entity_7_entity_EntityAttribute, /*tp_descr_get*/
  __pyx_tp_descr_set_5yapic_6entity_7_entity_EntityAttribute, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityAttribute, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeExt __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeExt;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeExt(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)o);
  p->__pyx_vtab = __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeExt;
  p->attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)Py_None); Py_INCREF(Py_None);
  p->_tmp = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->group_by = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_3__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttributeExt(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->attr);
  Py_CLEAR(p->_tmp);
  Py_CLEAR(p->group_by);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttributeExt(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)o;
  if (p->attr) {
    e = (*v)(((PyObject *)p->attr), a); if (e) return e;
  }
  if (p->_tmp) {
    e = (*v)(p->_tmp, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttributeExt(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *)o;
  tmp = ((PyObject*)p->attr);
  p->attr = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_tmp);
  p->_tmp = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_richcompare_5yapic_6entity_7_entity_EntityAttributeExt(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_15__eq__(o1, o2);
    }
    case Py_NE: {
      return __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_17__ne__(o1, o2);
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_18EntityAttributeExt_attr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_4attr_1__get__(o);
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityAttributeExt[] = {
  {"validate_group", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_1validate_group, METH_O, 0},
  {"init", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_7init, METH_O, 0},
  {"bind", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_9bind, METH_NOARGS, 0},
  {"clone", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_11clone, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_EntityAttributeExt[] = {
  {(char *)"attr", __pyx_getprop_5yapic_6entity_7_entity_18EntityAttributeExt_attr, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_EntityAttributeExt = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_5__floordiv__, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityAttributeExt = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityAttributeExt", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_19__repr__, /*tp_repr*/
  &__pyx_tp_as_number_EntityAttributeExt, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  __pyx_pw_5yapic_6entity_7_entity_18EntityAttributeExt_13__hash__, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_clear*/
  __pyx_tp_richcompare_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeExt, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeExtGroup(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)o);
  p->name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->type = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttributeExtGroup(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->name);
  Py_CLEAR(p->items);
  Py_CLEAR(p->type);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttributeExtGroup(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)o;
  if (p->items) {
    e = (*v)(p->items, a); if (e) return e;
  }
  if (p->type) {
    e = (*v)(p->type, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttributeExtGroup(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup *)o;
  tmp = ((PyObject*)p->items);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->type);
  p->type = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_richcompare_5yapic_6entity_7_entity_EntityAttributeExtGroup(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5__eq__(o1, o2);
    }
    case Py_NE: {
      return __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_7__ne__(o1, o2);
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_23EntityAttributeExtGroup_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4name_1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_23EntityAttributeExtGroup_items(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_5items_1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_23EntityAttributeExtGroup_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_4type_1__get__(o);
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityAttributeExtGroup[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_EntityAttributeExtGroup[] = {
  {(char *)"name", __pyx_getprop_5yapic_6entity_7_entity_23EntityAttributeExtGroup_name, 0, (char *)0, 0},
  {(char *)"items", __pyx_getprop_5yapic_6entity_7_entity_23EntityAttributeExtGroup_items, 0, (char *)0, 0},
  {(char *)"type", __pyx_getprop_5yapic_6entity_7_entity_23EntityAttributeExtGroup_type, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityAttributeExtGroup", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExtGroup), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_9__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  __pyx_pw_5yapic_6entity_7_entity_23EntityAttributeExtGroup_3__hash__, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_clear*/
  __pyx_tp_richcompare_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeExtGroup, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityAttributeImpl __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeImpl(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *)o);
  p->__pyx_vtab = __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeImpl;
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttributeImpl(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_tp_richcompare_5yapic_6entity_7_entity_EntityAttributeImpl(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_11__eq__(o1, o2);
    }
    case Py_NE: {
      return __pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_13__ne__(o1, o2);
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityAttributeImpl[] = {
  {"init", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_3init, METH_O, 0},
  {"clone", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_5clone, METH_NOARGS, 0},
  {"getattr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_7getattr, METH_VARARGS|METH_KEYWORDS, 0},
  {"getitem", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_19EntityAttributeImpl_9getitem, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityAttributeImpl", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityAttributeImpl, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_tp_richcompare_5yapic_6entity_7_entity_EntityAttributeImpl, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityAttributeImpl, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityAttributeImpl, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_EntityState __pyx_vtable_5yapic_6entity_7_entity_EntityState;

static struct __pyx_obj_5yapic_6entity_7_entity_EntityState *__pyx_freelist_5yapic_6entity_7_entity_EntityState[1000];
static int __pyx_freecount_5yapic_6entity_7_entity_EntityState = 0;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_EntityState(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *p;
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5yapic_6entity_7_entity_EntityState > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityState)))) {
    o = (PyObject*)__pyx_freelist_5yapic_6entity_7_entity_EntityState[--__pyx_freecount_5yapic_6entity_7_entity_EntityState];
    memset(o, 0, sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityState));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)o);
  p->__pyx_vtab = __pyx_vtabptr_5yapic_6entity_7_entity_EntityState;
  p->entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)Py_None); Py_INCREF(Py_None);
  p->initial = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->current = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_11EntityState_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityState(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->entity);
  Py_CLEAR(p->initial);
  Py_CLEAR(p->current);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5yapic_6entity_7_entity_EntityState < 1000) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityState)))) {
    __pyx_freelist_5yapic_6entity_7_entity_EntityState[__pyx_freecount_5yapic_6entity_7_entity_EntityState++] = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_EntityState(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)o;
  if (p->entity) {
    e = (*v)(((PyObject *)p->entity), a); if (e) return e;
  }
  if (p->initial) {
    e = (*v)(p->initial, a); if (e) return e;
  }
  if (p->current) {
    e = (*v)(p->current, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_EntityState(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_EntityState *p = (struct __pyx_obj_5yapic_6entity_7_entity_EntityState *)o;
  tmp = ((PyObject*)p->entity);
  p->entity = ((struct __pyx_obj_5yapic_6entity_7_entity_EntityType *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->initial);
  p->initial = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->current);
  p->current = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_tp_richcompare_5yapic_6entity_7_entity_EntityState(PyObject *o1, PyObject *o2, int op) {
  switch (op) {
    case Py_EQ: {
      return __pyx_pw_5yapic_6entity_7_entity_11EntityState_14__eq__(o1, o2);
    }
    case Py_NE: {
      return __pyx_pw_5yapic_6entity_7_entity_11EntityState_16__ne__(o1, o2);
    }
    default: {
      return __Pyx_NewRef(Py_NotImplemented);
    }
  }
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_11EntityState_is_dirty(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_11EntityState_8is_dirty_1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_11EntityState_exists(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_11EntityState_6exists_1__get__(o);
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_EntityState[] = {
  {"update", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_11EntityState_3update, METH_VARARGS|METH_KEYWORDS, 0},
  {"changes", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_11EntityState_5changes, METH_VARARGS|METH_KEYWORDS, 0},
  {"changes_with_previous", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_11EntityState_7changes_with_previous, METH_NOARGS, 0},
  {"reset", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_5yapic_6entity_7_entity_11EntityState_9reset, METH_VARARGS|METH_KEYWORDS, 0},
  {"changed_realtions", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_11EntityState_11changed_realtions, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_EntityState[] = {
  {(char *)"is_dirty", __pyx_getprop_5yapic_6entity_7_entity_11EntityState_is_dirty, 0, (char *)0, 0},
  {(char *)"exists", __pyx_getprop_5yapic_6entity_7_entity_11EntityState_exists, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_EntityState = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.EntityState", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_EntityState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_EntityState, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_EntityState, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_EntityState, /*tp_clear*/
  __pyx_tp_richcompare_5yapic_6entity_7_entity_EntityState, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_EntityState, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_EntityState, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_EntityState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_DependencyList __pyx_vtable_5yapic_6entity_7_entity_DependencyList;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_DependencyList(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *p;
  PyObject *o = (&PyList_Type)->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)o);
  p->__pyx_vtab = __pyx_vtabptr_5yapic_6entity_7_entity_DependencyList;
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->circular = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_14DependencyList_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_DependencyList(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *p = (struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->items);
  Py_CLEAR(p->circular);
  PyObject_GC_Track(o);
  (&PyList_Type)->tp_dealloc(o);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_DependencyList(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *p = (struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)o;
  if (!(&PyList_Type)->tp_traverse); else { e = (&PyList_Type)->tp_traverse(o,v,a); if (e) return e; }
  if (p->items) {
    e = (*v)(p->items, a); if (e) return e;
  }
  if (p->circular) {
    e = (*v)(p->circular, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_DependencyList(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *p = (struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *)o;
  if (!(&PyList_Type)->tp_clear); else (&PyList_Type)->tp_clear(o);
  tmp = ((PyObject*)p->items);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->circular);
  p->circular = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_DependencyList[] = {
  {"add", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_14DependencyList_3add, METH_O, 0},
  {"index", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_14DependencyList_5index, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_DependencyList = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.DependencyList", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_DependencyList, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_DependencyList, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_DependencyList, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_DependencyList, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_DependencyList, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_5yapic_6entity_7_entity_PolymorphMeta __pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity_PolymorphMeta(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)o);
  p->__pyx_vtab = __pyx_vtabptr_5yapic_6entity_7_entity_PolymorphMeta;
  p->id_fields = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->entities = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity_PolymorphMeta(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *p = (struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->id_fields);
  Py_CLEAR(p->entities);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity_PolymorphMeta(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *p = (struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)o;
  if (p->id_fields) {
    e = (*v)(p->id_fields, a); if (e) return e;
  }
  if (p->entities) {
    e = (*v)(p->entities, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5yapic_6entity_7_entity_PolymorphMeta(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *p = (struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *)o;
  tmp = ((PyObject*)p->id_fields);
  p->id_fields = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->entities);
  p->entities = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_13PolymorphMeta_id_fields(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9id_fields_1__get__(o);
}

static PyObject *__pyx_getprop_5yapic_6entity_7_entity_13PolymorphMeta_entities(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_8entities_1__get__(o);
}

static PyMethodDef __pyx_methods_5yapic_6entity_7_entity_PolymorphMeta[] = {
  {"get_entity", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_3get_entity, METH_O, 0},
  {"new_entity", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_5new_entity, METH_O, 0},
  {"parents", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_7parents, METH_O, 0},
  {"children", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_13PolymorphMeta_9children, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5yapic_6entity_7_entity_PolymorphMeta[] = {
  {(char *)"id_fields", __pyx_getprop_5yapic_6entity_7_entity_13PolymorphMeta_id_fields, 0, (char *)0, 0},
  {(char *)"entities", __pyx_getprop_5yapic_6entity_7_entity_13PolymorphMeta_entities, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5yapic_6entity_7_entity_PolymorphMeta = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.PolymorphMeta", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity_PolymorphMeta, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity_PolymorphMeta, /*tp_traverse*/
  __pyx_tp_clear_5yapic_6entity_7_entity_PolymorphMeta, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5yapic_6entity_7_entity_PolymorphMeta, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5yapic_6entity_7_entity_PolymorphMeta, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity_PolymorphMeta, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *__pyx_freelist_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions[8];
static int __pyx_freecount_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions = 0;

static PyObject *__pyx_tp_new_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions)))) {
    o = (PyObject*)__pyx_freelist_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions[--__pyx_freecount_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions];
    memset(o, 0, sizeof(struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions(PyObject *o) {
  struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *p = (struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_attr);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_val);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions)))) {
    __pyx_freelist_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions[__pyx_freecount_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions++] = ((struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *p = (struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions *)o;
  if (p->__pyx_v_attr) {
    e = (*v)(((PyObject *)p->__pyx_v_attr), a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_val) {
    e = (*v)(p->__pyx_v_val, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions = {
  PyVarObject_HEAD_INIT(0, 0)
  "yapic.entity._entity.__pyx_scope_struct__changed_realtions", /*tp_name*/
  sizeof(struct __pyx_obj_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {"is_entity_alias", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_1is_entity_alias, METH_O, 0},
  {"get_alias_target", (PyCFunction)__pyx_pw_5yapic_6entity_7_entity_3get_alias_target, METH_O, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec__entity(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec__entity},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "_entity",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_Alias, __pyx_k_Alias, sizeof(__pyx_k_Alias), 0, 1, 0, 0},
  {&__pyx_n_u_CASCADE, __pyx_k_CASCADE, sizeof(__pyx_k_CASCADE), 0, 1, 0, 1},
  {&__pyx_kp_u_Can_t_alias_deferred_entity, __pyx_k_Can_t_alias_deferred_entity, sizeof(__pyx_k_Can_t_alias_deferred_entity), 0, 1, 0, 0},
  {&__pyx_kp_u_Can_t_rebind_entity_attribute, __pyx_k_Can_t_rebind_entity_attribute, sizeof(__pyx_k_Can_t_rebind_entity_attribute), 0, 1, 0, 0},
  {&__pyx_kp_u_Can_t_resolve_circular_reference, __pyx_k_Can_t_resolve_circular_reference, sizeof(__pyx_k_Can_t_resolve_circular_reference), 0, 1, 0, 0},
  {&__pyx_n_s_DependencyList, __pyx_k_DependencyList, sizeof(__pyx_k_DependencyList), 0, 0, 1, 1},
  {&__pyx_n_s_Entity, __pyx_k_Entity, sizeof(__pyx_k_Entity), 0, 0, 1, 1},
  {&__pyx_n_s_EntityAttribute, __pyx_k_EntityAttribute, sizeof(__pyx_k_EntityAttribute), 0, 0, 1, 1},
  {&__pyx_n_s_EntityAttributeExt, __pyx_k_EntityAttributeExt, sizeof(__pyx_k_EntityAttributeExt), 0, 0, 1, 1},
  {&__pyx_n_s_EntityAttributeExtGroup, __pyx_k_EntityAttributeExtGroup, sizeof(__pyx_k_EntityAttributeExtGroup), 0, 0, 1, 1},
  {&__pyx_n_s_EntityAttributeImpl, __pyx_k_EntityAttributeImpl, sizeof(__pyx_k_EntityAttributeImpl), 0, 0, 1, 1},
  {&__pyx_n_s_EntityBase, __pyx_k_EntityBase, sizeof(__pyx_k_EntityBase), 0, 0, 1, 1},
  {&__pyx_n_s_EntitySerializer, __pyx_k_EntitySerializer, sizeof(__pyx_k_EntitySerializer), 0, 0, 1, 1},
  {&__pyx_n_s_EntityState, __pyx_k_EntityState, sizeof(__pyx_k_EntityState), 0, 0, 1, 1},
  {&__pyx_n_s_EntityState_changed_realtions, __pyx_k_EntityState_changed_realtions, sizeof(__pyx_k_EntityState_changed_realtions), 0, 0, 1, 1},
  {&__pyx_n_s_EntityType, __pyx_k_EntityType, sizeof(__pyx_k_EntityType), 0, 0, 1, 1},
  {&__pyx_kp_u_Entity_is_not_resolved, __pyx_k_Entity_is_not_resolved, sizeof(__pyx_k_Entity_is_not_resolved), 0, 1, 0, 0},
  {&__pyx_kp_u_Entity_s, __pyx_k_Entity_s, sizeof(__pyx_k_Entity_s), 0, 1, 0, 0},
  {&__pyx_kp_u_Instance_must_be_None_or_EntityB, __pyx_k_Instance_must_be_None_or_EntityB, sizeof(__pyx_k_Instance_must_be_None_or_EntityB), 0, 1, 0, 0},
  {&__pyx_n_s_ItemsView, __pyx_k_ItemsView, sizeof(__pyx_k_ItemsView), 0, 0, 1, 1},
  {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
  {&__pyx_kp_u_Missing_attribute_implementation, __pyx_k_Missing_attribute_implementation, sizeof(__pyx_k_Missing_attribute_implementation), 0, 1, 0, 0},
  {&__pyx_kp_u_More_than_one_Entity_base_is_not, __pyx_k_More_than_one_Entity_base_is_not, sizeof(__pyx_k_More_than_one_Entity_base_is_not), 0, 1, 0, 0},
  {&__pyx_n_s_NOTSET, __pyx_k_NOTSET, sizeof(__pyx_k_NOTSET), 0, 0, 1, 1},
  {&__pyx_n_s_NameError, __pyx_k_NameError, sizeof(__pyx_k_NameError), 0, 0, 1, 1},
  {&__pyx_kp_u_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 1, 0, 0},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_PolymorphMeta, __pyx_k_PolymorphMeta, sizeof(__pyx_k_PolymorphMeta), 0, 0, 1, 1},
  {&__pyx_n_s_REGISTRY, __pyx_k_REGISTRY, sizeof(__pyx_k_REGISTRY), 0, 0, 1, 1},
  {&__pyx_kp_u_Relation_expected_but_got_r, __pyx_k_Relation_expected_but_got_r, sizeof(__pyx_k_Relation_expected_but_got_r), 0, 1, 0, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_SerializerCtx, __pyx_k_SerializerCtx, sizeof(__pyx_k_SerializerCtx), 0, 0, 1, 1},
  {&__pyx_n_s_StopIteration, __pyx_k_StopIteration, sizeof(__pyx_k_StopIteration), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_kp_u_Unexpected_value_for_polymorph_i, __pyx_k_Unexpected_value_for_polymorph_i, sizeof(__pyx_k_Unexpected_value_for_polymorph_i), 0, 1, 0, 0},
  {&__pyx_kp_u_Unsupported_key_type_r, __pyx_k_Unsupported_key_type_r, sizeof(__pyx_k_Unsupported_key_type_r), 0, 1, 0, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_u__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 1, 0, 0},
  {&__pyx_kp_u__11, __pyx_k__11, sizeof(__pyx_k__11), 0, 1, 0, 0},
  {&__pyx_kp_u__12, __pyx_k__12, sizeof(__pyx_k__12), 0, 1, 0, 0},
  {&__pyx_kp_u__13, __pyx_k__13, sizeof(__pyx_k__13), 0, 1, 0, 0},
  {&__pyx_kp_u__14, __pyx_k__14, sizeof(__pyx_k__14), 0, 1, 0, 0},
  {&__pyx_kp_u__17, __pyx_k__17, sizeof(__pyx_k__17), 0, 1, 0, 0},
  {&__pyx_kp_u__18, __pyx_k__18, sizeof(__pyx_k__18), 0, 1, 0, 0},
  {&__pyx_kp_u__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 1, 0, 0},
  {&__pyx_kp_u__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0, 0},
  {&__pyx_kp_u__6, __pyx_k__6, sizeof(__pyx_k__6), 0, 1, 0, 0},
  {&__pyx_kp_u__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 1, 0, 0},
  {&__pyx_n_s_add, __pyx_k_add, sizeof(__pyx_k_add), 0, 0, 1, 1},
  {&__pyx_n_s_alias, __pyx_k_alias, sizeof(__pyx_k_alias), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_as_dict, __pyx_k_as_dict, sizeof(__pyx_k_as_dict), 0, 0, 1, 1},
  {&__pyx_n_s_attr, __pyx_k_attr, sizeof(__pyx_k_attr), 0, 0, 1, 1},
  {&__pyx_n_s_attrgetter, __pyx_k_attrgetter, sizeof(__pyx_k_attrgetter), 0, 0, 1, 1},
  {&__pyx_n_s_bind, __pyx_k_bind, sizeof(__pyx_k_bind), 0, 0, 1, 1},
  {&__pyx_n_s_changed_realtions, __pyx_k_changed_realtions, sizeof(__pyx_k_changed_realtions), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_clone, __pyx_k_clone, sizeof(__pyx_k_clone), 0, 0, 1, 1},
  {&__pyx_n_s_clone_exts, __pyx_k_clone_exts, sizeof(__pyx_k_clone_exts), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_collections_abc, __pyx_k_collections_abc, sizeof(__pyx_k_collections_abc), 0, 0, 1, 1},
  {&__pyx_n_s_copy_into, __pyx_k_copy_into, sizeof(__pyx_k_copy_into), 0, 0, 1, 1},
  {&__pyx_n_s_ctx, __pyx_k_ctx, sizeof(__pyx_k_ctx), 0, 0, 1, 1},
  {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
  {&__pyx_n_s_deps, __pyx_k_deps, sizeof(__pyx_k_deps), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_ent, __pyx_k_ent, sizeof(__pyx_k_ent), 0, 0, 1, 1},
  {&__pyx_n_s_entity, __pyx_k_entity, sizeof(__pyx_k_entity), 0, 0, 1, 1},
  {&__pyx_n_s_entity_ready, __pyx_k_entity_ready, sizeof(__pyx_k_entity_ready), 0, 0, 1, 1},
  {&__pyx_n_s_entity_serializer, __pyx_k_entity_serializer, sizeof(__pyx_k_entity_serializer), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_eq, __pyx_k_eq, sizeof(__pyx_k_eq), 0, 0, 1, 1},
  {&__pyx_n_s_fields, __pyx_k_fields, sizeof(__pyx_k_fields), 0, 0, 1, 1},
  {&__pyx_n_u_fields, __pyx_k_fields, sizeof(__pyx_k_fields), 0, 1, 0, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_get_entity, __pyx_k_get_entity, sizeof(__pyx_k_get_entity), 0, 0, 1, 1},
  {&__pyx_n_s_get_ext, __pyx_k_get_ext, sizeof(__pyx_k_get_ext), 0, 0, 1, 1},
  {&__pyx_n_s_getattr, __pyx_k_getattr, sizeof(__pyx_k_getattr), 0, 0, 1, 1},
  {&__pyx_n_s_getitem, __pyx_k_getitem, sizeof(__pyx_k_getitem), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_index_2, __pyx_k_index_2, sizeof(__pyx_k_index_2), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_init_2, __pyx_k_init_2, sizeof(__pyx_k_init_2), 0, 0, 1, 1},
  {&__pyx_n_s_init_subclass, __pyx_k_init_subclass, sizeof(__pyx_k_init_subclass), 0, 0, 1, 1},
  {&__pyx_n_s_is_alias, __pyx_k_is_alias, sizeof(__pyx_k_is_alias), 0, 0, 1, 1},
  {&__pyx_n_u_is_alias, __pyx_k_is_alias, sizeof(__pyx_k_is_alias), 0, 1, 0, 1},
  {&__pyx_n_s_is_initial, __pyx_k_is_initial, sizeof(__pyx_k_is_initial), 0, 0, 1, 1},
  {&__pyx_n_u_is_type, __pyx_k_is_type, sizeof(__pyx_k_is_type), 0, 1, 0, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_joined, __pyx_k_joined, sizeof(__pyx_k_joined), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_key_2, __pyx_k_key_2, sizeof(__pyx_k_key_2), 0, 0, 1, 1},
  {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
  {&__pyx_n_s_locals, __pyx_k_locals, sizeof(__pyx_k_locals), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_map, __pyx_k_map, sizeof(__pyx_k_map), 0, 0, 1, 1},
  {&__pyx_n_s_meta, __pyx_k_meta, sizeof(__pyx_k_meta), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_mro, __pyx_k_mro, sizeof(__pyx_k_mro), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_u_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 1, 0, 1},
  {&__pyx_n_s_name_3, __pyx_k_name_3, sizeof(__pyx_k_name_3), 0, 0, 1, 1},
  {&__pyx_n_s_next, __pyx_k_next, sizeof(__pyx_k_next), 0, 0, 1, 1},
  {&__pyx_kp_u_of, __pyx_k_of, sizeof(__pyx_k_of), 0, 1, 0, 0},
  {&__pyx_n_s_on_delete, __pyx_k_on_delete, sizeof(__pyx_k_on_delete), 0, 0, 1, 1},
  {&__pyx_n_s_on_update, __pyx_k_on_update, sizeof(__pyx_k_on_update), 0, 0, 1, 1},
  {&__pyx_n_s_operator, __pyx_k_operator, sizeof(__pyx_k_operator), 0, 0, 1, 1},
  {&__pyx_n_s_pk, __pyx_k_pk, sizeof(__pyx_k_pk), 0, 0, 1, 1},
  {&__pyx_n_u_polymorph, __pyx_k_polymorph, sizeof(__pyx_k_polymorph), 0, 1, 0, 1},
  {&__pyx_n_u_polymorph_id, __pyx_k_polymorph_id, sizeof(__pyx_k_polymorph_id), 0, 1, 0, 1},
  {&__pyx_n_s_pop, __pyx_k_pop, sizeof(__pyx_k_pop), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_qname, __pyx_k_qname, sizeof(__pyx_k_qname), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_registry, __pyx_k_registry, sizeof(__pyx_k_registry), 0, 0, 1, 1},
  {&__pyx_n_s_registry_2, __pyx_k_registry_2, sizeof(__pyx_k_registry_2), 0, 0, 1, 1},
  {&__pyx_n_s_repr, __pyx_k_repr, sizeof(__pyx_k_repr), 0, 0, 1, 1},
  {&__pyx_n_s_root, __pyx_k_root, sizeof(__pyx_k_root), 0, 0, 1, 1},
  {&__pyx_n_s_schema, __pyx_k_schema, sizeof(__pyx_k_schema), 0, 0, 1, 1},
  {&__pyx_n_u_schema, __pyx_k_schema, sizeof(__pyx_k_schema), 0, 1, 0, 1},
  {&__pyx_n_s_scope, __pyx_k_scope, sizeof(__pyx_k_scope), 0, 0, 1, 1},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_u_slots, __pyx_k_slots, sizeof(__pyx_k_slots), 0, 1, 0, 1},
  {&__pyx_n_s_sorted, __pyx_k_sorted, sizeof(__pyx_k_sorted), 0, 0, 1, 1},
  {&__pyx_kp_s_src_yapic_entity__entity_pyx, __pyx_k_src_yapic_entity__entity_pyx, sizeof(__pyx_k_src_yapic_entity__entity_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_string, __pyx_k_string, sizeof(__pyx_k_string), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_triggers, __pyx_k_triggers, sizeof(__pyx_k_triggers), 0, 0, 1, 1},
  {&__pyx_n_u_triggers, __pyx_k_triggers, sizeof(__pyx_k_triggers), 0, 1, 0, 1},
  {&__pyx_n_s_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_validate_group, __pyx_k_validate_group, sizeof(__pyx_k_validate_group), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_yapic_entity__entity, __pyx_k_yapic_entity__entity, sizeof(__pyx_k_yapic_entity__entity), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 236, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 53, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 77, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 100, __pyx_L1_error)
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(0, 151, __pyx_L1_error)
  __pyx_builtin_id = __Pyx_GetBuiltinName(__pyx_n_s_id); if (!__pyx_builtin_id) __PYX_ERR(0, 272, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 427, __pyx_L1_error)
  __pyx_builtin_NameError = __Pyx_GetBuiltinName(__pyx_n_s_NameError); if (!__pyx_builtin_NameError) __PYX_ERR(0, 451, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 472, __pyx_L1_error)
  __pyx_builtin_map = __Pyx_GetBuiltinName(__pyx_n_s_map); if (!__pyx_builtin_map) __PYX_ERR(0, 560, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 791, __pyx_L1_error)
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 867, __pyx_L1_error)
  __pyx_builtin_StopIteration = __Pyx_GetBuiltinName(__pyx_n_s_StopIteration); if (!__pyx_builtin_StopIteration) __PYX_ERR(0, 1002, __pyx_L1_error)
  __pyx_builtin_sorted = __Pyx_GetBuiltinName(__pyx_n_s_sorted); if (!__pyx_builtin_sorted) __PYX_ERR(0, 1067, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "yapic/entity/_entity.pyx":46
 *         cdef PolymorphMeta poly_meta = None
 *         cdef tuple hints
 *         cdef object polymorph = self.__meta__.get("polymorph", None)             # <<<<<<<<<<<<<<
 * 
 *         for base in bases:
 */
  __pyx_tuple_ = PyTuple_Pack(2, __pyx_n_u_polymorph, Py_None); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "yapic/entity/_entity.pyx":53
 *                     base_entity = base
 *                 else:
 *                     raise ValueError("More than one Entity base is not allowed")             # <<<<<<<<<<<<<<
 * 
 *             if hasattr(base, "__triggers__"):
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_More_than_one_Entity_base_is_not); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "yapic/entity/_entity.pyx":77
 *             # aliased.resolve_deferred()
 *             if not aliased.resolve_deferred():
 *                 raise RuntimeError("Can't alias deferred entity")             # <<<<<<<<<<<<<<
 * 
 *             for v in aliased.__attrs__:
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_Can_t_alias_deferred_entity); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "yapic/entity/_entity.pyx":411
 *         if other.attr is not None:
 *             if other.attr is not self:
 *                 raise RuntimeError("Can't rebind entity attribute")             # <<<<<<<<<<<<<<
 *         else:
 *             other.attr = self
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_Can_t_rebind_entity_attribute); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "yapic/entity/_entity.pyx":427
 *                 return res
 *         else:
 *             raise TypeError("Instance must be 'None' or 'EntityBase'")             # <<<<<<<<<<<<<<
 * 
 *     def __set__(self, EntityBase instance, value):
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_Instance_must_be_None_or_EntityB); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "yapic/entity/_entity.pyx":868
 *         if not model.resolve_deferred():
 *             print(model.__deferred__)
 *             raise RuntimeError("Entity is not resolved...")             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(state, EntityState):
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_u_Entity_is_not_resolved); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "yapic/entity/_entity.pyx":1043
 * 
 *     def __repr__(self):
 *         is_type = (type(self).__meta__.get("is_type", False))             # <<<<<<<<<<<<<<
 *         if is_type is True:
 *             return "<%s %r>" % (type(self).__qname__, self.as_dict())
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_n_u_is_type, Py_False); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "yapic/entity/_entity.pyx":1118
 * 
 *         if entity_dep and dep_entity:
 *             raise ValueError("Can't resolve circular reference")             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_u_Can_t_resolve_circular_reference); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 1118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "yapic/entity/_entity.pyx":237
 * 
 *     @staticmethod
 *     def __prepare__(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         scope = type.__prepare__(*args, **kwargs)
 *         scope["__slots__"] = ()
 */
  __pyx_tuple__20 = PyTuple_Pack(3, __pyx_n_s_args, __pyx_n_s_kwargs, __pyx_n_s_scope); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_src_yapic_entity__entity_pyx, __pyx_n_s_prepare, 237, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_pop.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_update.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("is_entity_alias", (void (*)(void))__pyx_f_5yapic_6entity_7_entity_is_entity_alias, "int (PyObject *, int __pyx_skip_dispatch)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("get_alias_target", (void (*)(void))__pyx_f_5yapic_6entity_7_entity_get_alias_target, "struct __pyx_obj_5yapic_6entity_7_entity_EntityType *(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_NOTSET) < 0) __PYX_ERR(0, 24, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_NOTSET.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_NOTSET.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_NOTSET.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_NOTSET.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_NOTSET, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_NOTSET) < 0) __PYX_ERR(0, 24, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_NOTSET = &__pyx_type_5yapic_6entity_7_entity_NOTSET;
  __pyx_vtabptr_5yapic_6entity_7_entity_EntityType = &__pyx_vtable_5yapic_6entity_7_entity_EntityType;
  __pyx_vtable_5yapic_6entity_7_entity_EntityType.resolve_deferred = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *))__pyx_f_5yapic_6entity_7_entity_10EntityType_resolve_deferred;
  __pyx_vtable_5yapic_6entity_7_entity_EntityType.__pyx___entity_ready__ = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_10EntityType___entity_ready__;
  __pyx_type_5yapic_6entity_7_entity_EntityType.tp_base = (&PyType_Type);
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityType) < 0) __PYX_ERR(0, 30, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityType.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityType.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityType.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityType.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_EntityType.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_EntityType) < 0) __PYX_ERR(0, 30, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityType, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityType) < 0) __PYX_ERR(0, 30, __pyx_L1_error)
  if (__pyx_type_5yapic_6entity_7_entity_EntityType.tp_weaklistoffset == 0) __pyx_type_5yapic_6entity_7_entity_EntityType.tp_weaklistoffset = offsetof(struct __pyx_obj_5yapic_6entity_7_entity_EntityType, __weakref__);
  __pyx_ptype_5yapic_6entity_7_entity_EntityType = &__pyx_type_5yapic_6entity_7_entity_EntityType;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityBase) < 0) __PYX_ERR(0, 862, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityBase.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityBase.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityBase.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityBase.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityBase, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityBase) < 0) __PYX_ERR(0, 862, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_EntityBase = &__pyx_type_5yapic_6entity_7_entity_EntityBase;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._expression"); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_11_expression_Expression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "Expression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_Expression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_Expression) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_Expression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_Expression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_Expression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_Expression)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttribute = &__pyx_vtable_5yapic_6entity_7_entity_EntityAttribute;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.__pyx_base = *__pyx_vtabptr_5yapic_6entity_11_expression_Expression;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.init = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *))__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_init;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.bind = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *))__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_bind;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.clone = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.get_ext = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_get_ext;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.clone_exts = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_clone_exts;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttribute.copy_into = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_15EntityAttribute_copy_into;
  __pyx_type_5yapic_6entity_7_entity_EntityAttribute.tp_base = __pyx_ptype_5yapic_6entity_11_expression_Expression;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityAttribute) < 0) __PYX_ERR(0, 388, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityAttribute.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityAttribute.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityAttribute.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityAttribute.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_EntityAttribute.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttribute) < 0) __PYX_ERR(0, 388, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityAttribute, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityAttribute) < 0) __PYX_ERR(0, 388, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_EntityAttribute = &__pyx_type_5yapic_6entity_7_entity_EntityAttribute;
  __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeExt = &__pyx_vtable_5yapic_6entity_7_entity_EntityAttributeExt;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeExt.init = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_init;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeExt.bind = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_bind;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeExt.clone = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeExt *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_18EntityAttributeExt_clone;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityAttributeExt) < 0) __PYX_ERR(0, 495, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityAttributeExt.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityAttributeExt.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityAttributeExt.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityAttributeExt.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_EntityAttributeExt.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeExt) < 0) __PYX_ERR(0, 495, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityAttributeExt, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityAttributeExt) < 0) __PYX_ERR(0, 495, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt = &__pyx_type_5yapic_6entity_7_entity_EntityAttributeExt;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup) < 0) __PYX_ERR(0, 545, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityAttributeExtGroup, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup) < 0) __PYX_ERR(0, 545, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExtGroup = &__pyx_type_5yapic_6entity_7_entity_EntityAttributeExtGroup;
  __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeImpl = &__pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.init = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_init;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.clone = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_clone;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.getattr = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getattr;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.getitem = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_getitem;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.state_init = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, PyObject *))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_init;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.state_set = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, PyObject *, PyObject *, PyObject *))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_set;
  __pyx_vtable_5yapic_6entity_7_entity_EntityAttributeImpl.state_get_dirty = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityAttributeImpl *, PyObject *, PyObject *))__pyx_f_5yapic_6entity_7_entity_19EntityAttributeImpl_state_get_dirty;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl) < 0) __PYX_ERR(0, 563, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_EntityAttributeImpl) < 0) __PYX_ERR(0, 563, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityAttributeImpl, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl) < 0) __PYX_ERR(0, 563, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_EntityAttributeImpl = &__pyx_type_5yapic_6entity_7_entity_EntityAttributeImpl;
  __pyx_vtabptr_5yapic_6entity_7_entity_EntityState = &__pyx_vtable_5yapic_6entity_7_entity_EntityState;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.init = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *))__pyx_f_5yapic_6entity_7_entity_11EntityState_init;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.update = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, PyObject *, int __pyx_skip_dispatch, struct __pyx_opt_args_5yapic_6entity_7_entity_11EntityState_update *__pyx_optional_args))__pyx_f_5yapic_6entity_7_entity_11EntityState_update;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.set_value = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *))__pyx_f_5yapic_6entity_7_entity_11EntityState_set_value;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.set_initial_value = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *, PyObject *))__pyx_f_5yapic_6entity_7_entity_11EntityState_set_initial_value;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.get_value = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *))__pyx_f_5yapic_6entity_7_entity_11EntityState_get_value;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.del_value = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *))__pyx_f_5yapic_6entity_7_entity_11EntityState_del_value;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.data_for_insert = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *))__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_insert;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.data_for_update = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *))__pyx_f_5yapic_6entity_7_entity_11EntityState_data_for_update;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.attr_changes = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *))__pyx_f_5yapic_6entity_7_entity_11EntityState_attr_changes;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.reset_all = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *))__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_all;
  __pyx_vtable_5yapic_6entity_7_entity_EntityState.reset_attr = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_EntityState *, struct __pyx_obj_5yapic_6entity_7_entity_EntityAttribute *))__pyx_f_5yapic_6entity_7_entity_11EntityState_reset_attr;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_EntityState) < 0) __PYX_ERR(0, 610, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_EntityState.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_EntityState.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_EntityState.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_EntityState.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_EntityState.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_EntityState) < 0) __PYX_ERR(0, 610, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EntityState, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_EntityState) < 0) __PYX_ERR(0, 610, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_EntityState = &__pyx_type_5yapic_6entity_7_entity_EntityState;
  __pyx_vtabptr_5yapic_6entity_7_entity_DependencyList = &__pyx_vtable_5yapic_6entity_7_entity_DependencyList;
  __pyx_vtable_5yapic_6entity_7_entity_DependencyList.add = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_14DependencyList_add;
  __pyx_vtable_5yapic_6entity_7_entity_DependencyList.index = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_14DependencyList_index;
  __pyx_vtable_5yapic_6entity_7_entity_DependencyList._add = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *))__pyx_f_5yapic_6entity_7_entity_14DependencyList__add;
  __pyx_vtable_5yapic_6entity_7_entity_DependencyList._resolve_circular = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_DependencyList *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *))__pyx_f_5yapic_6entity_7_entity_14DependencyList__resolve_circular;
  __pyx_type_5yapic_6entity_7_entity_DependencyList.tp_base = (&PyList_Type);
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_DependencyList) < 0) __PYX_ERR(0, 1055, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_DependencyList.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_DependencyList.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_DependencyList.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_DependencyList.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_DependencyList.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_DependencyList) < 0) __PYX_ERR(0, 1055, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_DependencyList, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_DependencyList) < 0) __PYX_ERR(0, 1055, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_DependencyList = &__pyx_type_5yapic_6entity_7_entity_DependencyList;
  __pyx_vtabptr_5yapic_6entity_7_entity_PolymorphMeta = &__pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta;
  __pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta.normalize_id = (PyObject *(*)(PyObject *))__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_normalize_id;
  __pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta.add = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, PyObject *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *))__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_add;
  __pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta.parents = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_parents;
  __pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta.children = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, int __pyx_skip_dispatch))__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta_children;
  __pyx_vtable_5yapic_6entity_7_entity_PolymorphMeta._parents = (PyObject *(*)(struct __pyx_obj_5yapic_6entity_7_entity_PolymorphMeta *, struct __pyx_obj_5yapic_6entity_7_entity_EntityType *, PyObject *))__pyx_f_5yapic_6entity_7_entity_13PolymorphMeta__parents;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity_PolymorphMeta) < 0) __PYX_ERR(0, 1150, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity_PolymorphMeta.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity_PolymorphMeta.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity_PolymorphMeta.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity_PolymorphMeta.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  if (__Pyx_SetVtable(__pyx_type_5yapic_6entity_7_entity_PolymorphMeta.tp_dict, __pyx_vtabptr_5yapic_6entity_7_entity_PolymorphMeta) < 0) __PYX_ERR(0, 1150, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PolymorphMeta, (PyObject *)&__pyx_type_5yapic_6entity_7_entity_PolymorphMeta) < 0) __PYX_ERR(0, 1150, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_7_entity_PolymorphMeta = &__pyx_type_5yapic_6entity_7_entity_PolymorphMeta;
  if (PyType_Ready(&__pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions) < 0) __PYX_ERR(0, 827, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions.tp_dictoffset && __pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions = &__pyx_type_5yapic_6entity_7_entity___pyx_scope_struct__changed_realtions;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._expression"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_11_expression_Visitor = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "Visitor", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_Visitor), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_Visitor) __PYX_ERR(3, 4, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_Visitor = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_Visitor*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_Visitor->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_Visitor)) __PYX_ERR(3, 4, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_BinaryExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "BinaryExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_BinaryExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_BinaryExpression) __PYX_ERR(3, 18, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_BinaryExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_BinaryExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_BinaryExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_BinaryExpression)) __PYX_ERR(3, 18, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_UnaryExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "UnaryExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_UnaryExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_UnaryExpression) __PYX_ERR(3, 25, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_UnaryExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_UnaryExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_UnaryExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_UnaryExpression)) __PYX_ERR(3, 25, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_CastExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "CastExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_CastExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_CastExpression) __PYX_ERR(3, 30, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_CastExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_CastExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_CastExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_CastExpression)) __PYX_ERR(3, 30, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_ConstExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "ConstExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_ConstExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_ConstExpression) __PYX_ERR(3, 35, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_ConstExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_ConstExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_ConstExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_ConstExpression)) __PYX_ERR(3, 35, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_AliasExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "AliasExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_AliasExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_AliasExpression) __PYX_ERR(3, 40, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_AliasExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_AliasExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_AliasExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_AliasExpression)) __PYX_ERR(3, 40, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_DirectionExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "DirectionExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_DirectionExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_DirectionExpression) __PYX_ERR(3, 48, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_DirectionExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_DirectionExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_DirectionExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_DirectionExpression)) __PYX_ERR(3, 48, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_CallExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "CallExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_CallExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_CallExpression) __PYX_ERR(3, 53, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_CallExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_CallExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_CallExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_CallExpression)) __PYX_ERR(3, 53, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_RawExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "RawExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_RawExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_RawExpression) __PYX_ERR(3, 58, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_RawExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_RawExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_RawExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_RawExpression)) __PYX_ERR(3, 58, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_PathExpression = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "PathExpression", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_PathExpression), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_PathExpression) __PYX_ERR(3, 62, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_PathExpression = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_PathExpression*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_PathExpression->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_PathExpression)) __PYX_ERR(3, 62, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionVal = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "VirtualExpressionVal", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionVal), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionVal) __PYX_ERR(3, 66, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionVal = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionVal*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionVal->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionVal)) __PYX_ERR(3, 66, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionBinary = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "VirtualExpressionBinary", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionBinary), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionBinary) __PYX_ERR(3, 73, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionBinary = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionBinary*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionBinary->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionBinary)) __PYX_ERR(3, 73, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionDir = __Pyx_ImportType(__pyx_t_1, "yapic.entity._expression", "VirtualExpressionDir", sizeof(struct __pyx_obj_5yapic_6entity_11_expression_VirtualExpressionDir), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionDir) __PYX_ERR(3, 77, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionDir = (struct __pyx_vtabstruct_5yapic_6entity_11_expression_VirtualExpressionDir*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_expression_VirtualExpressionDir->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_expression_VirtualExpressionDir)) __PYX_ERR(3, 77, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._registry"); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_9_registry_Registry = __Pyx_ImportType(__pyx_t_1, "yapic.entity._registry", "Registry", sizeof(struct __pyx_obj_5yapic_6entity_9_registry_Registry), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_registry_Registry) __PYX_ERR(4, 7, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_registry_Registry = (struct __pyx_vtabstruct_5yapic_6entity_9_registry_Registry*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_registry_Registry->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_registry_Registry)) __PYX_ERR(4, 7, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_registry_RegistryDiff = __Pyx_ImportType(__pyx_t_1, "yapic.entity._registry", "RegistryDiff", sizeof(struct __pyx_obj_5yapic_6entity_9_registry_RegistryDiff), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_registry_RegistryDiff) __PYX_ERR(4, 23, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_registry_RegistryDiff = (struct __pyx_vtabstruct_5yapic_6entity_9_registry_RegistryDiff*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_registry_RegistryDiff->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_registry_RegistryDiff)) __PYX_ERR(4, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._field"); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_6_field_Field = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "Field", sizeof(struct __pyx_obj_5yapic_6entity_6_field_Field), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_Field) __PYX_ERR(5, 7, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_Field = (struct __pyx_vtabstruct_5yapic_6entity_6_field_Field*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_Field->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_Field)) __PYX_ERR(5, 7, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_FieldExtension = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "FieldExtension", sizeof(struct __pyx_obj_5yapic_6entity_6_field_FieldExtension), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_FieldExtension) __PYX_ERR(5, 27, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_FieldExtension = (struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldExtension*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_FieldExtension->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_FieldExtension)) __PYX_ERR(5, 27, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_FieldImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "FieldImpl", sizeof(struct __pyx_obj_5yapic_6entity_6_field_FieldImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_FieldImpl) __PYX_ERR(5, 31, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_FieldImpl = (struct __pyx_vtabstruct_5yapic_6entity_6_field_FieldImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_FieldImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_FieldImpl)) __PYX_ERR(5, 31, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_StorageType = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "StorageType", sizeof(struct __pyx_obj_5yapic_6entity_6_field_StorageType), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_StorageType) __PYX_ERR(5, 35, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_StorageType = (struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageType*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_StorageType->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_StorageType)) __PYX_ERR(5, 35, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_StorageTypeFactory = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "StorageTypeFactory", sizeof(struct __pyx_obj_5yapic_6entity_6_field_StorageTypeFactory), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_StorageTypeFactory) __PYX_ERR(5, 41, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_StorageTypeFactory = (struct __pyx_vtabstruct_5yapic_6entity_6_field_StorageTypeFactory*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_StorageTypeFactory->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_StorageTypeFactory)) __PYX_ERR(5, 41, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_PrimaryKey = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "PrimaryKey", sizeof(struct __pyx_obj_5yapic_6entity_6_field_PrimaryKey), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_PrimaryKey) __PYX_ERR(5, 45, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_PrimaryKey = (struct __pyx_vtabstruct_5yapic_6entity_6_field_PrimaryKey*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_PrimaryKey->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_PrimaryKey)) __PYX_ERR(5, 45, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_AutoIncrement = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "AutoIncrement", sizeof(struct __pyx_obj_5yapic_6entity_6_field_AutoIncrement), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_AutoIncrement) __PYX_ERR(5, 49, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_AutoIncrement = (struct __pyx_vtabstruct_5yapic_6entity_6_field_AutoIncrement*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_AutoIncrement->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_AutoIncrement)) __PYX_ERR(5, 49, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_Index = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "Index", sizeof(struct __pyx_obj_5yapic_6entity_6_field_Index), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_Index) __PYX_ERR(5, 53, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_Index = (struct __pyx_vtabstruct_5yapic_6entity_6_field_Index*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_Index->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_Index)) __PYX_ERR(5, 53, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_Unique = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "Unique", sizeof(struct __pyx_obj_5yapic_6entity_6_field_Unique), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_Unique) __PYX_ERR(5, 61, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_Unique = (struct __pyx_vtabstruct_5yapic_6entity_6_field_Unique*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_Unique->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_Unique)) __PYX_ERR(5, 61, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_6_field_ForeignKey = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field", "ForeignKey", sizeof(struct __pyx_obj_5yapic_6entity_6_field_ForeignKey), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_6_field_ForeignKey) __PYX_ERR(5, 65, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_6_field_ForeignKey = (struct __pyx_vtabstruct_5yapic_6entity_6_field_ForeignKey*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_6_field_ForeignKey->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_6_field_ForeignKey)) __PYX_ERR(5, 65, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._field_impl"); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_11_field_impl_StringImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "StringImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_StringImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_StringImpl) __PYX_ERR(6, 5, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_StringImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_StringImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_StringImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_StringImpl)) __PYX_ERR(6, 5, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_BytesImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "BytesImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_BytesImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_BytesImpl) __PYX_ERR(6, 9, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_BytesImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_BytesImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_BytesImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_BytesImpl)) __PYX_ERR(6, 9, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_IntImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "IntImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_IntImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_IntImpl) __PYX_ERR(6, 13, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_IntImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_IntImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_IntImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_IntImpl)) __PYX_ERR(6, 13, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_BoolImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "BoolImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_BoolImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_BoolImpl) __PYX_ERR(6, 17, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_BoolImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_BoolImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_BoolImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_BoolImpl)) __PYX_ERR(6, 17, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_DateImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "DateImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_DateImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_DateImpl) __PYX_ERR(6, 21, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_DateImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_DateImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_DateImpl)) __PYX_ERR(6, 21, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_DateTimeImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "DateTimeImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_DateTimeImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_DateTimeImpl) __PYX_ERR(6, 25, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_DateTimeImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateTimeImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_DateTimeImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_DateTimeImpl)) __PYX_ERR(6, 25, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_DateTimeTzImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "DateTimeTzImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_DateTimeTzImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_DateTimeTzImpl) __PYX_ERR(6, 29, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_DateTimeTzImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_DateTimeTzImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_DateTimeTzImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_DateTimeTzImpl)) __PYX_ERR(6, 29, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_TimeImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "TimeImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_TimeImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_TimeImpl) __PYX_ERR(6, 33, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_TimeImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_TimeImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_TimeImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_TimeImpl)) __PYX_ERR(6, 33, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_TimeTzImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "TimeTzImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_TimeTzImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_TimeTzImpl) __PYX_ERR(6, 37, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_TimeTzImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_TimeTzImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_TimeTzImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_TimeTzImpl)) __PYX_ERR(6, 37, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_NumericImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "NumericImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_NumericImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_NumericImpl) __PYX_ERR(6, 41, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_NumericImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_NumericImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_NumericImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_NumericImpl)) __PYX_ERR(6, 41, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_FloatImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "FloatImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_FloatImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_FloatImpl) __PYX_ERR(6, 45, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_FloatImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_FloatImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_FloatImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_FloatImpl)) __PYX_ERR(6, 45, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_UUIDImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "UUIDImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_UUIDImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_UUIDImpl) __PYX_ERR(6, 49, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_UUIDImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_UUIDImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_UUIDImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_UUIDImpl)) __PYX_ERR(6, 49, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_ChoiceImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "ChoiceImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_ChoiceImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_ChoiceImpl) __PYX_ERR(6, 53, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_ChoiceImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_ChoiceImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_ChoiceImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_ChoiceImpl)) __PYX_ERR(6, 53, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_EntityTypeImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "EntityTypeImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_EntityTypeImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_EntityTypeImpl) __PYX_ERR(6, 58, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_EntityTypeImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_EntityTypeImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_EntityTypeImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_EntityTypeImpl)) __PYX_ERR(6, 58, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_JsonImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "JsonImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_JsonImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_JsonImpl) __PYX_ERR(6, 62, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_JsonImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_JsonImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_JsonImpl)) __PYX_ERR(6, 62, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_JsonArrayImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "JsonArrayImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_JsonArrayImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_JsonArrayImpl) __PYX_ERR(6, 66, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_JsonArrayImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_JsonArrayImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_JsonArrayImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_JsonArrayImpl)) __PYX_ERR(6, 66, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_CompositeImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "CompositeImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_CompositeImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_CompositeImpl) __PYX_ERR(6, 70, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_CompositeImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_CompositeImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_CompositeImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_CompositeImpl)) __PYX_ERR(6, 70, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_NamedTupleImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "NamedTupleImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_NamedTupleImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_NamedTupleImpl) __PYX_ERR(6, 74, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_NamedTupleImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_NamedTupleImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_NamedTupleImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_NamedTupleImpl)) __PYX_ERR(6, 74, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_AutoImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "AutoImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_AutoImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_AutoImpl) __PYX_ERR(6, 78, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_AutoImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_AutoImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_AutoImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_AutoImpl)) __PYX_ERR(6, 78, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_11_field_impl_ArrayImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._field_impl", "ArrayImpl", sizeof(struct __pyx_obj_5yapic_6entity_11_field_impl_ArrayImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_11_field_impl_ArrayImpl) __PYX_ERR(6, 82, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_11_field_impl_ArrayImpl = (struct __pyx_vtabstruct_5yapic_6entity_11_field_impl_ArrayImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_11_field_impl_ArrayImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_11_field_impl_ArrayImpl)) __PYX_ERR(6, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._factory"); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_8_factory_Factory = __Pyx_ImportType(__pyx_t_1, "yapic.entity._factory", "Factory", sizeof(struct __pyx_obj_5yapic_6entity_8_factory_Factory), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_8_factory_Factory) __PYX_ERR(7, 42, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_8_factory_Factory = (struct __pyx_vtabstruct_5yapic_6entity_8_factory_Factory*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_8_factory_Factory->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_8_factory_Factory)) __PYX_ERR(7, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._relation"); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_9_relation_Relation = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "Relation", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_Relation), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_Relation) __PYX_ERR(8, 10, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_Relation = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_Relation*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_Relation->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_Relation)) __PYX_ERR(8, 10, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_RelatedAttribute = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "RelatedAttribute", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttribute), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_RelatedAttribute) __PYX_ERR(8, 15, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_RelatedAttribute = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedAttribute*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_RelatedAttribute->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_RelatedAttribute)) __PYX_ERR(8, 15, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_RelatedAttributeImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "RelatedAttributeImpl", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_RelatedAttributeImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_RelatedAttributeImpl) __PYX_ERR(8, 21, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_RelatedAttributeImpl = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedAttributeImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_RelatedAttributeImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_RelatedAttributeImpl)) __PYX_ERR(8, 21, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_RelationImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "RelationImpl", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_RelationImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_RelationImpl) __PYX_ERR(8, 25, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_RelationImpl = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelationImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_RelationImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_RelationImpl)) __PYX_ERR(8, 25, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_ManyToOne = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "ManyToOne", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_ManyToOne), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_ManyToOne) __PYX_ERR(8, 40, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_ManyToOne = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_ManyToOne*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_ManyToOne->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_ManyToOne)) __PYX_ERR(8, 40, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_OneToMany = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "OneToMany", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_OneToMany), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_OneToMany) __PYX_ERR(8, 44, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_OneToMany = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_OneToMany*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_OneToMany->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_OneToMany)) __PYX_ERR(8, 44, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_ManyToMany = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "ManyToMany", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_ManyToMany), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_ManyToMany) __PYX_ERR(8, 47, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_ManyToMany = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_ManyToMany*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_ManyToMany->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_ManyToMany)) __PYX_ERR(8, 47, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_ValueStore = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "ValueStore", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_ValueStore), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_ValueStore) __PYX_ERR(8, 64, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_ValueStore = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_ValueStore*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_ValueStore->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_ValueStore)) __PYX_ERR(8, 64, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_RelatedItem = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "RelatedItem", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_RelatedItem), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_RelatedItem) __PYX_ERR(8, 75, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_RelatedItem = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedItem*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_RelatedItem->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_RelatedItem)) __PYX_ERR(8, 75, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_RelatedList = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "RelatedList", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_RelatedList), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_RelatedList) __PYX_ERR(8, 79, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_RelatedList = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedList*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_RelatedList->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_RelatedList)) __PYX_ERR(8, 79, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_RelatedDict = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "RelatedDict", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_RelatedDict), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_RelatedDict) __PYX_ERR(8, 83, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_RelatedDict = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_RelatedDict*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_RelatedDict->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_RelatedDict)) __PYX_ERR(8, 83, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_9_relation_Loading = __Pyx_ImportType(__pyx_t_1, "yapic.entity._relation", "Loading", sizeof(struct __pyx_obj_5yapic_6entity_9_relation_Loading), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_9_relation_Loading) __PYX_ERR(8, 87, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_9_relation_Loading = (struct __pyx_vtabstruct_5yapic_6entity_9_relation_Loading*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_9_relation_Loading->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_9_relation_Loading)) __PYX_ERR(8, 87, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._virtual_attr"); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttribute = __Pyx_ImportType(__pyx_t_1, "yapic.entity._virtual_attr", "VirtualAttribute", sizeof(struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttribute), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttribute) __PYX_ERR(9, 5, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_13_virtual_attr_VirtualAttribute = (struct __pyx_vtabstruct_5yapic_6entity_13_virtual_attr_VirtualAttribute*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttribute->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_13_virtual_attr_VirtualAttribute)) __PYX_ERR(9, 5, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl = __Pyx_ImportType(__pyx_t_1, "yapic.entity._virtual_attr", "VirtualAttributeImpl", sizeof(struct __pyx_obj_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl) __PYX_ERR(9, 14, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl = (struct __pyx_vtabstruct_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_13_virtual_attr_VirtualAttributeImpl)) __PYX_ERR(9, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._trigger"); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5yapic_6entity_8_trigger_Trigger = __Pyx_ImportType(__pyx_t_1, "yapic.entity._trigger", "Trigger", sizeof(struct __pyx_obj_5yapic_6entity_8_trigger_Trigger), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_8_trigger_Trigger) __PYX_ERR(10, 4, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_8_trigger_Trigger = (struct __pyx_vtabstruct_5yapic_6entity_8_trigger_Trigger*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_8_trigger_Trigger->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_8_trigger_Trigger)) __PYX_ERR(10, 4, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_8_trigger_OnUpdateTrigger = __Pyx_ImportType(__pyx_t_1, "yapic.entity._trigger", "OnUpdateTrigger", sizeof(struct __pyx_obj_5yapic_6entity_8_trigger_OnUpdateTrigger), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_8_trigger_OnUpdateTrigger) __PYX_ERR(10, 21, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_8_trigger_OnUpdateTrigger = (struct __pyx_vtabstruct_5yapic_6entity_8_trigger_OnUpdateTrigger*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_8_trigger_OnUpdateTrigger->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_8_trigger_OnUpdateTrigger)) __PYX_ERR(10, 21, __pyx_L1_error)
  __pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger = __Pyx_ImportType(__pyx_t_1, "yapic.entity._trigger", "PolymorphParentDeleteTrigger", sizeof(struct __pyx_obj_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger) __PYX_ERR(10, 25, __pyx_L1_error)
  __pyx_vtabptr_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger = (struct __pyx_vtabstruct_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger*)__Pyx_GetVtable(__pyx_ptype_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger->tp_dict); if (unlikely(!__pyx_vtabptr_5yapic_6entity_8_trigger_PolymorphParentDeleteTrigger)) __PYX_ERR(10, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __pyx_t_1 = PyImport_ImportModule("yapic.entity._factory"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_ImportFunction(__pyx_t_1, "is_forward_decl", (void (**)(void))&__pyx_f_5yapic_6entity_8_factory_is_forward_decl, "int (PyObject *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "get_type_hints", (void (**)(void))&__pyx_f_5yapic_6entity_8_factory_get_type_hints, "PyObject *(PyObject *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "new_instance_from_forward", (void (**)(void))&__pyx_f_5yapic_6entity_8_factory_new_instance_from_forward, "PyObject *(PyObject *, PyObject *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC init_entity(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC init_entity(void)
#else
__Pyx_PyMODINIT_FUNC PyInit__entity(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit__entity(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec__entity(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module '_entity' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit__entity(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_entity", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_yapic__entity___entity) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "yapic.entity._entity")) {
      if (unlikely(PyDict_SetItemString(modules, "yapic.entity._entity", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  if (unlikely(__Pyx_modinit_function_export_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  if (unlikely(__Pyx_modinit_function_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "yapic/entity/_entity.pyx":2
 * import cython
 * import random             # <<<<<<<<<<<<<<
 * import string
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_random, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_random, __pyx_t_1) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":3
 * import cython
 * import random
 * import string             # <<<<<<<<<<<<<<
 * 
 * from collections.abc import ItemsView
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_string, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_string, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":5
 * import string
 * 
 * from collections.abc import ItemsView             # <<<<<<<<<<<<<<
 * from operator import attrgetter
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_ItemsView);
  __Pyx_GIVEREF(__pyx_n_s_ItemsView);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_ItemsView);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_collections_abc, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ItemsView); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ItemsView, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":6
 * 
 * from collections.abc import ItemsView
 * from operator import attrgetter             # <<<<<<<<<<<<<<
 * 
 * from cpython.object cimport PyObject
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_attrgetter);
  __Pyx_GIVEREF(__pyx_n_s_attrgetter);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_attrgetter);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_operator, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_attrgetter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_attrgetter, __pyx_t_2) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":19
 * from ._expression cimport Visitor, Expression
 * from ._registry cimport Registry
 * from ._entity_serializer import EntitySerializer, SerializerCtx             # <<<<<<<<<<<<<<
 * from ._virtual_attr cimport VirtualAttribute
 * from ._trigger cimport PolymorphParentDeleteTrigger
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_EntitySerializer);
  __Pyx_GIVEREF(__pyx_n_s_EntitySerializer);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_EntitySerializer);
  __Pyx_INCREF(__pyx_n_s_SerializerCtx);
  __Pyx_GIVEREF(__pyx_n_s_SerializerCtx);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_SerializerCtx);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_entity_serializer, __pyx_t_1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_EntitySerializer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EntitySerializer, __pyx_t_1) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_SerializerCtx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SerializerCtx, __pyx_t_1) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":27
 *     pass
 * 
 * REGISTRY = Registry()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_5yapic_6entity_9_registry_Registry)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REGISTRY, __pyx_t_2) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yapic/entity/_entity.pyx":237
 * 
 *     @staticmethod
 *     def __prepare__(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         scope = type.__prepare__(*args, **kwargs)
 *         scope["__slots__"] = ()
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_5yapic_6entity_7_entity_10EntityType_5__prepare__, NULL, __pyx_n_s_yapic_entity__entity); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityType->tp_dict, __pyx_n_s_prepare, __pyx_t_2) < 0) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5yapic_6entity_7_entity_EntityType);

  /* "yapic/entity/_entity.pyx":236
 *                 return f"{schema}.{self.__name__}"
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def __prepare__(*args, **kwargs):
 *         scope = type.__prepare__(*args, **kwargs)
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityType, __pyx_n_s_prepare); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityType->tp_dict, __pyx_n_s_prepare, __pyx_t_1) < 0) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_5yapic_6entity_7_entity_EntityType);

  /* "yapic/entity/_entity.pyx":385
 * 
 * 
 * cdef int ENTITY_ATTRIBUTE_UID_COUNTER = 1             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_5yapic_6entity_7_entity_ENTITY_ATTRIBUTE_UID_COUNTER = 1;

  /* "yapic/entity/_entity.pyx":497
 * cdef class EntityAttributeExt:
 *     @classmethod
 *     def validate_group(self, EntityAttributeExtGroup group):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
  __Pyx_GetNameInClass(__pyx_t_1, (PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt, __pyx_n_s_validate_group); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "yapic/entity/_entity.pyx":496
 * 
 * cdef class EntityAttributeExt:
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def validate_group(self, EntityAttributeExtGroup group):
 *         pass
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt->tp_dict, __pyx_n_s_validate_group, __pyx_t_2) < 0) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_5yapic_6entity_7_entity_EntityAttributeExt);

  /* "yapic/entity/_entity.pyx":899
 * 
 *     @classmethod
 *     def __init_subclass__(cls, *, str name=None, Registry registry=None, bint _root=False, **meta):             # <<<<<<<<<<<<<<
 *         cdef EntityType ent = cls
 *         cdef EntityType parent_entity
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityBase, __pyx_n_s_init_subclass); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "yapic/entity/_entity.pyx":898
 *             self.__state__.init()
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def __init_subclass__(cls, *, str name=None, Registry registry=None, bint _root=False, **meta):
 *         cdef EntityType ent = cls
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityBase->tp_dict, __pyx_n_s_init_subclass, __pyx_t_1) < 0) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_5yapic_6entity_7_entity_EntityBase);

  /* "yapic/entity/_entity.pyx":1050
 * 
 * 
 * class Entity(EntityBase, metaclass=EntityType, registry=REGISTRY, _root=True):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityBase));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityBase));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityBase));
  __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_REGISTRY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_registry_2, __pyx_t_3) < 0) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_root, Py_True) < 0) __PYX_ERR(0, 1050, __pyx_L1_error)
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityType), __pyx_t_1, __pyx_n_s_Entity, __pyx_n_s_Entity, __pyx_t_2, __pyx_n_s_yapic_entity__entity, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject *)__pyx_ptype_5yapic_6entity_7_entity_EntityType), __pyx_n_s_Entity, __pyx_t_1, __pyx_t_3, __pyx_t_2, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Entity, __pyx_t_4) < 0) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yapic/entity/_entity.pyx":1
 * import cython             # <<<<<<<<<<<<<<
 * import random
 * import string
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "_field.pxd":17
 * 
 * 
 * cdef inline bint field_eq(Field a, Field b):             # <<<<<<<<<<<<<<
 *     return a._uid_ is b._uid_
 *     # return get_alias_target(a._entity_) is get_alias_target(b._entity_) \
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init yapic.entity._entity", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init yapic.entity._entity");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      CYTHON_UNUSED Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind;
    Py_ssize_t i, char_pos;
    void *result_udata;
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely(char_pos + ulength < 0))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    result_ulength++;
    value_count++;
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* PyObjectFormatAndDecref */
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f) {
    if (unlikely(!s)) return NULL;
    if (likely(PyUnicode_CheckExact(s))) return s;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyString_CheckExact(s))) {
        PyObject *result = PyUnicode_FromEncodedObject(s, NULL, "strict");
        Py_DECREF(s);
        return result;
    }
    #endif
    return __Pyx_PyObject_FormatAndDecref(s, f);
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f) {
    PyObject *result = PyObject_Format(s, f);
    Py_DECREF(s);
    return result;
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* pop_index */
static PyObject* __Pyx__PyObject_PopNewIndex(PyObject* L, PyObject* py_ix) {
    PyObject *r;
    if (unlikely(!py_ix)) return NULL;
    r = __Pyx__PyObject_PopIndex(L, py_ix);
    Py_DECREF(py_ix);
    return r;
}
static PyObject* __Pyx__PyObject_PopIndex(PyObject* L, PyObject* py_ix) {
    return __Pyx_PyObject_CallMethod1(L, __pyx_n_s_pop, py_ix);
}
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static PyObject* __Pyx__PyList_PopIndex(PyObject* L, PyObject* py_ix, Py_ssize_t ix) {
    Py_ssize_t size = PyList_GET_SIZE(L);
    if (likely(size > (((PyListObject*)L)->allocated >> 1))) {
        Py_ssize_t cix = ix;
        if (cix < 0) {
            cix += size;
        }
        if (likely(__Pyx_is_valid_index(cix, size))) {
            PyObject* v = PyList_GET_ITEM(L, cix);
            __Pyx_SET_SIZE(L, Py_SIZE(L) - 1);
            size -= 1;
            memmove(&PyList_GET_ITEM(L, cix), &PyList_GET_ITEM(L, cix+1), (size_t)(size-cix)*sizeof(PyObject*));
            return v;
        }
    }
    if (py_ix == Py_None) {
        return __Pyx__PyObject_PopNewIndex(L, PyInt_FromSsize_t(ix));
    } else {
        return __Pyx__PyObject_PopIndex(L, py_ix);
    }
}
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* SliceObject */
static CYTHON_INLINE int __Pyx_PyObject_SetSlice(PyObject* obj, PyObject* value,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_ass_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_ass_slice(obj, cstart, cstop, value);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_ass_subscript))
#endif
    {
        int result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_ass_subscript(obj, py_slice, value);
#else
        result = value ? PyObject_SetItem(obj, py_slice, value) : PyObject_DelItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object does not support slice %.10s",
        Py_TYPE(obj)->tp_name, value ? "assignment" : "deletion");
bad:
    return -1;
}

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* PyUnicode_Unicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj) {
    if (unlikely(obj == Py_None))
        obj = __pyx_kp_u_None;
    return __Pyx_NewRef(obj);
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* py_dict_pop */
static CYTHON_INLINE PyObject *__Pyx_PyDict_Pop(PyObject *d, PyObject *key, PyObject *default_value) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B3
    if ((1)) {
        return _PyDict_Pop(d, key, default_value);
    } else
#endif
    if (default_value) {
        return __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_pop, d, key, default_value);
    } else {
        return __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_pop, d, key);
    }
}

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* pyfrozenset_new */
static CYTHON_INLINE PyObject* __Pyx_PyFrozenSet_New(PyObject* it) {
    if (it) {
        PyObject* result;
#if CYTHON_COMPILING_IN_PYPY
        PyObject* args;
        args = PyTuple_Pack(1, it);
        if (unlikely(!args))
            return NULL;
        result = PyObject_Call((PyObject*)&PyFrozenSet_Type, args, NULL);
        Py_DECREF(args);
        return result;
#else
        if (PyFrozenSet_CheckExact(it)) {
            Py_INCREF(it);
            return it;
        }
        result = PyFrozenSet_New(it);
        if (unlikely(!result))
            return NULL;
        if (likely(PySet_GET_SIZE(result)))
            return result;
        Py_DECREF(result);
#endif
    }
#if CYTHON_USE_TYPE_SLOTS
    return PyFrozenSet_Type.tp_new(&PyFrozenSet_Type, __pyx_empty_tuple, NULL);
#else
    return PyObject_Call((PyObject*)&PyFrozenSet_Type, __pyx_empty_tuple, NULL);
#endif
}

/* PySetContains */
static int __Pyx_PySet_ContainsUnhashable(PyObject *set, PyObject *key) {
    int result = -1;
    if (PySet_Check(key) && PyErr_ExceptionMatches(PyExc_TypeError)) {
        PyObject *tmpkey;
        PyErr_Clear();
        tmpkey = __Pyx_PyFrozenSet_New(key);
        if (tmpkey != NULL) {
            result = PySet_Contains(set, tmpkey);
            Py_DECREF(tmpkey);
        }
    }
    return result;
}
static CYTHON_INLINE int __Pyx_PySet_ContainsTF(PyObject* key, PyObject* set, int eq) {
    int result = PySet_Contains(set, key);
    if (unlikely(result < 0)) {
        result = __Pyx_PySet_ContainsUnhashable(set, key);
    }
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* py_set_discard_unhashable */
static int __Pyx_PySet_DiscardUnhashable(PyObject *set, PyObject *key) {
    PyObject *tmpkey;
    int rv;
    if (likely(!PySet_Check(key) || !PyErr_ExceptionMatches(PyExc_TypeError)))
        return -1;
    PyErr_Clear();
    tmpkey = __Pyx_PyFrozenSet_New(key);
    if (tmpkey == NULL)
        return -1;
    rv = PySet_Discard(set, tmpkey);
    Py_DECREF(tmpkey);
    return rv;
}

/* py_set_discard */
static CYTHON_INLINE int __Pyx_PySet_Discard(PyObject *set, PyObject *key) {
    int found = PySet_Discard(set, key);
    if (unlikely(found < 0)) {
        found = __Pyx_PySet_DiscardUnhashable(set, key);
    }
    return found;
}

/* CallNextTpDealloc */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

/* CallNextTpTraverse */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* GetVTable */
static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* GetNameInClass */
static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    PyObject *result;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* ClassMethod */
static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYSTON || CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method))
#else
    #if PY_MAJOR_VERSION == 2
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    #else
    PyTypeObject *methoddescr_type = &PyMethodDescr_Type;
    #endif
    if (__Pyx_TypeCheck(method, methoddescr_type))
#endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else {
        return PyClassMethod_New(method);
    }
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* FetchCommonType */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* CoroutineBase */
#include <structmember.h>
#include <frameobject.h>
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(CYTHON_UNUSED __pyx_CoroutineObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(CYTHON_UNUSED PyObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(CYTHON_UNUSED PyObject *gen, PyObject *value, CYTHON_UNUSED int closing) {
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_type) {
        #if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
        #else
        if (exc_state->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_state->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body((PyObject *) self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *exc_tb = exc_state->exc_traceback;
    if (likely(exc_tb)) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
#endif
    }
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(CYTHON_UNUSED PyObject* gen, PyObject *retval) {
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = _PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, CYTHON_UNUSED PyObject *arg) {
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = PyObject_CallObject(meth, args);
            } else {
                ret = PyObject_CallFunctionObjArgs(meth, typ, val, tb, NULL);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_name;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_qualname;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* FunctionExport */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(tmp.p, sig, 0);
#else
    cobj = PyCObject_FromVoidPtrAndDesc(tmp.p, (void *)sig, 0);
#endif
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

/* FunctionImport */
#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);}
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
